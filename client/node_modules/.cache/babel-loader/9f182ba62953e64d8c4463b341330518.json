{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\n\nexport default class EnterCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  execute() {\n    const model = this.editor.model;\n    const doc = model.document;\n    model.change(writer => {\n      enterBlock(this.editor.model, writer, doc.selection, model.schema);\n      this.fire('afterExecute', {\n        writer\n      });\n    });\n  }\n\n} // Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\n\nfunction enterBlock(model, writer, selection, schema) {\n  const isSelectionEmpty = selection.isCollapsed;\n  const range = selection.getFirstRange();\n  const startElement = range.start.parent;\n  const endElement = range.end.parent; // Don't touch the roots and other limit elements.\n\n  if (schema.isLimit(startElement) || schema.isLimit(endElement)) {\n    // Delete the selected content but only if inside a single limit element.\n    // Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n    // This is an edge case and it's hard to tell what should actually happen because such a selection\n    // is not entirely valid.\n    if (!isSelectionEmpty && startElement == endElement) {\n      model.deleteContent(selection);\n    }\n\n    return;\n  }\n\n  if (isSelectionEmpty) {\n    const attributesToCopy = getCopyOnEnterAttributes(writer.model.schema, selection.getAttributes());\n    splitBlock(writer, range.start);\n    writer.setSelectionAttribute(attributesToCopy);\n  } else {\n    const leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    const isContainedWithinOneElement = startElement == endElement;\n    model.deleteContent(selection, {\n      leaveUnmerged\n    });\n\n    if (leaveUnmerged) {\n      // Partially selected elements.\n      //\n      // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n      if (isContainedWithinOneElement) {\n        splitBlock(writer, selection.focus);\n      } // Selection over multiple elements.\n      //\n      // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n      else {\n        writer.setSelection(endElement, 0);\n      }\n    }\n  }\n}\n\nfunction splitBlock(writer, splitPos) {\n  writer.split(splitPos);\n  writer.setSelection(splitPos.parent.nextSibling, 0);\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js"],"names":["Command","getCopyOnEnterAttributes","EnterCommand","execute","model","editor","doc","document","change","writer","enterBlock","selection","schema","fire","isSelectionEmpty","isCollapsed","range","getFirstRange","startElement","start","parent","endElement","end","isLimit","deleteContent","attributesToCopy","getAttributes","splitBlock","setSelectionAttribute","leaveUnmerged","isAtStart","isAtEnd","isContainedWithinOneElement","focus","setSelection","splitPos","split","nextSibling"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,sCAApB;AACA,SAASC,wBAAT,QAAyC,SAAzC;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,YAAN,SAA2BF,OAA3B,CAAmC;AACjD;AACD;AACA;AACCG,EAAAA,OAAO,GAAG;AACT,UAAMC,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAA1B;AACA,UAAME,GAAG,GAAGF,KAAK,CAACG,QAAlB;AAEAH,IAAAA,KAAK,CAACI,MAAN,CAAcC,MAAM,IAAI;AACvBC,MAAAA,UAAU,CAAE,KAAKL,MAAL,CAAYD,KAAd,EAAqBK,MAArB,EAA6BH,GAAG,CAACK,SAAjC,EAA4CP,KAAK,CAACQ,MAAlD,CAAV;AACA,WAAKC,IAAL,CAAW,cAAX,EAA2B;AAAEJ,QAAAA;AAAF,OAA3B;AACA,KAHD;AAIA;;AAZgD,C,CAelD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAqBN,KAArB,EAA4BK,MAA5B,EAAoCE,SAApC,EAA+CC,MAA/C,EAAwD;AACvD,QAAME,gBAAgB,GAAGH,SAAS,CAACI,WAAnC;AACA,QAAMC,KAAK,GAAGL,SAAS,CAACM,aAAV,EAAd;AACA,QAAMC,YAAY,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAjC;AACA,QAAMC,UAAU,GAAGL,KAAK,CAACM,GAAN,CAAUF,MAA7B,CAJuD,CAMvD;;AACA,MAAKR,MAAM,CAACW,OAAP,CAAgBL,YAAhB,KAAkCN,MAAM,CAACW,OAAP,CAAgBF,UAAhB,CAAvC,EAAsE;AACrE;AACA;AACA;AACA;AACA,QAAK,CAACP,gBAAD,IAAqBI,YAAY,IAAIG,UAA1C,EAAuD;AACtDjB,MAAAA,KAAK,CAACoB,aAAN,CAAqBb,SAArB;AACA;;AAED;AACA;;AAED,MAAKG,gBAAL,EAAwB;AACvB,UAAMW,gBAAgB,GAAGxB,wBAAwB,CAAEQ,MAAM,CAACL,KAAP,CAAaQ,MAAf,EAAuBD,SAAS,CAACe,aAAV,EAAvB,CAAjD;AACAC,IAAAA,UAAU,CAAElB,MAAF,EAAUO,KAAK,CAACG,KAAhB,CAAV;AACAV,IAAAA,MAAM,CAACmB,qBAAP,CAA8BH,gBAA9B;AACA,GAJD,MAIO;AACN,UAAMI,aAAa,GAAG,EAAGb,KAAK,CAACG,KAAN,CAAYW,SAAZ,IAAyBd,KAAK,CAACM,GAAN,CAAUS,OAAtC,CAAtB;AACA,UAAMC,2BAA2B,GAAKd,YAAY,IAAIG,UAAtD;AAEAjB,IAAAA,KAAK,CAACoB,aAAN,CAAqBb,SAArB,EAAgC;AAAEkB,MAAAA;AAAF,KAAhC;;AAEA,QAAKA,aAAL,EAAqB;AACpB;AACA;AACA;AACA,UAAKG,2BAAL,EAAmC;AAClCL,QAAAA,UAAU,CAAElB,MAAF,EAAUE,SAAS,CAACsB,KAApB,CAAV;AACA,OAFD,CAGA;AACA;AACA;AALA,WAMK;AACJxB,QAAAA,MAAM,CAACyB,YAAP,CAAqBb,UAArB,EAAiC,CAAjC;AACA;AACD;AACD;AACD;;AAED,SAASM,UAAT,CAAqBlB,MAArB,EAA6B0B,QAA7B,EAAwC;AACvC1B,EAAAA,MAAM,CAAC2B,KAAP,CAAcD,QAAd;AACA1B,EAAAA,MAAM,CAACyB,YAAP,CAAqBC,QAAQ,CAACf,MAAT,CAAgBiB,WAArC,EAAkD,CAAlD;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( model, writer, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\n\t\t\tmodel.deleteContent( selection );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\n\t\tsplitBlock( writer, range.start );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\tif ( leaveUnmerged ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( writer, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( writer, splitPos ) {\n\twriter.split( splitPos );\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\n}\n"]},"metadata":{},"sourceType":"module"}