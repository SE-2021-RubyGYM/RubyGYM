{"ast":null,"code":"import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\n/**\r\n * `touch` module is used to handle touch interactions.\r\n */\n\nvar ScheduleTouch =\n/** @class */\nfunction () {\n  function ScheduleTouch(parent) {\n    this.parent = parent;\n    this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\n    this.touchObj = new Touch(this.element, {\n      scroll: this.scrollHandler.bind(this),\n      swipe: this.swipeHandler.bind(this),\n      tapHold: this.tapHoldHandler.bind(this),\n      swipeSettings: {\n        swipeThresholdDistance: 1\n      }\n    });\n    EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\n    this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\n    this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\n  }\n\n  ScheduleTouch.prototype.scrollHandler = function (e) {\n    if (this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action || e.originalEvent && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) || closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS))) {\n      return;\n    }\n\n    if (!this.timeStampStart) {\n      this.timeStampStart = Date.now();\n    }\n\n    if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\n      this.onTransitionEnd();\n    }\n\n    if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionBegin, args);\n\n      if (args.cancel) {\n        return;\n      }\n\n      var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n\n      if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\n        return;\n      } else {\n        this.isScrollTriggered = true;\n        e.originalEvent.preventDefault();\n        e.originalEvent.stopPropagation();\n      }\n    }\n\n    if (e.scrollDirection === this.touchLeftDirection) {\n      if (!this.nextPanel) {\n        this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\n        this.nextPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.nextPanel.element);\n      }\n\n      var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    } else if (e.scrollDirection === this.touchRightDirection) {\n      var prevWidth = 0;\n\n      if (!this.previousPanel) {\n        this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\n        this.previousPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.previousPanel.element);\n        prevWidth = this.previousPanel.element.offsetWidth;\n      }\n\n      var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    }\n  };\n\n  ScheduleTouch.prototype.swipeHandler = function (e) {\n    if (!this.isScrollTriggered || this.parent.uiStateValues.action) {\n      return;\n    }\n\n    this.isScrollTriggered = false;\n    var swipeDate = e.swipeDirection === 'Left' ? this.parent.activeView.renderDates[0] : this.parent.activeView.renderDates.slice(-1)[0];\n\n    if (e.swipeDirection === 'Left' && swipeDate < this.parent.maxDate || e.swipeDirection === 'Right' && swipeDate >= this.parent.minDate) {\n      var time = Date.now() - this.timeStampStart;\n      var offsetDist = e.distanceX * (Browser.isDevice ? 6 : 1.66);\n\n      if (offsetDist > time || e.distanceX > this.parent.element.offsetWidth / 2) {\n        this.swapPanels(e.swipeDirection);\n\n        if (offsetDist > time && e.distanceX > this.parent.element.offsetWidth / 2) {\n          this.element.style.transitionDuration = offsetDist / time / 10 + 's';\n        }\n\n        this.confirmSwipe(e.swipeDirection);\n      } else {\n        this.cancelSwipe();\n      }\n\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionComplete, args);\n    } else {\n      this.cancelSwipe();\n    }\n\n    this.timeStampStart = null;\n  };\n\n  ScheduleTouch.prototype.tapHoldHandler = function (e) {\n    var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\n\n    if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n      this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\n      return;\n    }\n  };\n\n  ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\n    if (!this.currentPanel) {\n      this.currentPanel = {\n        element: this.parent.activeView.getPanel(),\n        selectedDate: new Date(this.parent.selectedDate.getTime())\n      };\n      this.setDimensions(this.currentPanel.element);\n    } else {\n      this.parent.setProperties({\n        selectedDate: this.currentPanel.selectedDate\n      }, true);\n    }\n\n    this.parent.setProperties({\n      selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType)\n    }, true);\n\n    if (this.parent.headerModule) {\n      this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\n    }\n\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.renderLayout(clsName);\n  };\n\n  ScheduleTouch.prototype.swapPanels = function (direction) {\n    if (direction === this.touchLeftDirection) {\n      var temp = this.nextPanel;\n      this.nextPanel = this.currentPanel;\n      this.currentPanel = temp;\n    } else {\n      var temp = this.previousPanel;\n      this.previousPanel = this.currentPanel;\n      this.currentPanel = temp;\n    }\n  };\n\n  ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\n    var _this = this;\n\n    var previousDate = swipeDirection === this.touchLeftDirection ? this.nextPanel.selectedDate : this.previousPanel.selectedDate;\n    var args = {\n      action: 'date',\n      cancel: false,\n      previousDate: previousDate,\n      currentDate: this.currentPanel.selectedDate\n    };\n    this.parent.trigger(events.navigating, args, function (navArgs) {\n      if (navArgs.cancel) {\n        _this.swapPanels(swipeDirection);\n\n        _this.cancelSwipe();\n      } else {\n        _this.parent.activeView.setPanel(_this.currentPanel.element);\n\n        _this.parent.setProperties({\n          selectedDate: _this.currentPanel.selectedDate\n        }, true);\n\n        var translateX = void 0;\n\n        if (_this.parent.enableRtl) {\n          translateX = swipeDirection === _this.touchLeftDirection ? _this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth : 0;\n        } else {\n          translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\n        }\n\n        addClass([_this.element], cls.TRANSLATE_CLASS);\n        _this.element.style.transform = 'translatex(' + translateX + 'px)';\n\n        if (_this.parent.headerModule) {\n          _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\n        }\n\n        _this.parent.renderTemplates();\n\n        _this.parent.crudModule.refreshDataManager();\n      }\n    });\n  };\n\n  ScheduleTouch.prototype.cancelSwipe = function () {\n    this.parent.activeView.setPanel(this.currentPanel.element);\n    this.parent.setProperties({\n      selectedDate: this.currentPanel.selectedDate\n    }, true);\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.generateColumnLevels();\n    addClass([this.element], cls.TRANSLATE_CLASS);\n    var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\n    this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\n  };\n\n  ScheduleTouch.prototype.onTransitionEnd = function () {\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n    this.element.style.transitionDuration = '';\n    this.element.style.transform = '';\n\n    if (this.previousPanel) {\n      remove(this.previousPanel.element);\n      this.previousPanel = null;\n      removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    if (this.nextPanel) {\n      remove(this.nextPanel.element);\n      this.nextPanel = null;\n      removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    this.currentPanel = null;\n    this.parent.activeView.getPanel().style.width = '';\n  };\n\n  ScheduleTouch.prototype.getTranslateX = function (element) {\n    var style = window.getComputedStyle(element);\n    return new WebKitCSSMatrix(style.webkitTransform).m41;\n  };\n\n  ScheduleTouch.prototype.setDimensions = function (element) {\n    element.style.width = this.parent.element.clientWidth + 'px';\n  };\n\n  ScheduleTouch.prototype.resetValues = function () {\n    this.currentPanel = null;\n    this.previousPanel = null;\n    this.nextPanel = null;\n    this.timeStampStart = null;\n    this.element.style.transform = '';\n    util.removeChildren(this.element);\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n  };\n\n  ScheduleTouch.prototype.destroy = function () {\n    if (this.touchObj) {\n      this.touchObj.destroy();\n      this.touchObj = null;\n    }\n\n    EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\n    this.resetValues();\n  };\n\n  return ScheduleTouch;\n}();\n\nexport { ScheduleTouch };","map":{"version":3,"sources":["D:/4_PROJECTS/RubyGYM/client/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/touch.js"],"names":["addClass","removeClass","Touch","remove","EventHandler","Browser","closest","isNullOrUndefined","events","cls","util","ScheduleTouch","parent","element","querySelector","TABLE_CONTAINER_CLASS","touchObj","scroll","scrollHandler","bind","swipe","swipeHandler","tapHold","tapHoldHandler","swipeSettings","swipeThresholdDistance","add","onTransitionEnd","touchLeftDirection","enableRtl","touchRightDirection","prototype","e","currentView","uiStateValues","action","originalEvent","target","classList","contains","APPOINTMENT_CLASS","timeStampStart","Date","now","TRANSLATE_CLASS","scrollDirection","args","requestType","cancel","event","trigger","actionBegin","scrollDiv","CONTENT_WRAP_CLASS","scrollWidth","clientWidth","isScrollTriggered","preventDefault","stopPropagation","nextPanel","renderPanel","NEXT_PANEL_CLASS","activeView","getPanel","selectedDate","getTime","setDimensions","x","distanceX","style","transform","getTranslateX","prevWidth","previousPanel","PREVIOUS_PANEL_CLASS","offsetWidth","swipeDate","swipeDirection","renderDates","slice","maxDate","minDate","time","offsetDist","isDevice","swapPanels","transitionDuration","confirmSwipe","cancelSwipe","actionComplete","isAdaptive","quickPopup","tapHoldEventPopup","clsName","nextPrevType","currentPanel","setProperties","getNextPreviousDate","headerModule","setCalendarDate","getRenderDates","renderLayout","direction","temp","_this","previousDate","currentDate","navigating","navArgs","setPanel","translateX","offsetLeft","updateDateRange","getDateRangeText","renderTemplates","crudModule","refreshDataManager","generateColumnLevels","CURRENT_PANEL_CLASS","width","window","getComputedStyle","WebKitCSSMatrix","webkitTransform","m41","resetValues","removeChildren","destroy"],"mappings":"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","sourcesContent":["import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\r\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport * as events from '../base/constant';\r\nimport * as cls from '../base/css-constant';\r\nimport * as util from '../base/util';\r\n/**\r\n * `touch` module is used to handle touch interactions.\r\n */\r\nvar ScheduleTouch = /** @class */ (function () {\r\n    function ScheduleTouch(parent) {\r\n        this.parent = parent;\r\n        this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\r\n        this.touchObj = new Touch(this.element, {\r\n            scroll: this.scrollHandler.bind(this),\r\n            swipe: this.swipeHandler.bind(this),\r\n            tapHold: this.tapHoldHandler.bind(this),\r\n            swipeSettings: { swipeThresholdDistance: 1 }\r\n        });\r\n        EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\r\n        this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\r\n        this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\r\n    }\r\n    ScheduleTouch.prototype.scrollHandler = function (e) {\r\n        if (this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action ||\r\n            (e.originalEvent && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) ||\r\n                closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS)))) {\r\n            return;\r\n        }\r\n        if (!this.timeStampStart) {\r\n            this.timeStampStart = Date.now();\r\n        }\r\n        if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\r\n            this.onTransitionEnd();\r\n        }\r\n        if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\r\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\r\n            this.parent.trigger(events.actionBegin, args);\r\n            if (args.cancel) {\r\n                return;\r\n            }\r\n            var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\r\n            if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\r\n                return;\r\n            }\r\n            else {\r\n                this.isScrollTriggered = true;\r\n                e.originalEvent.preventDefault();\r\n                e.originalEvent.stopPropagation();\r\n            }\r\n        }\r\n        if (e.scrollDirection === this.touchLeftDirection) {\r\n            if (!this.nextPanel) {\r\n                this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\r\n                this.nextPanel = {\r\n                    element: this.parent.activeView.getPanel(),\r\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\r\n                };\r\n                this.setDimensions(this.nextPanel.element);\r\n            }\r\n            var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\r\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\r\n        }\r\n        else if (e.scrollDirection === this.touchRightDirection) {\r\n            var prevWidth = 0;\r\n            if (!this.previousPanel) {\r\n                this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\r\n                this.previousPanel = {\r\n                    element: this.parent.activeView.getPanel(),\r\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\r\n                };\r\n                this.setDimensions(this.previousPanel.element);\r\n                prevWidth = this.previousPanel.element.offsetWidth;\r\n            }\r\n            var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\r\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\r\n        }\r\n    };\r\n    ScheduleTouch.prototype.swipeHandler = function (e) {\r\n        if (!this.isScrollTriggered || this.parent.uiStateValues.action) {\r\n            return;\r\n        }\r\n        this.isScrollTriggered = false;\r\n        var swipeDate = e.swipeDirection === 'Left' ?\r\n            this.parent.activeView.renderDates[0] : this.parent.activeView.renderDates.slice(-1)[0];\r\n        if ((e.swipeDirection === 'Left' && swipeDate < this.parent.maxDate) ||\r\n            (e.swipeDirection === 'Right' && swipeDate >= this.parent.minDate)) {\r\n            var time = Date.now() - this.timeStampStart;\r\n            var offsetDist = (e.distanceX * (Browser.isDevice ? 6 : 1.66));\r\n            if (offsetDist > time || (e.distanceX > (this.parent.element.offsetWidth / 2))) {\r\n                this.swapPanels(e.swipeDirection);\r\n                if (offsetDist > time && (e.distanceX > (this.parent.element.offsetWidth / 2))) {\r\n                    this.element.style.transitionDuration = ((offsetDist / time) / 10) + 's';\r\n                }\r\n                this.confirmSwipe(e.swipeDirection);\r\n            }\r\n            else {\r\n                this.cancelSwipe();\r\n            }\r\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\r\n            this.parent.trigger(events.actionComplete, args);\r\n        }\r\n        else {\r\n            this.cancelSwipe();\r\n        }\r\n        this.timeStampStart = null;\r\n    };\r\n    ScheduleTouch.prototype.tapHoldHandler = function (e) {\r\n        var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\r\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\r\n            this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\r\n            return;\r\n        }\r\n    };\r\n    ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\r\n        if (!this.currentPanel) {\r\n            this.currentPanel = {\r\n                element: this.parent.activeView.getPanel(),\r\n                selectedDate: new Date(this.parent.selectedDate.getTime())\r\n            };\r\n            this.setDimensions(this.currentPanel.element);\r\n        }\r\n        else {\r\n            this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\r\n        }\r\n        this.parent.setProperties({ selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType) }, true);\r\n        if (this.parent.headerModule) {\r\n            this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\r\n        }\r\n        this.parent.activeView.getRenderDates();\r\n        this.parent.activeView.renderLayout(clsName);\r\n    };\r\n    ScheduleTouch.prototype.swapPanels = function (direction) {\r\n        if (direction === this.touchLeftDirection) {\r\n            var temp = this.nextPanel;\r\n            this.nextPanel = this.currentPanel;\r\n            this.currentPanel = temp;\r\n        }\r\n        else {\r\n            var temp = this.previousPanel;\r\n            this.previousPanel = this.currentPanel;\r\n            this.currentPanel = temp;\r\n        }\r\n    };\r\n    ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\r\n        var _this = this;\r\n        var previousDate = swipeDirection === this.touchLeftDirection ?\r\n            this.nextPanel.selectedDate : this.previousPanel.selectedDate;\r\n        var args = {\r\n            action: 'date', cancel: false, previousDate: previousDate, currentDate: this.currentPanel.selectedDate\r\n        };\r\n        this.parent.trigger(events.navigating, args, function (navArgs) {\r\n            if (navArgs.cancel) {\r\n                _this.swapPanels(swipeDirection);\r\n                _this.cancelSwipe();\r\n            }\r\n            else {\r\n                _this.parent.activeView.setPanel(_this.currentPanel.element);\r\n                _this.parent.setProperties({ selectedDate: _this.currentPanel.selectedDate }, true);\r\n                var translateX = void 0;\r\n                if (_this.parent.enableRtl) {\r\n                    translateX = swipeDirection === _this.touchLeftDirection ?\r\n                        (_this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth) : 0;\r\n                }\r\n                else {\r\n                    translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\r\n                }\r\n                addClass([_this.element], cls.TRANSLATE_CLASS);\r\n                _this.element.style.transform = 'translatex(' + translateX + 'px)';\r\n                if (_this.parent.headerModule) {\r\n                    _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\r\n                }\r\n                _this.parent.renderTemplates();\r\n                _this.parent.crudModule.refreshDataManager();\r\n            }\r\n        });\r\n    };\r\n    ScheduleTouch.prototype.cancelSwipe = function () {\r\n        this.parent.activeView.setPanel(this.currentPanel.element);\r\n        this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\r\n        this.parent.activeView.getRenderDates();\r\n        this.parent.activeView.generateColumnLevels();\r\n        addClass([this.element], cls.TRANSLATE_CLASS);\r\n        var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\r\n        this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\r\n    };\r\n    ScheduleTouch.prototype.onTransitionEnd = function () {\r\n        removeClass([this.element], cls.TRANSLATE_CLASS);\r\n        this.element.style.transitionDuration = '';\r\n        this.element.style.transform = '';\r\n        if (this.previousPanel) {\r\n            remove(this.previousPanel.element);\r\n            this.previousPanel = null;\r\n            removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\r\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\r\n        }\r\n        if (this.nextPanel) {\r\n            remove(this.nextPanel.element);\r\n            this.nextPanel = null;\r\n            removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\r\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\r\n        }\r\n        this.currentPanel = null;\r\n        this.parent.activeView.getPanel().style.width = '';\r\n    };\r\n    ScheduleTouch.prototype.getTranslateX = function (element) {\r\n        var style = window.getComputedStyle(element);\r\n        return new WebKitCSSMatrix(style.webkitTransform).m41;\r\n    };\r\n    ScheduleTouch.prototype.setDimensions = function (element) {\r\n        element.style.width = (this.parent.element.clientWidth) + 'px';\r\n    };\r\n    ScheduleTouch.prototype.resetValues = function () {\r\n        this.currentPanel = null;\r\n        this.previousPanel = null;\r\n        this.nextPanel = null;\r\n        this.timeStampStart = null;\r\n        this.element.style.transform = '';\r\n        util.removeChildren(this.element);\r\n        removeClass([this.element], cls.TRANSLATE_CLASS);\r\n    };\r\n    ScheduleTouch.prototype.destroy = function () {\r\n        if (this.touchObj) {\r\n            this.touchObj.destroy();\r\n            this.touchObj = null;\r\n        }\r\n        EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\r\n        this.resetValues();\r\n    };\r\n    return ScheduleTouch;\r\n}());\r\nexport { ScheduleTouch };\r\n"]},"metadata":{},"sourceType":"module"}