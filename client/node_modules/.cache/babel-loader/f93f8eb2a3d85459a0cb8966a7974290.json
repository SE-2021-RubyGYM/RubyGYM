{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule keyOf\r\n */\n\n/**\r\n * Allows extraction of a minified key. Let's the build system minify keys\r\n * without losing the ability to dynamically use key strings as values\r\n * themselves. Pass in an object with a single key/val pair and it will return\r\n * you the string key of that single record. Suppose you want to grab the\r\n * value for a key 'className' inside of an object. Key/val minification may\r\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\r\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\r\n * reuse those resolutions.\r\n */\n\"use strict\";\n\nvar keyOf = function (oneKeyObj) {\n  var key;\n\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n\n    return key;\n  }\n\n  return null;\n};\n\nmodule.exports = keyOf;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/fbjs/lib/keyOf.js"],"names":["keyOf","oneKeyObj","key","hasOwnProperty","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAG,UAAUC,SAAV,EAAqB;AAC/B,MAAIC,GAAJ;;AACA,OAAKA,GAAL,IAAYD,SAAZ,EAAuB;AACrB,QAAI,CAACA,SAAS,CAACE,cAAV,CAAyBD,GAAzB,CAAL,EAAoC;AAClC;AACD;;AACD,WAAOA,GAAP;AACD;;AACD,SAAO,IAAP;AACD,CATD;;AAWAE,MAAM,CAACC,OAAP,GAAiBL,KAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule keyOf\r\n */\r\n\r\n/**\r\n * Allows extraction of a minified key. Let's the build system minify keys\r\n * without losing the ability to dynamically use key strings as values\r\n * themselves. Pass in an object with a single key/val pair and it will return\r\n * you the string key of that single record. Suppose you want to grab the\r\n * value for a key 'className' inside of an object. Key/val minification may\r\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\r\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\r\n * reuse those resolutions.\r\n */\r\n\"use strict\";\r\n\r\nvar keyOf = function (oneKeyObj) {\r\n  var key;\r\n  for (key in oneKeyObj) {\r\n    if (!oneKeyObj.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n    return key;\r\n  }\r\n  return null;\r\n};\r\n\r\nmodule.exports = keyOf;"]},"metadata":{},"sourceType":"script"}