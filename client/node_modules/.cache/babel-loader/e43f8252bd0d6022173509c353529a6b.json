{"ast":null,"code":"import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\nvar globalTimeOut = {};\nvar DEFT_MAT_WIDTH = 30;\nvar DEFT_FAB_WIDTH = 30;\nvar DEFT_TAIL_WIDTH = 24;\nvar DEFT_BOOT_WIDTH = 30;\nvar DEFT_BOOT4_WIDTH = 36;\nvar DEFT_BOOT5_WIDTH = 36;\nvar CLS_SHOWSPIN = 'e-spin-show';\nvar CLS_HIDESPIN = 'e-spin-hide';\nvar CLS_MATERIALSPIN = 'e-spin-material';\nvar CLS_FABRICSPIN = 'e-spin-fabric';\nvar CLS_TAILWINDSPIN = 'e-spin-tailwind';\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\nvar CLS_BOOT5SPIN = 'e-spin-bootstrap5';\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\nvar CLS_SPINWRAP = 'e-spinner-pane';\nvar CLS_SPININWRAP = 'e-spinner-inner';\nvar CLS_SPINCIRCLE = 'e-path-circle';\nvar CLS_SPINARC = 'e-path-arc';\nvar CLS_SPINLABEL = 'e-spin-label';\nvar CLS_SPINTEMPLATE = 'e-spin-template';\nvar spinTemplate = null;\nvar spinCSSClass = null; // eslint-disable-next-line\n\n/**\r\n  * Function to change the Spinners in a page globally from application end.\r\n  * ```\r\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\r\n  * ```\r\n  *\r\n  * @param {string} action - specifies the string\r\n  * @param {CreateArgs} options - specifies the args\r\n  * @param {string} target - specifies the target\r\n  * @param {string} type - specifes the type\r\n  * @returns {void}\r\n  * @private\r\n  */\n\nexport function Spinner(action, options, target, type) {\n  switch (action) {\n    case 'Create':\n      /* eslint-disable */\n      var element = document.querySelector(options.target);\n      var args = {\n        type: type,\n        target: element,\n        cssClass: options.cssClass,\n        label: options.label,\n        width: options.width\n      };\n      /* eslint-enable */\n\n      createSpinner(args);\n      break;\n\n    case 'Show':\n      showSpinner(document.querySelector(target));\n      break;\n\n    case 'Hide':\n      hideSpinner(document.querySelector(target));\n      break;\n\n    case 'Set':\n      // eslint-disable-next-line\n      var setArgs = {\n        cssClass: options.cssClass,\n        type: type\n      };\n      setSpinner(setArgs);\n      break;\n  }\n}\n/**\r\n * Create a spinner for the specified target element.\r\n * ```\r\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\r\n * ```\r\n *\r\n * @param {SpinnerArgs} args - specifies the args\r\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\r\n * @returns {void}\r\n * @private\r\n */\n\nexport function createSpinner(args, internalCreateElement) {\n  if (!args.target) {\n    return;\n  }\n\n  var radius;\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement; // eslint-disable-next-line\n\n  var container = create_spinner_container(args.target, makeElement);\n\n  if (!isNullOrUndefined(args.cssClass)) {\n    container.wrap.classList.add(args.cssClass);\n  }\n\n  if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\n    var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\n    container.wrap.classList.add(CLS_SPINTEMPLATE);\n    replaceContent(container.wrap, template, spinCSSClass);\n  } else {\n    var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\n    var width = !isNullOrUndefined(args.width) ? args.width : undefined;\n    radius = calculateRadius(width, theme);\n    setTheme(theme, container.wrap, radius, makeElement);\n\n    if (!isNullOrUndefined(args.label)) {\n      createLabel(container.inner_wrap, args.label, makeElement);\n    }\n  }\n\n  container.wrap.classList.add(CLS_HIDESPIN);\n  container = null;\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} label - specifies the string\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {HTMLElement} - returns the element\r\n */\n\nfunction createLabel(container, label, makeElement) {\n  var labelEle = makeElement('div', {});\n  labelEle.classList.add(CLS_SPINLABEL);\n  labelEle.innerHTML = label;\n  container.appendChild(labelEle);\n  return labelEle;\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createMaterialSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Material',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\n  mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createBootstrap4Spinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap4',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\n  mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createBootstrap5Spinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap5',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_BOOT5SPIN);\n  mat_calculate_attributes(radius, container, 'Bootstrap5', CLS_BOOT5SPIN);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} uniqueID - specifies the id.\r\n * @param {number} radius - specifies the radius\r\n * @returns {void}\r\n */\n\n\nfunction startMatAnimate(container, uniqueID, radius) {\n  var globalObject = {};\n  var timeOutVar = 0;\n  globalTimeOut[uniqueID].timeOut = 0;\n  globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0); // eslint-disable-next-line\n\n  var spinnerInfo = {\n    uniqueID: uniqueID,\n    container: container,\n    globalInfo: globalObject,\n    timeOutVar: timeOutVar\n  };\n  animateMaterial(spinnerInfo);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createFabricSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Fabric',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\n}\n\nfunction createTailwindSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Tailwind',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_TAILWINDSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_TAILWINDSPIN);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createHighContrastSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'HighContrast',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @returns {string} - returns the string\r\n */\n\n\nfunction getTheme(container) {\n  var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n  return theme.replace(/['\"]+/g, '');\n}\n/**\r\n *\r\n * @param {string} theme - specifies the theme\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction setTheme(theme, container, radius, makeElement) {\n  var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\n  var svg = innerContainer.querySelector('svg');\n\n  if (!isNullOrUndefined(svg)) {\n    innerContainer.removeChild(svg);\n  }\n\n  switch (theme) {\n    case 'Material':\n      createMaterialSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Fabric':\n      createFabricSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap':\n      createBootstrapSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'HighContrast':\n      createHighContrastSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap4':\n      createBootstrap4Spinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap5':\n      createBootstrap5Spinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Tailwind':\n    case 'Tailwind-dark':\n      createTailwindSpinner(innerContainer, radius, makeElement);\n      break;\n  }\n}\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap',\n    radius: radius\n  };\n  create_bootstrap_element(innerContainer, uniqueID, makeElement);\n  boot_calculate_attributes(innerContainer, radius);\n}\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {string} uniqueID - specifies the id\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\n  var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var viewBoxValue = 64;\n  var trans = 32;\n  var defaultRadius = 2;\n  svgBoot.setAttribute('id', uniqueID);\n  svgBoot.setAttribute('class', CLS_BOOTSPIN);\n  svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\n  innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\n\n  for (var item = 0; item <= 7; item++) {\n    var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\n    bootCircle.setAttribute('r', defaultRadius + '');\n    bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\n    svgBoot.appendChild(bootCircle);\n  }\n}\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction boot_calculate_attributes(innerContainer, radius) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var x = 0;\n  var y = 0;\n  var rad = 24;\n  svg.style.width = svg.style.height = radius + 'px';\n  var startArc = 90;\n\n  for (var item = 0; item <= 7; item++) {\n    var start = defineArcPoints(x, y, rad, startArc);\n    var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\n    circleEle.setAttribute('cx', start.x + '');\n    circleEle.setAttribute('cy', start.y + '');\n    startArc = startArc >= 360 ? 0 : startArc;\n    startArc = startArc + 45;\n  }\n}\n/**\r\n *\r\n * @param {number} begin - specifies the number\r\n * @param {number} stop  - specifirs the number\r\n * @returns {number[]} - returns the array of number\r\n */\n\n\nfunction generateSeries(begin, stop) {\n  var series = [];\n  var start = begin;\n  var end = stop; // eslint-disable-next-line\n\n  var increment = false,\n      count = 1;\n  formSeries(start);\n  /**\r\n   *\r\n   * @param {number} i - specifies the number\r\n   * @returns {void}\r\n   */\n\n  function formSeries(i) {\n    series.push(i);\n\n    if (i !== end || count === 1) {\n      if (i <= start && i > 1 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      } else if (i === 1) {\n        i = 7;\n        i = parseFloat((i + 0.2).toFixed(2));\n        increment = true;\n      } else if (i < 8 && increment) {\n        i = parseFloat((i + 0.2).toFixed(2));\n\n        if (i === 8) {\n          increment = false;\n        }\n      } else if (i <= 8 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      }\n\n      ++count;\n      formSeries(i);\n    }\n  }\n\n  return series;\n}\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @returns {void}\r\n */\n\n\nfunction animateBootstrap(innerContainer) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var id = svg.getAttribute('id');\n\n  for (var i = 1; i <= 8; i++) {\n    var circleEle = innerContainer.getElementsByClassName('e-path-circle_' + (i === 8 ? 0 : i))[0];\n    rotation(circleEle, i, i, generateSeries(i, i), id);\n  }\n  /**\r\n   *\r\n   * @param {SVGCircleElement} circle - specifies the circl element\r\n   * @param {number} start - specifies the number\r\n   * @param {number} end - specifies the end number\r\n   * @param {number} series - specifies the series\r\n   * @param {string} id - specifies the id\r\n   * @returns {void}\r\n   */\n\n\n  function rotation(circle, start, end, series, id) {\n    var count = 0;\n    boot_animate(start); // eslint-disable-next-line\n\n    function boot_animate(radius) {\n      if (globalTimeOut[id].isAnimate) {\n        ++count;\n        circle.setAttribute('r', radius + '');\n\n        if (count >= series.length) {\n          count = 0;\n        } // eslint-disable-next-line\n\n\n        globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\n      }\n    }\n  }\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} template - specifies the template\r\n * @param {string} cssClass - specifies the css class.\r\n * @returns {void}\r\n */\n\n\nfunction replaceContent(container, template, cssClass) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var inner = container.querySelector('.e-spinner-inner');\n  inner.innerHTML = template;\n}\n/**\r\n *\r\n * @param {string} width - specifies the width\r\n * @param {string} theme - specifies the string\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction calculateRadius(width, theme) {\n  var defaultSize;\n\n  switch (theme) {\n    case 'Material':\n      defaultSize = DEFT_MAT_WIDTH;\n      break;\n\n    case 'Fabric':\n      defaultSize = DEFT_FAB_WIDTH;\n      break;\n\n    case 'Tailwind':\n    case 'Tailwind-dark':\n      defaultSize = DEFT_FAB_WIDTH;\n      break;\n\n    case 'Bootstrap4':\n      defaultSize = DEFT_BOOT4_WIDTH;\n      break;\n\n    case 'Bootstrap5':\n      defaultSize = DEFT_BOOT5_WIDTH;\n      break;\n\n    default:\n      defaultSize = DEFT_BOOT_WIDTH;\n  }\n\n  width = width ? parseFloat(width + '') : defaultSize;\n  return theme === 'Bootstrap' ? width : width / 2;\n}\n/**\r\n *\r\n * @param {string} id - specifies the id\r\n * @param {number} radius - specifies the radius\r\n * @param {number} count - specifies the number count\r\n * @param {number} previousId - specifies the previous id\r\n * @returns {GlobalVariables} - returns the variables\r\n */\n\n\nfunction globalVariables(id, radius, count, previousId) {\n  return {\n    radius: radius,\n    count: count,\n    previousId: previousId\n  };\n}\n/**\r\n * @returns {string} - returns the string\r\n */\n// eslint-disable-next-line\n\n\nfunction random_generator() {\n  var random = '';\n  var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < 5; i++) {\n    random += combine.charAt(Math.floor(Math.random() * combine.length));\n  }\n\n  return random;\n}\n/**\r\n *\r\n * @param {HTMLElement} innerCon - specifies the element\r\n * @param {string} uniqueID - specifies the unique id\r\n * @param {string} themeClass - specifies the string\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\n  var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgFabric.setAttribute('id', uniqueID);\n  svgFabric.setAttribute('class', themeClass);\n  var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCircleArc.setAttribute('class', CLS_SPINARC);\n  innerCon.insertBefore(svgFabric, innerCon.firstChild);\n  svgFabric.appendChild(fabricCirclePath);\n  svgFabric.appendChild(fabricCircleArc);\n}\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {string} uniqueID - specifies the unique id\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @param {string} cls - specifies the string\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\n  var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  svgMaterial.setAttribute('class', cls);\n  svgMaterial.setAttribute('id', uniqueID);\n  matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\n  svgMaterial.appendChild(matCirclePath);\n}\n/**\r\n *\r\n * @param {HTMLElement} target - specifies the element\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction create_spinner_container(target, makeElement) {\n  var spinnerContainer = makeElement('div', {});\n  var spinnerInnerContainer = makeElement('div', {});\n  spinnerContainer.classList.add(CLS_SPINWRAP);\n  spinnerInnerContainer.classList.add(CLS_SPININWRAP);\n  target.appendChild(spinnerContainer);\n  spinnerContainer.appendChild(spinnerInnerContainer); // eslint-disable-next-line\n\n  return {\n    wrap: spinnerContainer,\n    inner_wrap: spinnerInnerContainer\n  };\n}\n/**\r\n *\r\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\r\n * @returns {void}\r\n */\n\n\nfunction animateMaterial(spinnerInfo) {\n  var start = 1;\n  var end = 149;\n  var duration = 1333;\n  var max = 75;\n  createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\n  spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\n}\n/**\r\n *\r\n * @param {number} start - specifies the number\r\n * @param {number} end - specifies the end number\r\n * @param {Function} easing - specifies the function\r\n * @param {number} duration - specifies the duration\r\n * @param {number} count - specifies the count\r\n * @param {number} max - specifies the max number\r\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\n  var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\n  var startTime = new Date().getTime();\n  var change = end - start;\n  var diameter = getSize(spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2 + '');\n  var strokeSize = getStrokeSize(diameter);\n  var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\n  mat_animation(spinnerInfo); // eslint-disable-next-line\n\n  function mat_animation(spinnerInfo) {\n    var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\n    updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\n\n    if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\n      // eslint-disable-next-line\n      globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\n    } else {\n      animateMaterial(spinnerInfo);\n    }\n  }\n  /**\r\n   *\r\n   * @param {number} value - specifies the number value\r\n   * @param {HTMLElement} container - specifies the container\r\n   * @returns {void}\r\n   */\n\n\n  function updatePath(value, container) {\n    if (!isNullOrUndefined(container.querySelector('svg.e-spin-material')) && !isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle'))) {\n      var svg = container.querySelector('svg.e-spin-material');\n      var path = svg.querySelector('path.e-path-circle');\n      path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\n      path.setAttribute('transform', 'rotate(' + rotate + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\n    }\n  }\n}\n/**\r\n *\r\n * @param {number} radius - specifies the number\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} type - specifies the string type\r\n * @param {string} cls - specifies the string\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction mat_calculate_attributes(radius, container, type, cls) {\n  var diameter = radius * 2;\n  var svg = container.querySelector('svg.' + cls);\n  var path = svg.querySelector('path.e-path-circle');\n  var strokeSize = getStrokeSize(diameter);\n  var transformOrigin = diameter / 2 + 'px';\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.width = svg.style.height = diameter + 'px';\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  path.setAttribute('d', drawArc(diameter, strokeSize));\n\n  if (type === 'Material') {\n    path.setAttribute('stroke-width', strokeSize + '');\n    path.setAttribute('stroke-dasharray', (diameter - strokeSize) * Math.PI * 0.75 + '');\n    path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\n  }\n}\n/**\r\n *\r\n * @param {string} value - specifies the value\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction getSize(value) {\n  var parsed = parseFloat(value);\n  return parsed;\n}\n/**\r\n *\r\n * @param {number} diameter - specifies the diameter\r\n * @param {number} strokeSize - specifies the size\r\n * @returns {string} - returns the string\r\n */\n\n\nfunction drawArc(diameter, strokeSize) {\n  var radius = diameter / 2;\n  var offset = strokeSize / 2;\n  return 'M' + radius + ',' + offset + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\n}\n/**\r\n *\r\n * @param {number} diameter - specifies the number\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction getStrokeSize(diameter) {\n  return 10 / 100 * diameter;\n}\n/**\r\n *\r\n * @param {number} diameter - specifies the number\r\n * @param {number} strokeSize - specifies the stroke size\r\n * @param {number} value - specifies the value\r\n * @param {number} max - specifies the max number\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction getDashOffset(diameter, strokeSize, value, max) {\n  return (diameter - strokeSize) * Math.PI * (3 * max / 100 - value / 100);\n}\n/**\r\n *\r\n * @param {number} current - specifies the number\r\n * @param {number} start - specifies the stroke size\r\n * @param {number} change - specifies the value\r\n * @param {number} duration - specifies the max number\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction easeAnimation(current, start, change, duration) {\n  var timestamp = (current /= duration) * current;\n  var timecount = timestamp * current;\n  return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\n}\n/**\r\n *\r\n * @param {number} radius - specifies the number\r\n * @param {HTMLElement} innerConainer - specifies the element\r\n * @param {string} trgClass - specifies the class\r\n * @returns {void}\r\n */\n// eslint-disable-next-line\n\n\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\n  var centerX = radius;\n  var centerY = radius;\n  var diameter = radius * 2; // eslint-disable-next-line\n\n  var startArc = 315,\n      endArc = 45;\n  var svg = innerConainer.querySelector('.' + trgClass);\n  var circle = svg.querySelector('.e-path-circle');\n  var path = svg.querySelector('.e-path-arc');\n  var transformOrigin = diameter / 2 + 'px';\n  circle.setAttribute('d', defineCircle(centerX, centerY, radius));\n  path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  svg.style.width = svg.style.height = diameter + 'px';\n}\n/**\r\n *\r\n * @param {number} centerX - specifies the number\r\n * @param {number} centerY - specifies the stroke size\r\n * @param {number} radius - specifies the value\r\n * @param {number} angle - specifies the max number\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction defineArcPoints(centerX, centerY, radius, angle) {\n  var radians = (angle - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(radians),\n    y: centerY + radius * Math.sin(radians)\n  };\n}\n/**\r\n *\r\n * @param {number} x - specifies the number\r\n * @param {number} y - specifies the stroke size\r\n * @param {number} radius - specifies the radius\r\n * @param {number} startArc - specifies the value\r\n * @param {number} endArc - specifies the max number\r\n * @returns {number} - returns the number\r\n */\n\n\nfunction defineArc(x, y, radius, startArc, endArc) {\n  var start = defineArcPoints(x, y, radius, endArc);\n  var end = defineArcPoints(x, y, radius, startArc);\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, 0, 0, end.x, end.y].join(' ');\n  return d;\n}\n/**\r\n *\r\n * @param {number} x - specifies the number\r\n * @param {number} y - specifies the stroke size\r\n * @param {number} radius - specifies the value\r\n * @returns {string} - returns the string\r\n */\n\n\nfunction defineCircle(x, y, radius) {\n  var d = ['M', x, y, 'm', -radius, 0, 'a', radius, radius, 0, 1, 0, radius * 2, 0, 'a', radius, radius, 0, 1, 0, -radius * 2, 0].join(' ');\n  return d;\n} // eslint-disable-next-line\n\n/**\r\n * Function to show the Spinner.\r\n *\r\n * @param {HTMLElement} container - Specify the target of the Spinner.\r\n * @returns {void}\r\n * @private\r\n */\n\n\nexport function showSpinner(container) {\n  showHideSpinner(container, false);\n  container = null;\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {boolean} isHide - specifies the boolean\r\n * @returns {void}\r\n */\n\nfunction showHideSpinner(container, isHide) {\n  var spinnerWrap;\n\n  if (container) {\n    spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container : container.querySelector('.' + CLS_SPINWRAP);\n  }\n\n  if (container && spinnerWrap) {\n    var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\n    var spinCheck = void 0; // eslint-disable-next-line\n\n    spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) : !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\n\n    if (spinCheck) {\n      var svgEle = spinnerWrap.querySelector('svg');\n\n      if (isNullOrUndefined(svgEle)) {\n        return;\n      }\n\n      var id = svgEle.getAttribute('id');\n      globalTimeOut[id].isAnimate = !isHide;\n\n      switch (globalTimeOut[id].type) {\n        case 'Material':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\n          break;\n\n        case 'Bootstrap':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\n          break;\n      }\n    } // eslint-disable-next-line\n\n\n    isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\n    container = null;\n  }\n}\n/**\r\n * Function to hide the Spinner.\r\n *\r\n * @param {HTMLElement} container - Specify the target of the Spinner.\r\n * @returns {void}\r\n * @private\r\n */\n\n\nexport function hideSpinner(container) {\n  showHideSpinner(container, true);\n  container = null;\n} // eslint-disable-next-line\n\n/**\r\n  * Function to change the Spinners in a page globally from application end.\r\n  * ```\r\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\r\n  * ```\r\n  *\r\n  * @param {SetSpinnerArgs} args - specifies the args\r\n  * @param {createElementParams} internalCreateElement - specifies the element params\r\n  * @returns {void}\r\n  * @private\r\n  */\n\nexport function setSpinner(args, internalCreateElement) {\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n\n  if (args.template !== undefined) {\n    spinTemplate = args.template;\n\n    if (args.template !== undefined) {\n      spinCSSClass = args.cssClass;\n    }\n  }\n\n  var container = document.querySelectorAll('.' + CLS_SPINWRAP);\n\n  for (var index = 0; index < container.length; index++) {\n    ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\n  }\n}\n/**\r\n *\r\n * @param {string} template - specifies the string\r\n * @param {HTMLElement} container - specifies the container\r\n * @param {string} theme - specifies the theme\r\n * @param {string} cssClass - specifies the string class\r\n * @param {createElementParams} makeEle - specifies the params\r\n * @returns {void}\r\n */\n\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\n  if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\n    replaceTheme(container, theme, cssClass, makeEle);\n\n    if (container.classList.contains(CLS_SHOWSPIN)) {\n      container.classList.remove(CLS_SHOWSPIN);\n      showSpinner(container);\n    } else {\n      container.classList.remove(CLS_HIDESPIN);\n      hideSpinner(container);\n    }\n  } else {\n    spinTemplate = template;\n\n    if (!isNullOrUndefined(cssClass)) {\n      spinCSSClass = cssClass;\n    }\n  }\n}\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the container\r\n * @param {string} theme - specifies the theme\r\n * @param {string} cssClass - specifies the string class\r\n * @param {createElementParams} makeEle - specifies the params\r\n * @returns {void}\r\n */\n\n\nfunction replaceTheme(container, theme, cssClass, makeEle) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var svgElement = container.querySelector('svg');\n  var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\n  var classNames = svgElement.getAttribute('class');\n  var svgClassList = classNames.split(/\\s/);\n\n  if (svgClassList.indexOf('e-spin-material') >= 0) {\n    var id = svgElement.getAttribute('id');\n    clearTimeout(globalTimeOut[id].timeOut);\n  }\n\n  setTheme(theme, container, radius, makeEle);\n}","map":{"version":3,"sources":["D:/HUST/20211/Introduction to Software Engineering/Project/Sprint 2/RubyGYM/client/node_modules/@syncfusion/ej2-popups/src/spinner/spinner.js"],"names":["isNullOrUndefined","classList","createElement","globalTimeOut","DEFT_MAT_WIDTH","DEFT_FAB_WIDTH","DEFT_TAIL_WIDTH","DEFT_BOOT_WIDTH","DEFT_BOOT4_WIDTH","DEFT_BOOT5_WIDTH","CLS_SHOWSPIN","CLS_HIDESPIN","CLS_MATERIALSPIN","CLS_FABRICSPIN","CLS_TAILWINDSPIN","CLS_BOOTSPIN","CLS_BOOT4SPIN","CLS_BOOT5SPIN","CLS_HIGHCONTRASTSPIN","CLS_SPINWRAP","CLS_SPININWRAP","CLS_SPINCIRCLE","CLS_SPINARC","CLS_SPINLABEL","CLS_SPINTEMPLATE","spinTemplate","spinCSSClass","Spinner","action","options","target","type","element","document","querySelector","args","cssClass","label","width","createSpinner","showSpinner","hideSpinner","setArgs","setSpinner","internalCreateElement","radius","makeElement","container","create_spinner_container","wrap","add","template","replaceContent","theme","getTheme","undefined","calculateRadius","setTheme","createLabel","inner_wrap","labelEle","innerHTML","appendChild","createMaterialSpinner","uniqueID","random_generator","timeOut","create_material_element","mat_calculate_attributes","createBootstrap4Spinner","createBootstrap5Spinner","startMatAnimate","globalObject","timeOutVar","globalVariables","spinnerInfo","globalInfo","animateMaterial","createFabricSpinner","create_fabric_element","fb_calculate_attributes","createTailwindSpinner","createHighContrastSpinner","window","getComputedStyle","getPropertyValue","replace","innerContainer","svg","removeChild","createBootstrapSpinner","create_bootstrap_element","boot_calculate_attributes","svgBoot","createElementNS","viewBoxValue","trans","defaultRadius","setAttribute","insertBefore","firstChild","item","bootCircle","x","y","rad","style","height","startArc","start","defineArcPoints","circleEle","generateSeries","begin","stop","series","end","increment","count","formSeries","i","push","parseFloat","toFixed","animateBootstrap","id","getAttribute","getElementsByClassName","rotation","circle","boot_animate","isAnimate","length","setTimeout","bind","inner","defaultSize","previousId","random","combine","charAt","Math","floor","innerCon","themeClass","svgFabric","fabricCirclePath","fabricCircleArc","cls","svgMaterial","matCirclePath","spinnerContainer","spinnerInnerContainer","duration","max","createCircle","easeAnimation","easing","startTime","Date","getTime","change","diameter","getSize","strokeSize","getStrokeSize","rotate","mat_animation","currentTime","min","updatePath","value","path","getDashOffset","transformOrigin","drawArc","PI","parsed","offset","current","timestamp","timecount","innerConainer","trgClass","centerX","centerY","endArc","defineCircle","defineArc","angle","radians","cos","sin","d","join","showHideSpinner","isHide","spinnerWrap","contains","spinCheck","svgEle","clearTimeout","querySelectorAll","index","ensureTemplate","makeEle","replaceTheme","remove","svgElement","classNames","svgClassList","split","indexOf"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,SAA5B,EAAuCC,aAAvC,QAA4D,sBAA5D;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,YAAY,GAAG,aAAnB;AACA,IAAIC,YAAY,GAAG,aAAnB;AACA,IAAIC,gBAAgB,GAAG,iBAAvB;AACA,IAAIC,cAAc,GAAG,eAArB;AACA,IAAIC,gBAAgB,GAAG,iBAAvB;AACA,IAAIC,YAAY,GAAG,kBAAnB;AACA,IAAIC,aAAa,GAAG,mBAApB;AACA,IAAIC,aAAa,GAAG,mBAApB;AACA,IAAIC,oBAAoB,GAAG,sBAA3B;AACA,IAAIC,YAAY,GAAG,gBAAnB;AACA,IAAIC,cAAc,GAAG,iBAArB;AACA,IAAIC,cAAc,GAAG,eAArB;AACA,IAAIC,WAAW,GAAG,YAAlB;AACA,IAAIC,aAAa,GAAG,cAApB;AACA,IAAIC,gBAAgB,GAAG,iBAAvB;AACA,IAAIC,YAAY,GAAG,IAAnB;AACA,IAAIC,YAAY,GAAG,IAAnB,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,IAA1C,EAAgD;AACnD,UAAQH,MAAR;AACI,SAAK,QAAL;AACI;AACA,UAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuBL,OAAO,CAACC,MAA/B,CAAd;AACA,UAAIK,IAAI,GAAG;AAAEJ,QAAAA,IAAI,EAAEA,IAAR;AAAcD,QAAAA,MAAM,EAAEE,OAAtB;AAA+BI,QAAAA,QAAQ,EAAEP,OAAO,CAACO,QAAjD;AACPC,QAAAA,KAAK,EAAER,OAAO,CAACQ,KADR;AACeC,QAAAA,KAAK,EAAET,OAAO,CAACS;AAD9B,OAAX;AAEA;;AACAC,MAAAA,aAAa,CAACJ,IAAD,CAAb;AACA;;AACJ,SAAK,MAAL;AACIK,MAAAA,WAAW,CAACP,QAAQ,CAACC,aAAT,CAAuBJ,MAAvB,CAAD,CAAX;AACA;;AACJ,SAAK,MAAL;AACIW,MAAAA,WAAW,CAACR,QAAQ,CAACC,aAAT,CAAuBJ,MAAvB,CAAD,CAAX;AACA;;AACJ,SAAK,KAAL;AACI;AACA,UAAIY,OAAO,GAAG;AAAEN,QAAAA,QAAQ,EAAEP,OAAO,CAACO,QAApB;AAA8BL,QAAAA,IAAI,EAAEA;AAApC,OAAd;AACAY,MAAAA,UAAU,CAACD,OAAD,CAAV;AACA;AAnBR;AAqBH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASH,aAAT,CAAuBJ,IAAvB,EAA6BS,qBAA7B,EAAoD;AACvD,MAAI,CAACT,IAAI,CAACL,MAAV,EAAkB;AACd;AACH;;AACD,MAAIe,MAAJ;AACA,MAAIC,WAAW,GAAG,CAAC9C,iBAAiB,CAAC4C,qBAAD,CAAlB,GAA4CA,qBAA5C,GAAoE1C,aAAtF,CALuD,CAMvD;;AACA,MAAI6C,SAAS,GAAGC,wBAAwB,CAACb,IAAI,CAACL,MAAN,EAAcgB,WAAd,CAAxC;;AACA,MAAI,CAAC9C,iBAAiB,CAACmC,IAAI,CAACC,QAAN,CAAtB,EAAuC;AACnCW,IAAAA,SAAS,CAACE,IAAV,CAAehD,SAAf,CAAyBiD,GAAzB,CAA6Bf,IAAI,CAACC,QAAlC;AACH;;AACD,MAAI,CAACpC,iBAAiB,CAACmC,IAAI,CAACgB,QAAN,CAAlB,IAAqC,CAACnD,iBAAiB,CAACyB,YAAD,CAA3D,EAA2E;AACvE,QAAI0B,QAAQ,GAAG,CAACnD,iBAAiB,CAACmC,IAAI,CAACgB,QAAN,CAAlB,GAAoChB,IAAI,CAACgB,QAAzC,GAAoD1B,YAAnE;AACAsB,IAAAA,SAAS,CAACE,IAAV,CAAehD,SAAf,CAAyBiD,GAAzB,CAA6B1B,gBAA7B;AACA4B,IAAAA,cAAc,CAACL,SAAS,CAACE,IAAX,EAAiBE,QAAjB,EAA2BzB,YAA3B,CAAd;AACH,GAJD,MAKK;AACD,QAAI2B,KAAK,GAAG,CAACrD,iBAAiB,CAACmC,IAAI,CAACJ,IAAN,CAAlB,GAAgCI,IAAI,CAACJ,IAArC,GAA4CuB,QAAQ,CAACP,SAAS,CAACE,IAAX,CAAhE;AACA,QAAIX,KAAK,GAAG,CAACtC,iBAAiB,CAACmC,IAAI,CAACG,KAAN,CAAlB,GAAiCH,IAAI,CAACG,KAAtC,GAA8CiB,SAA1D;AACAV,IAAAA,MAAM,GAAGW,eAAe,CAAClB,KAAD,EAAQe,KAAR,CAAxB;AACAI,IAAAA,QAAQ,CAACJ,KAAD,EAAQN,SAAS,CAACE,IAAlB,EAAwBJ,MAAxB,EAAgCC,WAAhC,CAAR;;AACA,QAAI,CAAC9C,iBAAiB,CAACmC,IAAI,CAACE,KAAN,CAAtB,EAAoC;AAChCqB,MAAAA,WAAW,CAACX,SAAS,CAACY,UAAX,EAAuBxB,IAAI,CAACE,KAA5B,EAAmCS,WAAnC,CAAX;AACH;AACJ;;AACDC,EAAAA,SAAS,CAACE,IAAV,CAAehD,SAAf,CAAyBiD,GAAzB,CAA6BvC,YAA7B;AACAoC,EAAAA,SAAS,GAAG,IAAZ;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASW,WAAT,CAAqBX,SAArB,EAAgCV,KAAhC,EAAuCS,WAAvC,EAAoD;AAChD,MAAIc,QAAQ,GAAGd,WAAW,CAAC,KAAD,EAAQ,EAAR,CAA1B;AACAc,EAAAA,QAAQ,CAAC3D,SAAT,CAAmBiD,GAAnB,CAAuB3B,aAAvB;AACAqC,EAAAA,QAAQ,CAACC,SAAT,GAAqBxB,KAArB;AACAU,EAAAA,SAAS,CAACe,WAAV,CAAsBF,QAAtB;AACA,SAAOA,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,qBAAT,CAA+BhB,SAA/B,EAA0CF,MAA1C,EAAkDC,WAAlD,EAA+D;AAC3D,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,UAApB;AAAgCc,IAAAA,MAAM,EAAEA;AAAxC,GAA1B;AACAsB,EAAAA,uBAAuB,CAACpB,SAAD,EAAYiB,QAAZ,EAAsBlB,WAAtB,EAAmClC,gBAAnC,CAAvB;AACAwD,EAAAA,wBAAwB,CAACvB,MAAD,EAASE,SAAT,EAAoB,UAApB,EAAgCnC,gBAAhC,CAAxB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyD,uBAAT,CAAiCtB,SAAjC,EAA4CF,MAA5C,EAAoDC,WAApD,EAAiE;AAC7D,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,YAApB;AAAkCc,IAAAA,MAAM,EAAEA;AAA1C,GAA1B;AACAsB,EAAAA,uBAAuB,CAACpB,SAAD,EAAYiB,QAAZ,EAAsBlB,WAAtB,EAAmC9B,aAAnC,CAAvB;AACAoD,EAAAA,wBAAwB,CAACvB,MAAD,EAASE,SAAT,EAAoB,YAApB,EAAkC/B,aAAlC,CAAxB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsD,uBAAT,CAAiCvB,SAAjC,EAA4CF,MAA5C,EAAoDC,WAApD,EAAiE;AAC7D,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,YAApB;AAAkCc,IAAAA,MAAM,EAAEA;AAA1C,GAA1B;AACAsB,EAAAA,uBAAuB,CAACpB,SAAD,EAAYiB,QAAZ,EAAsBlB,WAAtB,EAAmC7B,aAAnC,CAAvB;AACAmD,EAAAA,wBAAwB,CAACvB,MAAD,EAASE,SAAT,EAAoB,YAApB,EAAkC9B,aAAlC,CAAxB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsD,eAAT,CAAyBxB,SAAzB,EAAoCiB,QAApC,EAA8CnB,MAA9C,EAAsD;AAClD,MAAI2B,YAAY,GAAG,EAAnB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACAtE,EAAAA,aAAa,CAAC6D,QAAD,CAAb,CAAwBE,OAAxB,GAAkC,CAAlC;AACAM,EAAAA,YAAY,CAACR,QAAD,CAAZ,GAAyBU,eAAe,CAACV,QAAD,EAAWnB,MAAX,EAAmB,CAAnB,EAAsB,CAAtB,CAAxC,CAJkD,CAKlD;;AACA,MAAI8B,WAAW,GAAG;AAAEX,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBjB,IAAAA,SAAS,EAAEA,SAAjC;AAA4C6B,IAAAA,UAAU,EAAEJ,YAAxD;AAAsEC,IAAAA,UAAU,EAAEA;AAAlF,GAAlB;AACAI,EAAAA,eAAe,CAACF,WAAD,CAAf;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,mBAAT,CAA6B/B,SAA7B,EAAwCF,MAAxC,EAAgDC,WAAhD,EAA6D;AACzD,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,QAApB;AAA8Bc,IAAAA,MAAM,EAAEA;AAAtC,GAA1B;AACAkC,EAAAA,qBAAqB,CAAChC,SAAD,EAAYiB,QAAZ,EAAsBnD,cAAtB,EAAsCiC,WAAtC,CAArB;AACAkC,EAAAA,uBAAuB,CAACnC,MAAD,EAASE,SAAT,EAAoBlC,cAApB,CAAvB;AACH;;AACD,SAASoE,qBAAT,CAA+BlC,SAA/B,EAA0CF,MAA1C,EAAkDC,WAAlD,EAA+D;AAC3D,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,UAApB;AAAgCc,IAAAA,MAAM,EAAEA;AAAxC,GAA1B;AACAkC,EAAAA,qBAAqB,CAAChC,SAAD,EAAYiB,QAAZ,EAAsBlD,gBAAtB,EAAwCgC,WAAxC,CAArB;AACAkC,EAAAA,uBAAuB,CAACnC,MAAD,EAASE,SAAT,EAAoBjC,gBAApB,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoE,yBAAT,CAAmCnC,SAAnC,EAA8CF,MAA9C,EAAsDC,WAAtD,EAAmE;AAC/D,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,cAApB;AAAoCc,IAAAA,MAAM,EAAEA;AAA5C,GAA1B;AACAkC,EAAAA,qBAAqB,CAAChC,SAAD,EAAYiB,QAAZ,EAAsB9C,oBAAtB,EAA4C4B,WAA5C,CAArB;AACAkC,EAAAA,uBAAuB,CAACnC,MAAD,EAASE,SAAT,EAAoB7B,oBAApB,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASoC,QAAT,CAAkBP,SAAlB,EAA6B;AACzB,MAAIM,KAAK,GAAG8B,MAAM,CAACC,gBAAP,CAAwBrC,SAAxB,EAAmC,QAAnC,EAA6CsC,gBAA7C,CAA8D,SAA9D,CAAZ;AACA,SAAOhC,KAAK,CAACiC,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS7B,QAAT,CAAkBJ,KAAlB,EAAyBN,SAAzB,EAAoCF,MAApC,EAA4CC,WAA5C,EAAyD;AACrD,MAAIyC,cAAc,GAAGxC,SAAS,CAACb,aAAV,CAAwB,MAAMd,cAA9B,CAArB;AACA,MAAIoE,GAAG,GAAGD,cAAc,CAACrD,aAAf,CAA6B,KAA7B,CAAV;;AACA,MAAI,CAAClC,iBAAiB,CAACwF,GAAD,CAAtB,EAA6B;AACzBD,IAAAA,cAAc,CAACE,WAAf,CAA2BD,GAA3B;AACH;;AACD,UAAQnC,KAAR;AACI,SAAK,UAAL;AACIU,MAAAA,qBAAqB,CAACwB,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAArB;AACA;;AACJ,SAAK,QAAL;AACIgC,MAAAA,mBAAmB,CAACS,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAAnB;AACA;;AACJ,SAAK,WAAL;AACI4C,MAAAA,sBAAsB,CAACH,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAAtB;AACA;;AACJ,SAAK,cAAL;AACIoC,MAAAA,yBAAyB,CAACK,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAAzB;AACA;;AACJ,SAAK,YAAL;AACIuB,MAAAA,uBAAuB,CAACkB,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAAvB;AACA;;AACJ,SAAK,YAAL;AACIwB,MAAAA,uBAAuB,CAACiB,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAAvB;AACA;;AACJ,SAAK,UAAL;AACA,SAAK,eAAL;AACImC,MAAAA,qBAAqB,CAACM,cAAD,EAAiB1C,MAAjB,EAAyBC,WAAzB,CAArB;AACA;AAtBR;AAwBH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,sBAAT,CAAgCH,cAAhC,EAAgD1C,MAAhD,EAAwDC,WAAxD,EAAqE;AACjE,MAAIkB,QAAQ,GAAGC,gBAAgB,EAA/B;AACA9D,EAAAA,aAAa,CAAC6D,QAAD,CAAb,GAA0B;AAAEE,IAAAA,OAAO,EAAE,CAAX;AAAcnC,IAAAA,IAAI,EAAE,WAApB;AAAiCc,IAAAA,MAAM,EAAEA;AAAzC,GAA1B;AACA8C,EAAAA,wBAAwB,CAACJ,cAAD,EAAiBvB,QAAjB,EAA2BlB,WAA3B,CAAxB;AACA8C,EAAAA,yBAAyB,CAACL,cAAD,EAAiB1C,MAAjB,CAAzB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8C,wBAAT,CAAkCJ,cAAlC,EAAkDvB,QAAlD,EAA4DlB,WAA5D,EAAyE;AACrE,MAAI+C,OAAO,GAAG5D,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAd;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,aAAa,GAAG,CAApB;AACAJ,EAAAA,OAAO,CAACK,YAAR,CAAqB,IAArB,EAA2BlC,QAA3B;AACA6B,EAAAA,OAAO,CAACK,YAAR,CAAqB,OAArB,EAA8BnF,YAA9B;AACA8E,EAAAA,OAAO,CAACK,YAAR,CAAqB,SAArB,EAAgC,SAASH,YAAT,GAAwB,GAAxB,GAA8BA,YAA9D;AACAR,EAAAA,cAAc,CAACY,YAAf,CAA4BN,OAA5B,EAAqCN,cAAc,CAACa,UAApD;;AACA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAI,CAA3B,EAA8BA,IAAI,EAAlC,EAAsC;AAClC,QAAIC,UAAU,GAAGrE,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,QAAvD,CAAjB;AACAQ,IAAAA,UAAU,CAACJ,YAAX,CAAwB,OAAxB,EAAiC7E,cAAc,GAAG,GAAjB,GAAuBgF,IAAxD;AACAC,IAAAA,UAAU,CAACJ,YAAX,CAAwB,GAAxB,EAA6BD,aAAa,GAAG,EAA7C;AACAK,IAAAA,UAAU,CAACJ,YAAX,CAAwB,WAAxB,EAAqC,eAAeF,KAAf,GAAuB,GAAvB,GAA6BA,KAA7B,GAAqC,GAA1E;AACAH,IAAAA,OAAO,CAAC/B,WAAR,CAAoBwC,UAApB;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASV,yBAAT,CAAmCL,cAAnC,EAAmD1C,MAAnD,EAA2D;AACvD,MAAI2C,GAAG,GAAGD,cAAc,CAACrD,aAAf,CAA6B,sBAA7B,CAAV;AACA,MAAIqE,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,GAAG,GAAG,EAAV;AACAjB,EAAAA,GAAG,CAACkB,KAAJ,CAAUpE,KAAV,GAAkBkD,GAAG,CAACkB,KAAJ,CAAUC,MAAV,GAAmB9D,MAAM,GAAG,IAA9C;AACA,MAAI+D,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIP,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAI,CAA3B,EAA8BA,IAAI,EAAlC,EAAsC;AAClC,QAAIQ,KAAK,GAAGC,eAAe,CAACP,CAAD,EAAIC,CAAJ,EAAOC,GAAP,EAAYG,QAAZ,CAA3B;AACA,QAAIG,SAAS,GAAGvB,GAAG,CAACtD,aAAJ,CAAkB,MAAMb,cAAN,GAAuB,GAAvB,GAA6BgF,IAA/C,CAAhB;AACAU,IAAAA,SAAS,CAACb,YAAV,CAAuB,IAAvB,EAA6BW,KAAK,CAACN,CAAN,GAAU,EAAvC;AACAQ,IAAAA,SAAS,CAACb,YAAV,CAAuB,IAAvB,EAA6BW,KAAK,CAACL,CAAN,GAAU,EAAvC;AACAI,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,GAAZ,GAAkB,CAAlB,GAAsBA,QAAjC;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,GAAG,EAAtB;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,cAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AACjC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIN,KAAK,GAAGI,KAAZ;AACA,MAAIG,GAAG,GAAGF,IAAV,CAHiC,CAIjC;;AACA,MAAIG,SAAS,GAAG,KAAhB;AAAA,MAAuBC,KAAK,GAAG,CAA/B;AACAC,EAAAA,UAAU,CAACV,KAAD,CAAV;AACA;AACJ;AACA;AACA;AACA;;AACI,WAASU,UAAT,CAAoBC,CAApB,EAAuB;AACnBL,IAAAA,MAAM,CAACM,IAAP,CAAYD,CAAZ;;AACA,QAAIA,CAAC,KAAKJ,GAAN,IAAaE,KAAK,KAAK,CAA3B,EAA8B;AAC1B,UAAIE,CAAC,IAAIX,KAAL,IAAcW,CAAC,GAAG,CAAlB,IAAuB,CAACH,SAA5B,EAAuC;AACnCG,QAAAA,CAAC,GAAGE,UAAU,CAAC,CAACF,CAAC,GAAG,GAAL,EAAUG,OAAV,CAAkB,CAAlB,CAAD,CAAd;AACH,OAFD,MAGK,IAAIH,CAAC,KAAK,CAAV,EAAa;AACdA,QAAAA,CAAC,GAAG,CAAJ;AACAA,QAAAA,CAAC,GAAGE,UAAU,CAAC,CAACF,CAAC,GAAG,GAAL,EAAUG,OAAV,CAAkB,CAAlB,CAAD,CAAd;AACAN,QAAAA,SAAS,GAAG,IAAZ;AACH,OAJI,MAKA,IAAIG,CAAC,GAAG,CAAJ,IAASH,SAAb,EAAwB;AACzBG,QAAAA,CAAC,GAAGE,UAAU,CAAC,CAACF,CAAC,GAAG,GAAL,EAAUG,OAAV,CAAkB,CAAlB,CAAD,CAAd;;AACA,YAAIH,CAAC,KAAK,CAAV,EAAa;AACTH,UAAAA,SAAS,GAAG,KAAZ;AACH;AACJ,OALI,MAMA,IAAIG,CAAC,IAAI,CAAL,IAAU,CAACH,SAAf,EAA0B;AAC3BG,QAAAA,CAAC,GAAGE,UAAU,CAAC,CAACF,CAAC,GAAG,GAAL,EAAUG,OAAV,CAAkB,CAAlB,CAAD,CAAd;AACH;;AACD,QAAEL,KAAF;AACAC,MAAAA,UAAU,CAACC,CAAD,CAAV;AACH;AACJ;;AACD,SAAOL,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASS,gBAAT,CAA0BrC,cAA1B,EAA0C;AACtC,MAAIC,GAAG,GAAGD,cAAc,CAACrD,aAAf,CAA6B,sBAA7B,CAAV;AACA,MAAI2F,EAAE,GAAGrC,GAAG,CAACsC,YAAJ,CAAiB,IAAjB,CAAT;;AACA,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIT,SAAS,GAAIxB,cAAc,CAACwC,sBAAf,CAAsC,oBAClDP,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CADoC,CAAtC,EACM,CADN,CAAjB;AAEAQ,IAAAA,QAAQ,CAACjB,SAAD,EAAYS,CAAZ,EAAeA,CAAf,EAAkBR,cAAc,CAACQ,CAAD,EAAIA,CAAJ,CAAhC,EAAwCK,EAAxC,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASG,QAAT,CAAkBC,MAAlB,EAA0BpB,KAA1B,EAAiCO,GAAjC,EAAsCD,MAAtC,EAA8CU,EAA9C,EAAkD;AAC9C,QAAIP,KAAK,GAAG,CAAZ;AACAY,IAAAA,YAAY,CAACrB,KAAD,CAAZ,CAF8C,CAG9C;;AACA,aAASqB,YAAT,CAAsBrF,MAAtB,EAA8B;AAC1B,UAAI1C,aAAa,CAAC0H,EAAD,CAAb,CAAkBM,SAAtB,EAAiC;AAC7B,UAAEb,KAAF;AACAW,QAAAA,MAAM,CAAC/B,YAAP,CAAoB,GAApB,EAAyBrD,MAAM,GAAG,EAAlC;;AACA,YAAIyE,KAAK,IAAIH,MAAM,CAACiB,MAApB,EAA4B;AACxBd,UAAAA,KAAK,GAAG,CAAR;AACH,SAL4B,CAM7B;;;AACAnH,QAAAA,aAAa,CAAC0H,EAAD,CAAb,CAAkB3D,OAAlB,GAA4BmE,UAAU,CAACH,YAAY,CAACI,IAAb,CAAkB,IAAlB,EAAwBnB,MAAM,CAACG,KAAD,CAA9B,CAAD,EAAyC,EAAzC,CAAtC;AACH;AACJ;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASlE,cAAT,CAAwBL,SAAxB,EAAmCI,QAAnC,EAA6Cf,QAA7C,EAAuD;AACnD,MAAI,CAACpC,iBAAiB,CAACoC,QAAD,CAAtB,EAAkC;AAC9BW,IAAAA,SAAS,CAAC9C,SAAV,CAAoBiD,GAApB,CAAwBd,QAAxB;AACH;;AACD,MAAImG,KAAK,GAAGxF,SAAS,CAACb,aAAV,CAAwB,kBAAxB,CAAZ;AACAqG,EAAAA,KAAK,CAAC1E,SAAN,GAAkBV,QAAlB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,eAAT,CAAyBlB,KAAzB,EAAgCe,KAAhC,EAAuC;AACnC,MAAImF,WAAJ;;AACA,UAAQnF,KAAR;AACI,SAAK,UAAL;AACImF,MAAAA,WAAW,GAAGpI,cAAd;AACA;;AACJ,SAAK,QAAL;AACIoI,MAAAA,WAAW,GAAGnI,cAAd;AACA;;AACJ,SAAK,UAAL;AACA,SAAK,eAAL;AACImI,MAAAA,WAAW,GAAGnI,cAAd;AACA;;AACJ,SAAK,YAAL;AACImI,MAAAA,WAAW,GAAGhI,gBAAd;AACA;;AACJ,SAAK,YAAL;AACIgI,MAAAA,WAAW,GAAG/H,gBAAd;AACA;;AACJ;AACI+H,MAAAA,WAAW,GAAGjI,eAAd;AAlBR;;AAoBA+B,EAAAA,KAAK,GAAGA,KAAK,GAAGoF,UAAU,CAACpF,KAAK,GAAG,EAAT,CAAb,GAA4BkG,WAAzC;AACA,SAAOnF,KAAK,KAAK,WAAV,GAAwBf,KAAxB,GAAgCA,KAAK,GAAG,CAA/C;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoC,eAAT,CAAyBmD,EAAzB,EAA6BhF,MAA7B,EAAqCyE,KAArC,EAA4CmB,UAA5C,EAAwD;AACpD,SAAO;AACH5F,IAAAA,MAAM,EAAEA,MADL;AAEHyE,IAAAA,KAAK,EAAEA,KAFJ;AAGHmB,IAAAA,UAAU,EAAEA;AAHT,GAAP;AAKH;AACD;AACA;AACA;AACA;;;AACA,SAASxE,gBAAT,GAA4B;AACxB,MAAIyE,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,gEAAd;;AACA,OAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBkB,IAAAA,MAAM,IAAIC,OAAO,CAACC,MAAR,CAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,KAAgBC,OAAO,CAACP,MAAnC,CAAf,CAAV;AACH;;AACD,SAAOM,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS3D,qBAAT,CAA+BgE,QAA/B,EAAyC/E,QAAzC,EAAmDgF,UAAnD,EAA+DlG,WAA/D,EAA4E;AACxE,MAAImG,SAAS,GAAGhH,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAhB;AACAmD,EAAAA,SAAS,CAAC/C,YAAV,CAAuB,IAAvB,EAA6BlC,QAA7B;AACAiF,EAAAA,SAAS,CAAC/C,YAAV,CAAuB,OAAvB,EAAgC8C,UAAhC;AACA,MAAIE,gBAAgB,GAAGjH,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAvB;AACAoD,EAAAA,gBAAgB,CAAChD,YAAjB,CAA8B,OAA9B,EAAuC7E,cAAvC;AACA,MAAI8H,eAAe,GAAGlH,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAAtB;AACAqD,EAAAA,eAAe,CAACjD,YAAhB,CAA6B,OAA7B,EAAsC5E,WAAtC;AACAyH,EAAAA,QAAQ,CAAC5C,YAAT,CAAsB8C,SAAtB,EAAiCF,QAAQ,CAAC3C,UAA1C;AACA6C,EAAAA,SAAS,CAACnF,WAAV,CAAsBoF,gBAAtB;AACAD,EAAAA,SAAS,CAACnF,WAAV,CAAsBqF,eAAtB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShF,uBAAT,CAAiCoB,cAAjC,EAAiDvB,QAAjD,EAA2DlB,WAA3D,EAAwEsG,GAAxE,EAA6E;AACzE,MAAIC,WAAW,GAAGpH,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAlB;AACA,MAAIwD,aAAa,GAAGrH,QAAQ,CAAC6D,eAAT,CAAyB,4BAAzB,EAAuD,MAAvD,CAApB;AACAuD,EAAAA,WAAW,CAACnD,YAAZ,CAAyB,OAAzB,EAAkCkD,GAAlC;AACAC,EAAAA,WAAW,CAACnD,YAAZ,CAAyB,IAAzB,EAA+BlC,QAA/B;AACAsF,EAAAA,aAAa,CAACpD,YAAd,CAA2B,OAA3B,EAAoC7E,cAApC;AACAkE,EAAAA,cAAc,CAACY,YAAf,CAA4BkD,WAA5B,EAAyC9D,cAAc,CAACa,UAAxD;AACAiD,EAAAA,WAAW,CAACvF,WAAZ,CAAwBwF,aAAxB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAStG,wBAAT,CAAkClB,MAAlC,EAA0CgB,WAA1C,EAAuD;AACnD,MAAIyG,gBAAgB,GAAGzG,WAAW,CAAC,KAAD,EAAQ,EAAR,CAAlC;AACA,MAAI0G,qBAAqB,GAAG1G,WAAW,CAAC,KAAD,EAAQ,EAAR,CAAvC;AACAyG,EAAAA,gBAAgB,CAACtJ,SAAjB,CAA2BiD,GAA3B,CAA+B/B,YAA/B;AACAqI,EAAAA,qBAAqB,CAACvJ,SAAtB,CAAgCiD,GAAhC,CAAoC9B,cAApC;AACAU,EAAAA,MAAM,CAACgC,WAAP,CAAmByF,gBAAnB;AACAA,EAAAA,gBAAgB,CAACzF,WAAjB,CAA6B0F,qBAA7B,EANmD,CAOnD;;AACA,SAAO;AAAEvG,IAAAA,IAAI,EAAEsG,gBAAR;AAA0B5F,IAAAA,UAAU,EAAE6F;AAAtC,GAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS3E,eAAT,CAAyBF,WAAzB,EAAsC;AAClC,MAAIkC,KAAK,GAAG,CAAZ;AACA,MAAIO,GAAG,GAAG,GAAV;AACA,MAAIqC,QAAQ,GAAG,IAAf;AACA,MAAIC,GAAG,GAAG,EAAV;AACAC,EAAAA,YAAY,CAAC9C,KAAD,EAAQO,GAAR,EAAawC,aAAb,EAA4BH,QAA5B,EAAsC9E,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CsD,KAAnF,EAA0FoC,GAA1F,EAA+F/E,WAA/F,CAAZ;AACAA,EAAAA,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CsD,KAA7C,GAAqD,EAAE3C,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CsD,KAA/C,GAAuD,CAA5G;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqC,YAAT,CAAsB9C,KAAtB,EAA6BO,GAA7B,EAAkCyC,MAAlC,EAA0CJ,QAA1C,EAAoDnC,KAApD,EAA2DoC,GAA3D,EAAgE/E,WAAhE,EAA6E;AACzE,MAAIkD,EAAE,GAAG,EAAElD,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CyE,UAAxD;AACA,MAAIqB,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,MAAIC,MAAM,GAAG7C,GAAG,GAAGP,KAAnB;AACA,MAAIqD,QAAQ,GAAGC,OAAO,CAAExF,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CnB,MAA7C,GAAsD,CAAvD,GAA4D,EAA7D,CAAtB;AACA,MAAIuH,UAAU,GAAGC,aAAa,CAACH,QAAD,CAA9B;AACA,MAAII,MAAM,GAAG,CAAC,EAAD,IAAO3F,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CsD,KAA7C,IAAsD,CAA7D,CAAb;AACAiD,EAAAA,aAAa,CAAC5F,WAAD,CAAb,CAPyE,CAQzE;;AACA,WAAS4F,aAAT,CAAuB5F,WAAvB,EAAoC;AAChC,QAAI6F,WAAW,GAAG3B,IAAI,CAACa,GAAL,CAAS,CAAT,EAAYb,IAAI,CAAC4B,GAAL,CAAS,IAAIV,IAAJ,GAAWC,OAAX,KAAuBF,SAAhC,EAA2CL,QAA3C,CAAZ,CAAlB;AACAiB,IAAAA,UAAU,CAACb,MAAM,CAACW,WAAD,EAAc3D,KAAd,EAAqBoD,MAArB,EAA6BR,QAA7B,CAAP,EAA+C9E,WAAW,CAAC5B,SAA3D,CAAV;;AACA,QAAI8E,EAAE,KAAKlD,WAAW,CAACC,UAAZ,CAAuBD,WAAW,CAACX,QAAnC,EAA6CyE,UAApD,IAAkE+B,WAAW,GAAGf,QAApF,EAA8F;AAC1F;AACAtJ,MAAAA,aAAa,CAACwE,WAAW,CAACX,QAAb,CAAb,CAAoCE,OAApC,GAA8CmE,UAAU,CAACkC,aAAa,CAACjC,IAAd,CAAmB,IAAnB,EAAyB3D,WAAzB,CAAD,EAAwC,CAAxC,CAAxD;AACH,KAHD,MAIK;AACDE,MAAAA,eAAe,CAACF,WAAD,CAAf;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI,WAAS+F,UAAT,CAAoBC,KAApB,EAA2B5H,SAA3B,EAAsC;AAClC,QAAK,CAAC/C,iBAAiB,CAAC+C,SAAS,CAACb,aAAV,CAAwB,qBAAxB,CAAD,CAAnB,IACI,CAAClC,iBAAiB,CAAC+C,SAAS,CAACb,aAAV,CAAwB,qBAAxB,EAA+CA,aAA/C,CAA6D,oBAA7D,CAAD,CAD1B,EACiH;AAC7G,UAAIsD,GAAG,GAAGzC,SAAS,CAACb,aAAV,CAAwB,qBAAxB,CAAV;AACA,UAAI0I,IAAI,GAAGpF,GAAG,CAACtD,aAAJ,CAAkB,oBAAlB,CAAX;AACA0I,MAAAA,IAAI,CAAC1E,YAAL,CAAkB,mBAAlB,EAAuC2E,aAAa,CAACX,QAAD,EAAWE,UAAX,EAAuBO,KAAvB,EAA8BjB,GAA9B,CAAb,GAAkD,EAAzF;AACAkB,MAAAA,IAAI,CAAC1E,YAAL,CAAkB,WAAlB,EAA+B,YAAaoE,MAAb,GAAuB,GAAvB,GAA6BJ,QAAQ,GAAG,CAAxC,GAA4C,GAA5C,GAAkDA,QAAQ,GAAG,CAA7D,GAAiE,GAAhG;AACH;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS9F,wBAAT,CAAkCvB,MAAlC,EAA0CE,SAA1C,EAAqDhB,IAArD,EAA2DqH,GAA3D,EAAgE;AAC5D,MAAIc,QAAQ,GAAGrH,MAAM,GAAG,CAAxB;AACA,MAAI2C,GAAG,GAAGzC,SAAS,CAACb,aAAV,CAAwB,SAASkH,GAAjC,CAAV;AACA,MAAIwB,IAAI,GAAGpF,GAAG,CAACtD,aAAJ,CAAkB,oBAAlB,CAAX;AACA,MAAIkI,UAAU,GAAGC,aAAa,CAACH,QAAD,CAA9B;AACA,MAAIY,eAAe,GAAIZ,QAAQ,GAAG,CAAZ,GAAiB,IAAvC;AACA1E,EAAAA,GAAG,CAACU,YAAJ,CAAiB,SAAjB,EAA4B,SAASgE,QAAT,GAAoB,GAApB,GAA0BA,QAAtD;AACA1E,EAAAA,GAAG,CAACkB,KAAJ,CAAUpE,KAAV,GAAkBkD,GAAG,CAACkB,KAAJ,CAAUC,MAAV,GAAmBuD,QAAQ,GAAG,IAAhD;AACA1E,EAAAA,GAAG,CAACkB,KAAJ,CAAUoE,eAAV,GAA4BA,eAAe,GAAG,GAAlB,GAAwBA,eAAxB,GAA0C,GAA1C,GAAgDA,eAA5E;AACAF,EAAAA,IAAI,CAAC1E,YAAL,CAAkB,GAAlB,EAAuB6E,OAAO,CAACb,QAAD,EAAWE,UAAX,CAA9B;;AACA,MAAIrI,IAAI,KAAK,UAAb,EAAyB;AACrB6I,IAAAA,IAAI,CAAC1E,YAAL,CAAkB,cAAlB,EAAkCkE,UAAU,GAAG,EAA/C;AACAQ,IAAAA,IAAI,CAAC1E,YAAL,CAAkB,kBAAlB,EAAuC,CAACgE,QAAQ,GAAGE,UAAZ,IAA0BvB,IAAI,CAACmC,EAA/B,GAAoC,IAArC,GAA6C,EAAnF;AACAJ,IAAAA,IAAI,CAAC1E,YAAL,CAAkB,mBAAlB,EAAuC2E,aAAa,CAACX,QAAD,EAAWE,UAAX,EAAuB,CAAvB,EAA0B,EAA1B,CAAb,GAA6C,EAApF;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASD,OAAT,CAAiBQ,KAAjB,EAAwB;AACpB,MAAIM,MAAM,GAAGvD,UAAU,CAACiD,KAAD,CAAvB;AACA,SAAOM,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBb,QAAjB,EAA2BE,UAA3B,EAAuC;AACnC,MAAIvH,MAAM,GAAGqH,QAAQ,GAAG,CAAxB;AACA,MAAIgB,MAAM,GAAGd,UAAU,GAAG,CAA1B;AACA,SAAO,MAAMvH,MAAN,GAAe,GAAf,GAAqBqI,MAArB,GACD,GADC,IACMrI,MAAM,GAAGqI,MADf,IACyB,GADzB,IACgCrI,MAAM,GAAGqI,MADzC,IACmD,SADnD,GAC+DA,MAD/D,GACwE,GADxE,GAC8ErI,MADrF;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASwH,aAAT,CAAuBH,QAAvB,EAAiC;AAC7B,SAAO,KAAK,GAAL,GAAWA,QAAlB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASW,aAAT,CAAuBX,QAAvB,EAAiCE,UAAjC,EAA6CO,KAA7C,EAAoDjB,GAApD,EAAyD;AACrD,SAAO,CAACQ,QAAQ,GAAGE,UAAZ,IAA0BvB,IAAI,CAACmC,EAA/B,IAAsC,IAAKtB,GAAL,GAAY,GAAb,GAAqBiB,KAAK,GAAG,GAAlE,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASf,aAAT,CAAuBuB,OAAvB,EAAgCtE,KAAhC,EAAuCoD,MAAvC,EAA+CR,QAA/C,EAAyD;AACrD,MAAI2B,SAAS,GAAG,CAACD,OAAO,IAAI1B,QAAZ,IAAwB0B,OAAxC;AACA,MAAIE,SAAS,GAAGD,SAAS,GAAGD,OAA5B;AACA,SAAOtE,KAAK,GAAGoD,MAAM,IAAI,IAAIoB,SAAJ,GAAgBD,SAAhB,GAA4B,CAAC,EAAD,GAAMA,SAAN,GAAkBA,SAA9C,GAA0D,KAAKC,SAAnE,CAArB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrG,uBAAT,CAAiCnC,MAAjC,EAAyCyI,aAAzC,EAAwDC,QAAxD,EAAkE;AAC9D,MAAIC,OAAO,GAAG3I,MAAd;AACA,MAAI4I,OAAO,GAAG5I,MAAd;AACA,MAAIqH,QAAQ,GAAGrH,MAAM,GAAG,CAAxB,CAH8D,CAI9D;;AACA,MAAI+D,QAAQ,GAAG,GAAf;AAAA,MAAoB8E,MAAM,GAAG,EAA7B;AACA,MAAIlG,GAAG,GAAG8F,aAAa,CAACpJ,aAAd,CAA4B,MAAMqJ,QAAlC,CAAV;AACA,MAAItD,MAAM,GAAGzC,GAAG,CAACtD,aAAJ,CAAkB,gBAAlB,CAAb;AACA,MAAI0I,IAAI,GAAGpF,GAAG,CAACtD,aAAJ,CAAkB,aAAlB,CAAX;AACA,MAAI4I,eAAe,GAAIZ,QAAQ,GAAG,CAAZ,GAAiB,IAAvC;AACAjC,EAAAA,MAAM,CAAC/B,YAAP,CAAoB,GAApB,EAAyByF,YAAY,CAACH,OAAD,EAAUC,OAAV,EAAmB5I,MAAnB,CAArC;AACA+H,EAAAA,IAAI,CAAC1E,YAAL,CAAkB,GAAlB,EAAuB0F,SAAS,CAACJ,OAAD,EAAUC,OAAV,EAAmB5I,MAAnB,EAA2B+D,QAA3B,EAAqC8E,MAArC,CAAhC;AACAlG,EAAAA,GAAG,CAACU,YAAJ,CAAiB,SAAjB,EAA4B,SAASgE,QAAT,GAAoB,GAApB,GAA0BA,QAAtD;AACA1E,EAAAA,GAAG,CAACkB,KAAJ,CAAUoE,eAAV,GAA4BA,eAAe,GAAG,GAAlB,GAAwBA,eAAxB,GAA0C,GAA1C,GAAgDA,eAA5E;AACAtF,EAAAA,GAAG,CAACkB,KAAJ,CAAUpE,KAAV,GAAkBkD,GAAG,CAACkB,KAAJ,CAAUC,MAAV,GAAmBuD,QAAQ,GAAG,IAAhD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASpD,eAAT,CAAyB0E,OAAzB,EAAkCC,OAAlC,EAA2C5I,MAA3C,EAAmDgJ,KAAnD,EAA0D;AACtD,MAAIC,OAAO,GAAG,CAACD,KAAK,GAAG,EAAT,IAAehD,IAAI,CAACmC,EAApB,GAAyB,KAAvC;AACA,SAAO;AACHzE,IAAAA,CAAC,EAAEiF,OAAO,GAAI3I,MAAM,GAAGgG,IAAI,CAACkD,GAAL,CAASD,OAAT,CADpB;AAEHtF,IAAAA,CAAC,EAAEiF,OAAO,GAAI5I,MAAM,GAAGgG,IAAI,CAACmD,GAAL,CAASF,OAAT;AAFpB,GAAP;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,SAAT,CAAmBrF,CAAnB,EAAsBC,CAAtB,EAAyB3D,MAAzB,EAAiC+D,QAAjC,EAA2C8E,MAA3C,EAAmD;AAC/C,MAAI7E,KAAK,GAAGC,eAAe,CAACP,CAAD,EAAIC,CAAJ,EAAO3D,MAAP,EAAe6I,MAAf,CAA3B;AACA,MAAItE,GAAG,GAAGN,eAAe,CAACP,CAAD,EAAIC,CAAJ,EAAO3D,MAAP,EAAe+D,QAAf,CAAzB;AACA,MAAIqF,CAAC,GAAG,CACJ,GADI,EACCpF,KAAK,CAACN,CADP,EACUM,KAAK,CAACL,CADhB,EAEJ,GAFI,EAEC3D,MAFD,EAESA,MAFT,EAEiB,CAFjB,EAEoB,CAFpB,EAEuB,CAFvB,EAE0BuE,GAAG,CAACb,CAF9B,EAEiCa,GAAG,CAACZ,CAFrC,EAGN0F,IAHM,CAGD,GAHC,CAAR;AAIA,SAAOD,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,YAAT,CAAsBpF,CAAtB,EAAyBC,CAAzB,EAA4B3D,MAA5B,EAAoC;AAChC,MAAIoJ,CAAC,GAAG,CACJ,GADI,EACC1F,CADD,EACIC,CADJ,EAEJ,GAFI,EAEC,CAAC3D,MAFF,EAEU,CAFV,EAGJ,GAHI,EAGCA,MAHD,EAGSA,MAHT,EAGiB,CAHjB,EAGoB,CAHpB,EAGuB,CAHvB,EAG0BA,MAAM,GAAG,CAHnC,EAGsC,CAHtC,EAIJ,GAJI,EAICA,MAJD,EAISA,MAJT,EAIiB,CAJjB,EAIoB,CAJpB,EAIuB,CAJvB,EAI0B,CAACA,MAAD,GAAU,CAJpC,EAIuC,CAJvC,EAKNqJ,IALM,CAKD,GALC,CAAR;AAMA,SAAOD,CAAP;AACH,C,CACD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASzJ,WAAT,CAAqBO,SAArB,EAAgC;AACnCoJ,EAAAA,eAAe,CAACpJ,SAAD,EAAY,KAAZ,CAAf;AACAA,EAAAA,SAAS,GAAG,IAAZ;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,SAASoJ,eAAT,CAAyBpJ,SAAzB,EAAoCqJ,MAApC,EAA4C;AACxC,MAAIC,WAAJ;;AACA,MAAItJ,SAAJ,EAAe;AACXsJ,IAAAA,WAAW,GAAGtJ,SAAS,CAAC9C,SAAV,CAAoBqM,QAApB,CAA6BnL,YAA7B,IAA6C4B,SAA7C,GACVA,SAAS,CAACb,aAAV,CAAwB,MAAMf,YAA9B,CADJ;AAEH;;AACD,MAAI4B,SAAS,IAAIsJ,WAAjB,EAA8B;AAC1B,QAAI9D,KAAK,GAAG8D,WAAW,CAACnK,aAAZ,CAA0B,MAAMd,cAAhC,CAAZ;AACA,QAAImL,SAAS,GAAG,KAAK,CAArB,CAF0B,CAG1B;;AACAA,IAAAA,SAAS,GAAGH,MAAM,GAAG,CAACC,WAAW,CAACpM,SAAZ,CAAsBqM,QAAtB,CAA+B9K,gBAA/B,CAAD,IAAqD,CAAC6K,WAAW,CAACpM,SAAZ,CAAsBqM,QAAtB,CAA+B3L,YAA/B,CAAzD,GACd,CAAC0L,WAAW,CAACpM,SAAZ,CAAsBqM,QAAtB,CAA+B9K,gBAA/B,CAAD,IAAqD,CAAC6K,WAAW,CAACpM,SAAZ,CAAsBqM,QAAtB,CAA+B5L,YAA/B,CAD1D;;AAEA,QAAI6L,SAAJ,EAAe;AACX,UAAIC,MAAM,GAAGH,WAAW,CAACnK,aAAZ,CAA0B,KAA1B,CAAb;;AACA,UAAIlC,iBAAiB,CAACwM,MAAD,CAArB,EAA+B;AAC3B;AACH;;AACD,UAAI3E,EAAE,GAAG2E,MAAM,CAAC1E,YAAP,CAAoB,IAApB,CAAT;AACA3H,MAAAA,aAAa,CAAC0H,EAAD,CAAb,CAAkBM,SAAlB,GAA8B,CAACiE,MAA/B;;AACA,cAAQjM,aAAa,CAAC0H,EAAD,CAAb,CAAkB9F,IAA1B;AACI,aAAK,UAAL;AACI;AACAqK,UAAAA,MAAM,GAAGK,YAAY,CAACtM,aAAa,CAAC0H,EAAD,CAAb,CAAkB3D,OAAnB,CAAf,GAA6CK,eAAe,CAACgE,KAAD,EAAQV,EAAR,EAAY1H,aAAa,CAAC0H,EAAD,CAAb,CAAkBhF,MAA9B,CAAlE;AACA;;AACJ,aAAK,WAAL;AACI;AACAuJ,UAAAA,MAAM,GAAGK,YAAY,CAACtM,aAAa,CAAC0H,EAAD,CAAb,CAAkB3D,OAAnB,CAAf,GAA6C0D,gBAAgB,CAACW,KAAD,CAAnE;AACA;AARR;AAUH,KAvByB,CAwB1B;;;AACA6D,IAAAA,MAAM,GAAGnM,SAAS,CAACoM,WAAD,EAAc,CAAC1L,YAAD,CAAd,EAA8B,CAACD,YAAD,CAA9B,CAAZ,GAA4DT,SAAS,CAACoM,WAAD,EAAc,CAAC3L,YAAD,CAAd,EAA8B,CAACC,YAAD,CAA9B,CAA3E;AACAoC,IAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASN,WAAT,CAAqBM,SAArB,EAAgC;AACnCoJ,EAAAA,eAAe,CAACpJ,SAAD,EAAY,IAAZ,CAAf;AACAA,EAAAA,SAAS,GAAG,IAAZ;AACH,C,CACD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASJ,UAAT,CAAoBR,IAApB,EAA0BS,qBAA1B,EAAiD;AACpD,MAAIE,WAAW,GAAG,CAAC9C,iBAAiB,CAAC4C,qBAAD,CAAlB,GAA4CA,qBAA5C,GAAoE1C,aAAtF;;AACA,MAAIiC,IAAI,CAACgB,QAAL,KAAkBI,SAAtB,EAAiC;AAC7B9B,IAAAA,YAAY,GAAGU,IAAI,CAACgB,QAApB;;AACA,QAAIhB,IAAI,CAACgB,QAAL,KAAkBI,SAAtB,EAAiC;AAC7B7B,MAAAA,YAAY,GAAGS,IAAI,CAACC,QAApB;AACH;AACJ;;AACD,MAAIW,SAAS,GAAGd,QAAQ,CAACyK,gBAAT,CAA0B,MAAMvL,YAAhC,CAAhB;;AACA,OAAK,IAAIwL,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG5J,SAAS,CAACqF,MAAtC,EAA8CuE,KAAK,EAAnD,EAAuD;AACnDC,IAAAA,cAAc,CAACzK,IAAI,CAACgB,QAAN,EAAgBJ,SAAS,CAAC4J,KAAD,CAAzB,EAAkCxK,IAAI,CAACJ,IAAvC,EAA6CI,IAAI,CAACC,QAAlD,EAA4DU,WAA5D,CAAd;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS8J,cAAT,CAAwBzJ,QAAxB,EAAkCJ,SAAlC,EAA6CM,KAA7C,EAAoDjB,QAApD,EAA8DyK,OAA9D,EAAuE;AACnE,MAAI7M,iBAAiB,CAACmD,QAAD,CAAjB,IAA+B,CAACJ,SAAS,CAAC9C,SAAV,CAAoBqM,QAApB,CAA6B9K,gBAA7B,CAApC,EAAoF;AAChFsL,IAAAA,YAAY,CAAC/J,SAAD,EAAYM,KAAZ,EAAmBjB,QAAnB,EAA6ByK,OAA7B,CAAZ;;AACA,QAAI9J,SAAS,CAAC9C,SAAV,CAAoBqM,QAApB,CAA6B5L,YAA7B,CAAJ,EAAgD;AAC5CqC,MAAAA,SAAS,CAAC9C,SAAV,CAAoB8M,MAApB,CAA2BrM,YAA3B;AACA8B,MAAAA,WAAW,CAACO,SAAD,CAAX;AACH,KAHD,MAIK;AACDA,MAAAA,SAAS,CAAC9C,SAAV,CAAoB8M,MAApB,CAA2BpM,YAA3B;AACA8B,MAAAA,WAAW,CAACM,SAAD,CAAX;AACH;AACJ,GAVD,MAWK;AACDtB,IAAAA,YAAY,GAAG0B,QAAf;;AACA,QAAI,CAACnD,iBAAiB,CAACoC,QAAD,CAAtB,EAAkC;AAC9BV,MAAAA,YAAY,GAAGU,QAAf;AACH;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0K,YAAT,CAAsB/J,SAAtB,EAAiCM,KAAjC,EAAwCjB,QAAxC,EAAkDyK,OAAlD,EAA2D;AACvD,MAAI,CAAC7M,iBAAiB,CAACoC,QAAD,CAAtB,EAAkC;AAC9BW,IAAAA,SAAS,CAAC9C,SAAV,CAAoBiD,GAApB,CAAwBd,QAAxB;AACH;;AACD,MAAI4K,UAAU,GAAGjK,SAAS,CAACb,aAAV,CAAwB,KAAxB,CAAjB;AACA,MAAIW,MAAM,GAAGQ,KAAK,KAAK,WAAV,GAAwBqE,UAAU,CAACsF,UAAU,CAACtG,KAAX,CAAiBC,MAAlB,CAAlC,GAA8De,UAAU,CAACsF,UAAU,CAACtG,KAAX,CAAiBC,MAAlB,CAAV,GAAsC,CAAjH;AACA,MAAIsG,UAAU,GAAGD,UAAU,CAAClF,YAAX,CAAwB,OAAxB,CAAjB;AACA,MAAIoF,YAAY,GAAGD,UAAU,CAACE,KAAX,CAAiB,IAAjB,CAAnB;;AACA,MAAID,YAAY,CAACE,OAAb,CAAqB,iBAArB,KAA2C,CAA/C,EAAkD;AAC9C,QAAIvF,EAAE,GAAGmF,UAAU,CAAClF,YAAX,CAAwB,IAAxB,CAAT;AACA2E,IAAAA,YAAY,CAACtM,aAAa,CAAC0H,EAAD,CAAb,CAAkB3D,OAAnB,CAAZ;AACH;;AACDT,EAAAA,QAAQ,CAACJ,KAAD,EAAQN,SAAR,EAAmBF,MAAnB,EAA2BgK,OAA3B,CAAR;AACH","sourcesContent":["import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\r\nvar globalTimeOut = {};\r\nvar DEFT_MAT_WIDTH = 30;\r\nvar DEFT_FAB_WIDTH = 30;\r\nvar DEFT_TAIL_WIDTH = 24;\r\nvar DEFT_BOOT_WIDTH = 30;\r\nvar DEFT_BOOT4_WIDTH = 36;\r\nvar DEFT_BOOT5_WIDTH = 36;\r\nvar CLS_SHOWSPIN = 'e-spin-show';\r\nvar CLS_HIDESPIN = 'e-spin-hide';\r\nvar CLS_MATERIALSPIN = 'e-spin-material';\r\nvar CLS_FABRICSPIN = 'e-spin-fabric';\r\nvar CLS_TAILWINDSPIN = 'e-spin-tailwind';\r\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\r\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\r\nvar CLS_BOOT5SPIN = 'e-spin-bootstrap5';\r\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\r\nvar CLS_SPINWRAP = 'e-spinner-pane';\r\nvar CLS_SPININWRAP = 'e-spinner-inner';\r\nvar CLS_SPINCIRCLE = 'e-path-circle';\r\nvar CLS_SPINARC = 'e-path-arc';\r\nvar CLS_SPINLABEL = 'e-spin-label';\r\nvar CLS_SPINTEMPLATE = 'e-spin-template';\r\nvar spinTemplate = null;\r\nvar spinCSSClass = null;\r\n// eslint-disable-next-line\r\n/**\r\n  * Function to change the Spinners in a page globally from application end.\r\n  * ```\r\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\r\n  * ```\r\n  *\r\n  * @param {string} action - specifies the string\r\n  * @param {CreateArgs} options - specifies the args\r\n  * @param {string} target - specifies the target\r\n  * @param {string} type - specifes the type\r\n  * @returns {void}\r\n  * @private\r\n  */\r\nexport function Spinner(action, options, target, type) {\r\n    switch (action) {\r\n        case 'Create':\r\n            /* eslint-disable */\r\n            var element = document.querySelector(options.target);\r\n            var args = { type: type, target: element, cssClass: options.cssClass,\r\n                label: options.label, width: options.width };\r\n            /* eslint-enable */\r\n            createSpinner(args);\r\n            break;\r\n        case 'Show':\r\n            showSpinner(document.querySelector(target));\r\n            break;\r\n        case 'Hide':\r\n            hideSpinner(document.querySelector(target));\r\n            break;\r\n        case 'Set':\r\n            // eslint-disable-next-line\r\n            var setArgs = { cssClass: options.cssClass, type: type };\r\n            setSpinner(setArgs);\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Create a spinner for the specified target element.\r\n * ```\r\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\r\n * ```\r\n *\r\n * @param {SpinnerArgs} args - specifies the args\r\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\r\n * @returns {void}\r\n * @private\r\n */\r\nexport function createSpinner(args, internalCreateElement) {\r\n    if (!args.target) {\r\n        return;\r\n    }\r\n    var radius;\r\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\r\n    // eslint-disable-next-line\r\n    var container = create_spinner_container(args.target, makeElement);\r\n    if (!isNullOrUndefined(args.cssClass)) {\r\n        container.wrap.classList.add(args.cssClass);\r\n    }\r\n    if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\r\n        var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\r\n        container.wrap.classList.add(CLS_SPINTEMPLATE);\r\n        replaceContent(container.wrap, template, spinCSSClass);\r\n    }\r\n    else {\r\n        var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\r\n        var width = !isNullOrUndefined(args.width) ? args.width : undefined;\r\n        radius = calculateRadius(width, theme);\r\n        setTheme(theme, container.wrap, radius, makeElement);\r\n        if (!isNullOrUndefined(args.label)) {\r\n            createLabel(container.inner_wrap, args.label, makeElement);\r\n        }\r\n    }\r\n    container.wrap.classList.add(CLS_HIDESPIN);\r\n    container = null;\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} label - specifies the string\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {HTMLElement} - returns the element\r\n */\r\nfunction createLabel(container, label, makeElement) {\r\n    var labelEle = makeElement('div', {});\r\n    labelEle.classList.add(CLS_SPINLABEL);\r\n    labelEle.innerHTML = label;\r\n    container.appendChild(labelEle);\r\n    return labelEle;\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createMaterialSpinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Material', radius: radius };\r\n    create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\r\n    mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createBootstrap4Spinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap4', radius: radius };\r\n    create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\r\n    mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createBootstrap5Spinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap5', radius: radius };\r\n    create_material_element(container, uniqueID, makeElement, CLS_BOOT5SPIN);\r\n    mat_calculate_attributes(radius, container, 'Bootstrap5', CLS_BOOT5SPIN);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} uniqueID - specifies the id.\r\n * @param {number} radius - specifies the radius\r\n * @returns {void}\r\n */\r\nfunction startMatAnimate(container, uniqueID, radius) {\r\n    var globalObject = {};\r\n    var timeOutVar = 0;\r\n    globalTimeOut[uniqueID].timeOut = 0;\r\n    globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0);\r\n    // eslint-disable-next-line\r\n    var spinnerInfo = { uniqueID: uniqueID, container: container, globalInfo: globalObject, timeOutVar: timeOutVar };\r\n    animateMaterial(spinnerInfo);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createFabricSpinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Fabric', radius: radius };\r\n    create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\r\n    fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\r\n}\r\nfunction createTailwindSpinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Tailwind', radius: radius };\r\n    create_fabric_element(container, uniqueID, CLS_TAILWINDSPIN, makeElement);\r\n    fb_calculate_attributes(radius, container, CLS_TAILWINDSPIN);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createHighContrastSpinner(container, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'HighContrast', radius: radius };\r\n    create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\r\n    fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @returns {string} - returns the string\r\n */\r\nfunction getTheme(container) {\r\n    var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\r\n    return theme.replace(/['\"]+/g, '');\r\n}\r\n/**\r\n *\r\n * @param {string} theme - specifies the theme\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction setTheme(theme, container, radius, makeElement) {\r\n    var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\r\n    var svg = innerContainer.querySelector('svg');\r\n    if (!isNullOrUndefined(svg)) {\r\n        innerContainer.removeChild(svg);\r\n    }\r\n    switch (theme) {\r\n        case 'Material':\r\n            createMaterialSpinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'Fabric':\r\n            createFabricSpinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'Bootstrap':\r\n            createBootstrapSpinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'HighContrast':\r\n            createHighContrastSpinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'Bootstrap4':\r\n            createBootstrap4Spinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'Bootstrap5':\r\n            createBootstrap5Spinner(innerContainer, radius, makeElement);\r\n            break;\r\n        case 'Tailwind':\r\n        case 'Tailwind-dark':\r\n            createTailwindSpinner(innerContainer, radius, makeElement);\r\n            break;\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\r\n    var uniqueID = random_generator();\r\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap', radius: radius };\r\n    create_bootstrap_element(innerContainer, uniqueID, makeElement);\r\n    boot_calculate_attributes(innerContainer, radius);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {string} uniqueID - specifies the id\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\r\n    var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    var viewBoxValue = 64;\r\n    var trans = 32;\r\n    var defaultRadius = 2;\r\n    svgBoot.setAttribute('id', uniqueID);\r\n    svgBoot.setAttribute('class', CLS_BOOTSPIN);\r\n    svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\r\n    innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\r\n    for (var item = 0; item <= 7; item++) {\r\n        var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\r\n        bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\r\n        bootCircle.setAttribute('r', defaultRadius + '');\r\n        bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\r\n        svgBoot.appendChild(bootCircle);\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {number} radius - specifies the radius\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction boot_calculate_attributes(innerContainer, radius) {\r\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\r\n    var x = 0;\r\n    var y = 0;\r\n    var rad = 24;\r\n    svg.style.width = svg.style.height = radius + 'px';\r\n    var startArc = 90;\r\n    for (var item = 0; item <= 7; item++) {\r\n        var start = defineArcPoints(x, y, rad, startArc);\r\n        var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\r\n        circleEle.setAttribute('cx', start.x + '');\r\n        circleEle.setAttribute('cy', start.y + '');\r\n        startArc = startArc >= 360 ? 0 : startArc;\r\n        startArc = startArc + 45;\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {number} begin - specifies the number\r\n * @param {number} stop  - specifirs the number\r\n * @returns {number[]} - returns the array of number\r\n */\r\nfunction generateSeries(begin, stop) {\r\n    var series = [];\r\n    var start = begin;\r\n    var end = stop;\r\n    // eslint-disable-next-line\r\n    var increment = false, count = 1;\r\n    formSeries(start);\r\n    /**\r\n     *\r\n     * @param {number} i - specifies the number\r\n     * @returns {void}\r\n     */\r\n    function formSeries(i) {\r\n        series.push(i);\r\n        if (i !== end || count === 1) {\r\n            if (i <= start && i > 1 && !increment) {\r\n                i = parseFloat((i - 0.2).toFixed(2));\r\n            }\r\n            else if (i === 1) {\r\n                i = 7;\r\n                i = parseFloat((i + 0.2).toFixed(2));\r\n                increment = true;\r\n            }\r\n            else if (i < 8 && increment) {\r\n                i = parseFloat((i + 0.2).toFixed(2));\r\n                if (i === 8) {\r\n                    increment = false;\r\n                }\r\n            }\r\n            else if (i <= 8 && !increment) {\r\n                i = parseFloat((i - 0.2).toFixed(2));\r\n            }\r\n            ++count;\r\n            formSeries(i);\r\n        }\r\n    }\r\n    return series;\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @returns {void}\r\n */\r\nfunction animateBootstrap(innerContainer) {\r\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\r\n    var id = svg.getAttribute('id');\r\n    for (var i = 1; i <= 8; i++) {\r\n        var circleEle = (innerContainer.getElementsByClassName('e-path-circle_' +\r\n            (i === 8 ? 0 : i))[0]);\r\n        rotation(circleEle, i, i, generateSeries(i, i), id);\r\n    }\r\n    /**\r\n     *\r\n     * @param {SVGCircleElement} circle - specifies the circl element\r\n     * @param {number} start - specifies the number\r\n     * @param {number} end - specifies the end number\r\n     * @param {number} series - specifies the series\r\n     * @param {string} id - specifies the id\r\n     * @returns {void}\r\n     */\r\n    function rotation(circle, start, end, series, id) {\r\n        var count = 0;\r\n        boot_animate(start);\r\n        // eslint-disable-next-line\r\n        function boot_animate(radius) {\r\n            if (globalTimeOut[id].isAnimate) {\r\n                ++count;\r\n                circle.setAttribute('r', radius + '');\r\n                if (count >= series.length) {\r\n                    count = 0;\r\n                }\r\n                // eslint-disable-next-line\r\n                globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} template - specifies the template\r\n * @param {string} cssClass - specifies the css class.\r\n * @returns {void}\r\n */\r\nfunction replaceContent(container, template, cssClass) {\r\n    if (!isNullOrUndefined(cssClass)) {\r\n        container.classList.add(cssClass);\r\n    }\r\n    var inner = container.querySelector('.e-spinner-inner');\r\n    inner.innerHTML = template;\r\n}\r\n/**\r\n *\r\n * @param {string} width - specifies the width\r\n * @param {string} theme - specifies the string\r\n * @returns {number} - returns the number\r\n */\r\nfunction calculateRadius(width, theme) {\r\n    var defaultSize;\r\n    switch (theme) {\r\n        case 'Material':\r\n            defaultSize = DEFT_MAT_WIDTH;\r\n            break;\r\n        case 'Fabric':\r\n            defaultSize = DEFT_FAB_WIDTH;\r\n            break;\r\n        case 'Tailwind':\r\n        case 'Tailwind-dark':\r\n            defaultSize = DEFT_FAB_WIDTH;\r\n            break;\r\n        case 'Bootstrap4':\r\n            defaultSize = DEFT_BOOT4_WIDTH;\r\n            break;\r\n        case 'Bootstrap5':\r\n            defaultSize = DEFT_BOOT5_WIDTH;\r\n            break;\r\n        default:\r\n            defaultSize = DEFT_BOOT_WIDTH;\r\n    }\r\n    width = width ? parseFloat(width + '') : defaultSize;\r\n    return theme === 'Bootstrap' ? width : width / 2;\r\n}\r\n/**\r\n *\r\n * @param {string} id - specifies the id\r\n * @param {number} radius - specifies the radius\r\n * @param {number} count - specifies the number count\r\n * @param {number} previousId - specifies the previous id\r\n * @returns {GlobalVariables} - returns the variables\r\n */\r\nfunction globalVariables(id, radius, count, previousId) {\r\n    return {\r\n        radius: radius,\r\n        count: count,\r\n        previousId: previousId\r\n    };\r\n}\r\n/**\r\n * @returns {string} - returns the string\r\n */\r\n// eslint-disable-next-line\r\nfunction random_generator() {\r\n    var random = '';\r\n    var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < 5; i++) {\r\n        random += combine.charAt(Math.floor(Math.random() * combine.length));\r\n    }\r\n    return random;\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerCon - specifies the element\r\n * @param {string} uniqueID - specifies the unique id\r\n * @param {string} themeClass - specifies the string\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\r\n    var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    svgFabric.setAttribute('id', uniqueID);\r\n    svgFabric.setAttribute('class', themeClass);\r\n    var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\r\n    var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    fabricCircleArc.setAttribute('class', CLS_SPINARC);\r\n    innerCon.insertBefore(svgFabric, innerCon.firstChild);\r\n    svgFabric.appendChild(fabricCirclePath);\r\n    svgFabric.appendChild(fabricCircleArc);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} innerContainer - specifies the element\r\n * @param {string} uniqueID - specifies the unique id\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @param {string} cls - specifies the string\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\r\n    var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    svgMaterial.setAttribute('class', cls);\r\n    svgMaterial.setAttribute('id', uniqueID);\r\n    matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\r\n    innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\r\n    svgMaterial.appendChild(matCirclePath);\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} target - specifies the element\r\n * @param {createElementParams} makeElement - specifies the element\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction create_spinner_container(target, makeElement) {\r\n    var spinnerContainer = makeElement('div', {});\r\n    var spinnerInnerContainer = makeElement('div', {});\r\n    spinnerContainer.classList.add(CLS_SPINWRAP);\r\n    spinnerInnerContainer.classList.add(CLS_SPININWRAP);\r\n    target.appendChild(spinnerContainer);\r\n    spinnerContainer.appendChild(spinnerInnerContainer);\r\n    // eslint-disable-next-line\r\n    return { wrap: spinnerContainer, inner_wrap: spinnerInnerContainer };\r\n}\r\n/**\r\n *\r\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\r\n * @returns {void}\r\n */\r\nfunction animateMaterial(spinnerInfo) {\r\n    var start = 1;\r\n    var end = 149;\r\n    var duration = 1333;\r\n    var max = 75;\r\n    createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\r\n    spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\r\n}\r\n/**\r\n *\r\n * @param {number} start - specifies the number\r\n * @param {number} end - specifies the end number\r\n * @param {Function} easing - specifies the function\r\n * @param {number} duration - specifies the duration\r\n * @param {number} count - specifies the count\r\n * @param {number} max - specifies the max number\r\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\r\n    var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\r\n    var startTime = new Date().getTime();\r\n    var change = end - start;\r\n    var diameter = getSize((spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2) + '');\r\n    var strokeSize = getStrokeSize(diameter);\r\n    var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\r\n    mat_animation(spinnerInfo);\r\n    // eslint-disable-next-line\r\n    function mat_animation(spinnerInfo) {\r\n        var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\r\n        updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\r\n        if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\r\n            // eslint-disable-next-line\r\n            globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\r\n        }\r\n        else {\r\n            animateMaterial(spinnerInfo);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param {number} value - specifies the number value\r\n     * @param {HTMLElement} container - specifies the container\r\n     * @returns {void}\r\n     */\r\n    function updatePath(value, container) {\r\n        if ((!isNullOrUndefined(container.querySelector('svg.e-spin-material')))\r\n            && (!isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle')))) {\r\n            var svg = container.querySelector('svg.e-spin-material');\r\n            var path = svg.querySelector('path.e-path-circle');\r\n            path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\r\n            path.setAttribute('transform', 'rotate(' + (rotate) + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\r\n        }\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {number} radius - specifies the number\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {string} type - specifies the string type\r\n * @param {string} cls - specifies the string\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction mat_calculate_attributes(radius, container, type, cls) {\r\n    var diameter = radius * 2;\r\n    var svg = container.querySelector('svg.' + cls);\r\n    var path = svg.querySelector('path.e-path-circle');\r\n    var strokeSize = getStrokeSize(diameter);\r\n    var transformOrigin = (diameter / 2) + 'px';\r\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\r\n    svg.style.width = svg.style.height = diameter + 'px';\r\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\r\n    path.setAttribute('d', drawArc(diameter, strokeSize));\r\n    if (type === 'Material') {\r\n        path.setAttribute('stroke-width', strokeSize + '');\r\n        path.setAttribute('stroke-dasharray', ((diameter - strokeSize) * Math.PI * 0.75) + '');\r\n        path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {string} value - specifies the value\r\n * @returns {number} - returns the number\r\n */\r\nfunction getSize(value) {\r\n    var parsed = parseFloat(value);\r\n    return parsed;\r\n}\r\n/**\r\n *\r\n * @param {number} diameter - specifies the diameter\r\n * @param {number} strokeSize - specifies the size\r\n * @returns {string} - returns the string\r\n */\r\nfunction drawArc(diameter, strokeSize) {\r\n    var radius = diameter / 2;\r\n    var offset = strokeSize / 2;\r\n    return 'M' + radius + ',' + offset\r\n        + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\r\n}\r\n/**\r\n *\r\n * @param {number} diameter - specifies the number\r\n * @returns {number} - returns the number\r\n */\r\nfunction getStrokeSize(diameter) {\r\n    return 10 / 100 * diameter;\r\n}\r\n/**\r\n *\r\n * @param {number} diameter - specifies the number\r\n * @param {number} strokeSize - specifies the stroke size\r\n * @param {number} value - specifies the value\r\n * @param {number} max - specifies the max number\r\n * @returns {number} - returns the number\r\n */\r\nfunction getDashOffset(diameter, strokeSize, value, max) {\r\n    return (diameter - strokeSize) * Math.PI * ((3 * (max) / 100) - (value / 100));\r\n}\r\n/**\r\n *\r\n * @param {number} current - specifies the number\r\n * @param {number} start - specifies the stroke size\r\n * @param {number} change - specifies the value\r\n * @param {number} duration - specifies the max number\r\n * @returns {number} - returns the number\r\n */\r\nfunction easeAnimation(current, start, change, duration) {\r\n    var timestamp = (current /= duration) * current;\r\n    var timecount = timestamp * current;\r\n    return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\r\n}\r\n/**\r\n *\r\n * @param {number} radius - specifies the number\r\n * @param {HTMLElement} innerConainer - specifies the element\r\n * @param {string} trgClass - specifies the class\r\n * @returns {void}\r\n */\r\n// eslint-disable-next-line\r\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\r\n    var centerX = radius;\r\n    var centerY = radius;\r\n    var diameter = radius * 2;\r\n    // eslint-disable-next-line\r\n    var startArc = 315, endArc = 45;\r\n    var svg = innerConainer.querySelector('.' + trgClass);\r\n    var circle = svg.querySelector('.e-path-circle');\r\n    var path = svg.querySelector('.e-path-arc');\r\n    var transformOrigin = (diameter / 2) + 'px';\r\n    circle.setAttribute('d', defineCircle(centerX, centerY, radius));\r\n    path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\r\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\r\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\r\n    svg.style.width = svg.style.height = diameter + 'px';\r\n}\r\n/**\r\n *\r\n * @param {number} centerX - specifies the number\r\n * @param {number} centerY - specifies the stroke size\r\n * @param {number} radius - specifies the value\r\n * @param {number} angle - specifies the max number\r\n * @returns {number} - returns the number\r\n */\r\nfunction defineArcPoints(centerX, centerY, radius, angle) {\r\n    var radians = (angle - 90) * Math.PI / 180.0;\r\n    return {\r\n        x: centerX + (radius * Math.cos(radians)),\r\n        y: centerY + (radius * Math.sin(radians))\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {number} x - specifies the number\r\n * @param {number} y - specifies the stroke size\r\n * @param {number} radius - specifies the radius\r\n * @param {number} startArc - specifies the value\r\n * @param {number} endArc - specifies the max number\r\n * @returns {number} - returns the number\r\n */\r\nfunction defineArc(x, y, radius, startArc, endArc) {\r\n    var start = defineArcPoints(x, y, radius, endArc);\r\n    var end = defineArcPoints(x, y, radius, startArc);\r\n    var d = [\r\n        'M', start.x, start.y,\r\n        'A', radius, radius, 0, 0, 0, end.x, end.y\r\n    ].join(' ');\r\n    return d;\r\n}\r\n/**\r\n *\r\n * @param {number} x - specifies the number\r\n * @param {number} y - specifies the stroke size\r\n * @param {number} radius - specifies the value\r\n * @returns {string} - returns the string\r\n */\r\nfunction defineCircle(x, y, radius) {\r\n    var d = [\r\n        'M', x, y,\r\n        'm', -radius, 0,\r\n        'a', radius, radius, 0, 1, 0, radius * 2, 0,\r\n        'a', radius, radius, 0, 1, 0, -radius * 2, 0\r\n    ].join(' ');\r\n    return d;\r\n}\r\n// eslint-disable-next-line\r\n/**\r\n * Function to show the Spinner.\r\n *\r\n * @param {HTMLElement} container - Specify the target of the Spinner.\r\n * @returns {void}\r\n * @private\r\n */\r\nexport function showSpinner(container) {\r\n    showHideSpinner(container, false);\r\n    container = null;\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the element\r\n * @param {boolean} isHide - specifies the boolean\r\n * @returns {void}\r\n */\r\nfunction showHideSpinner(container, isHide) {\r\n    var spinnerWrap;\r\n    if (container) {\r\n        spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container :\r\n            container.querySelector('.' + CLS_SPINWRAP);\r\n    }\r\n    if (container && spinnerWrap) {\r\n        var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\r\n        var spinCheck = void 0;\r\n        // eslint-disable-next-line\r\n        spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) :\r\n            !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\r\n        if (spinCheck) {\r\n            var svgEle = spinnerWrap.querySelector('svg');\r\n            if (isNullOrUndefined(svgEle)) {\r\n                return;\r\n            }\r\n            var id = svgEle.getAttribute('id');\r\n            globalTimeOut[id].isAnimate = !isHide;\r\n            switch (globalTimeOut[id].type) {\r\n                case 'Material':\r\n                    // eslint-disable-next-line\r\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\r\n                    break;\r\n                case 'Bootstrap':\r\n                    // eslint-disable-next-line\r\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\r\n                    break;\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n        isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\r\n        container = null;\r\n    }\r\n}\r\n/**\r\n * Function to hide the Spinner.\r\n *\r\n * @param {HTMLElement} container - Specify the target of the Spinner.\r\n * @returns {void}\r\n * @private\r\n */\r\nexport function hideSpinner(container) {\r\n    showHideSpinner(container, true);\r\n    container = null;\r\n}\r\n// eslint-disable-next-line\r\n/**\r\n  * Function to change the Spinners in a page globally from application end.\r\n  * ```\r\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\r\n  * ```\r\n  *\r\n  * @param {SetSpinnerArgs} args - specifies the args\r\n  * @param {createElementParams} internalCreateElement - specifies the element params\r\n  * @returns {void}\r\n  * @private\r\n  */\r\nexport function setSpinner(args, internalCreateElement) {\r\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\r\n    if (args.template !== undefined) {\r\n        spinTemplate = args.template;\r\n        if (args.template !== undefined) {\r\n            spinCSSClass = args.cssClass;\r\n        }\r\n    }\r\n    var container = document.querySelectorAll('.' + CLS_SPINWRAP);\r\n    for (var index = 0; index < container.length; index++) {\r\n        ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {string} template - specifies the string\r\n * @param {HTMLElement} container - specifies the container\r\n * @param {string} theme - specifies the theme\r\n * @param {string} cssClass - specifies the string class\r\n * @param {createElementParams} makeEle - specifies the params\r\n * @returns {void}\r\n */\r\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\r\n    if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\r\n        replaceTheme(container, theme, cssClass, makeEle);\r\n        if (container.classList.contains(CLS_SHOWSPIN)) {\r\n            container.classList.remove(CLS_SHOWSPIN);\r\n            showSpinner(container);\r\n        }\r\n        else {\r\n            container.classList.remove(CLS_HIDESPIN);\r\n            hideSpinner(container);\r\n        }\r\n    }\r\n    else {\r\n        spinTemplate = template;\r\n        if (!isNullOrUndefined(cssClass)) {\r\n            spinCSSClass = cssClass;\r\n        }\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {HTMLElement} container - specifies the container\r\n * @param {string} theme - specifies the theme\r\n * @param {string} cssClass - specifies the string class\r\n * @param {createElementParams} makeEle - specifies the params\r\n * @returns {void}\r\n */\r\nfunction replaceTheme(container, theme, cssClass, makeEle) {\r\n    if (!isNullOrUndefined(cssClass)) {\r\n        container.classList.add(cssClass);\r\n    }\r\n    var svgElement = container.querySelector('svg');\r\n    var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\r\n    var classNames = svgElement.getAttribute('class');\r\n    var svgClassList = classNames.split(/\\s/);\r\n    if (svgClassList.indexOf('e-spin-material') >= 0) {\r\n        var id = svgElement.getAttribute('id');\r\n        clearTimeout(globalTimeOut[id].timeOut);\r\n    }\r\n    setTheme(theme, container, radius, makeEle);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}