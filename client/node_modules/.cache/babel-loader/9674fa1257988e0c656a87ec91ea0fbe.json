{"ast":null,"code":"var instances = 'ej2_instances';\nvar uid = 0;\nvar isBlazorPlatform = false;\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {void} result\r\n * @private\r\n */\n\nexport function disableBlazorMode() {\n  isBlazorPlatform = false;\n}\n/**\r\n * Create Instance from constructor function with desired parameters.\r\n *\r\n * @param {Function} classFunction - Class function to which need to create instance\r\n * @param {any[]} params - Parameters need to passed while creating instance\r\n * @returns {any} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function createInstance(classFunction, params) {\n  var arrayParam = params;\n  arrayParam.unshift(undefined);\n  return new (Function.prototype.bind.apply(classFunction, arrayParam))();\n}\n/**\r\n * To run a callback function immediately after the browser has completed other operations.\r\n *\r\n * @param {Function} handler - callback function to be triggered.\r\n * @returns {Function} ?\r\n * @private\r\n */\n\nexport function setImmediate(handler) {\n  var unbind; // eslint-disable-next-line\n\n  var num = new Uint16Array(5);\n  var intCrypto = window.msCrypto || window.crypto;\n  intCrypto.getRandomValues(num);\n  var secret = 'ej2' + combineArray(num); // eslint-disable-next-line\n\n  var messageHandler = function (event) {\n    if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n      handler();\n      unbind();\n    }\n  };\n\n  window.addEventListener('message', messageHandler, false);\n  window.postMessage(secret, '*');\n  return unbind = function () {\n    window.removeEventListener('message', messageHandler);\n    handler = messageHandler = secret = undefined;\n  };\n}\n/**\r\n * To get nameSpace value from the desired object.\r\n *\r\n * @param {string} nameSpace - String value to the get the inner object\r\n * @param {any} obj - Object to get the inner object value.\r\n * @returns {any} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function getValue(nameSpace, obj) {\n  // eslint-disable-next-line\n  var value = obj;\n  var splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n\n  for (var i = 0; i < splits.length && !isUndefined(value); i++) {\n    value = value[splits[i]];\n  }\n\n  return value;\n}\n/**\r\n * To set value for the nameSpace in desired object.\r\n *\r\n * @param {string} nameSpace - String value to the get the inner object\r\n * @param {any} value - Value that you need to set.\r\n * @param {any} obj - Object to get the inner object value.\r\n * @returns {any} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function setValue(nameSpace, value, obj) {\n  var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.'); // eslint-disable-next-line\n\n  var start = obj || {}; // eslint-disable-next-line\n\n  var fromObj = start;\n  var i;\n  var length = keys.length;\n  var key;\n\n  for (i = 0; i < length; i++) {\n    key = keys[i];\n\n    if (i + 1 === length) {\n      fromObj[key] = value === undefined ? {} : value;\n    } else if (isNullOrUndefined(fromObj[key])) {\n      fromObj[key] = {};\n    }\n\n    fromObj = fromObj[key];\n  }\n\n  return start;\n}\n/**\r\n * Delete an item from Object\r\n *\r\n * @param {any} obj - Object in which we need to delete an item.\r\n * @param {string} key - String value to the get the inner object\r\n * @returns {void} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function deleteObject(obj, key) {\n  delete obj[key];\n}\n/**\r\n * Check weather the given argument is only object.\r\n *\r\n * @param {any} obj - Object which is need to check.\r\n * @returns {boolean} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function isObject(obj) {\n  var objCon = {};\n  return !isNullOrUndefined(obj) && obj.constructor === objCon.constructor;\n}\n/**\r\n * To get enum value by giving the string.\r\n *\r\n * @param {any} enumObject - Enum object.\r\n * @param {string} enumValue - Enum value to be searched\r\n * @returns {any} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function getEnumValue(enumObject, enumValue) {\n  // eslint-disable-next-line\n  return enumObject[enumValue];\n}\n/**\r\n * Merge the source object into destination object.\r\n *\r\n * @param {any} source - source object which is going to merge with destination object\r\n * @param {any} destination - object need to be merged\r\n * @returns {void} ?\r\n * @private\r\n */\n\nexport function merge(source, destination) {\n  if (!isNullOrUndefined(destination)) {\n    var temrObj = source;\n    var tempProp = destination;\n    var keys = Object.keys(destination);\n    var deepmerge = 'deepMerge';\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n\n      if (!isNullOrUndefined(temrObj[deepmerge]) && temrObj[deepmerge].indexOf(key) !== -1 && (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\n        extend(temrObj[key], temrObj[key], tempProp[key], true);\n      } else {\n        temrObj[key] = tempProp[key];\n      }\n    }\n  }\n}\n/**\r\n * Extend the two object with newer one.\r\n *\r\n * @param {any} copied - Resultant object after merged\r\n * @param {Object} first - First object need to merge\r\n * @param {Object} second - Second object need to merge\r\n * @param {boolean} deep ?\r\n * @returns {Object} ?\r\n * @private\r\n */\n\nexport function extend(copied, first, second, deep) {\n  var result = copied && typeof copied === 'object' ? copied : {};\n  var length = arguments.length;\n\n  if (deep) {\n    length = length - 1;\n  }\n\n  var _loop_1 = function (i) {\n    // eslint-disable-next-line\n    if (!arguments_1[i]) {\n      return \"continue\";\n    } // eslint-disable-next-line\n\n\n    var obj1 = arguments_1[i];\n    Object.keys(obj1).forEach(function (key) {\n      var src = result[key];\n      var copy = obj1[key];\n      var clone;\n      var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && copy.length !== src.length; // eslint-disable-next-line\n\n      var blazorEventExtend = isBlazor() ? !(src instanceof Event) && !isArrayChanged : true;\n\n      if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n        if (isObject(copy)) {\n          clone = src ? src : {}; // eslint-disable-next-line\n\n          if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n            extend(clone, {}, copy, deep);\n          } else {\n            result[key] = extend(clone, {}, copy, deep);\n          }\n        } else {\n          /* istanbul ignore next */\n          clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n          result[key] = extend([], clone, copy, deep);\n        }\n      } else {\n        result[key] = copy;\n      }\n    });\n  };\n\n  var arguments_1 = arguments;\n\n  for (var i = 1; i < length; i++) {\n    _loop_1(i);\n  }\n\n  return result;\n}\n/**\r\n * To check whether the object is null or undefined.\r\n *\r\n * @param {Object} value - To check the object is null or undefined\r\n * @returns {boolean} ?\r\n * @private\r\n */\n\nexport function isNullOrUndefined(value) {\n  return value === undefined || value === null;\n}\n/**\r\n * To check whether the object is undefined.\r\n *\r\n * @param {Object} value - To check the object is undefined\r\n * @returns {boolean} ?\r\n * @private\r\n */\n\nexport function isUndefined(value) {\n  return 'undefined' === typeof value;\n}\n/**\r\n * To return the generated unique name\r\n *\r\n * @param {string} definedName - To concatenate the unique id to provided name\r\n * @returns {string} ?\r\n * @private\r\n */\n\nexport function getUniqueID(definedName) {\n  return definedName + '_' + uid++;\n}\n/**\r\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\r\n *\r\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\r\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\r\n * @returns {Function} ?\r\n * @private\r\n */\n\nexport function debounce(eventFunction, delay) {\n  // eslint-disable-next-line\n  var out;\n  return function () {\n    var _this = this; // eslint-disable-next-line\n\n\n    var args = arguments;\n\n    var later = function () {\n      out = null;\n      return eventFunction.apply(_this, args);\n    };\n\n    clearTimeout(out);\n    out = setTimeout(later, delay);\n  };\n}\n/**\r\n * To convert the object to string for query url\r\n *\r\n * @param  {Object} data ?\r\n * @returns {string} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function queryParams(data) {\n  var array = [];\n  var keys = Object.keys(data);\n\n  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n    var key = keys_2[_i];\n    array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n  }\n\n  return array.join('&');\n}\n/**\r\n * To check whether the given array contains object.\r\n *\r\n * @param {any} value - Specifies the T type array to be checked.\r\n * @returns {boolean} ?\r\n * @private\r\n */\n\nexport function isObjectArray(value) {\n  var parser = Object.prototype.toString;\n\n  if (parser.call(value) === '[object Array]') {\n    if (parser.call(value[0]) === '[object Object]') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * To check whether the  child element is descendant to parent element or parent and child are same element.\r\n *\r\n * @param {Element} child - Specifies the child element to compare with parent.\r\n * @param {Element} parent - Specifies the parent element.\r\n * @returns {boolean} ?\r\n * @private\r\n */\n\nexport function compareElementParent(child, parent) {\n  var node = child;\n\n  if (node === parent) {\n    return true;\n  } else if (node === document || !node) {\n    return false;\n  } else {\n    return compareElementParent(node.parentNode, parent);\n  }\n}\n/**\r\n * To throw custom error message.\r\n *\r\n * @param {string} message - Specifies the error message to be thrown.\r\n * @returns {void} ?\r\n * @private\r\n */\n\nexport function throwError(message) {\n  try {\n    throw new Error(message);\n  } catch (e) {\n    // eslint-disable-next-line\n    throw e.message + '\\n' + e.stack;\n  }\n}\n/**\r\n * This function is used to print given element\r\n *\r\n * @param {Element} element - Specifies the print content element.\r\n * @param {Window} printWindow - Specifies the print window.\r\n * @returns {Window} ?\r\n * @private\r\n */\n\nexport function print(element, printWindow) {\n  var div = document.createElement('div');\n  var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n  var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\n\n  if (blinks.length) {\n    for (var l = 0, len = blinks.length; l < len; l++) {\n      links.push(blinks[l]);\n    }\n  }\n\n  var reference = '';\n\n  if (isNullOrUndefined(printWindow)) {\n    printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n  }\n\n  div.appendChild(element.cloneNode(true));\n\n  for (var i = 0, len = links.length; i < len; i++) {\n    reference += links[i].outerHTML;\n  }\n\n  printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n  printWindow.document.close();\n  printWindow.focus(); // eslint-disable-next-line\n\n  var interval = setInterval(function () {\n    if (printWindow.ready) {\n      printWindow.print();\n      printWindow.close();\n      clearInterval(interval);\n    }\n  }, 500);\n  return printWindow;\n}\n/**\r\n * Function to normalize the units applied to the element.\r\n *\r\n * @param {number|string} value ?\r\n * @returns {string} result\r\n * @private\r\n */\n\nexport function formatUnit(value) {\n  var result = value + '';\n\n  if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\n    return result;\n  }\n\n  return result + 'px';\n}\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {void} result\r\n * @private\r\n */\n\nexport function enableBlazorMode() {\n  isBlazorPlatform = true;\n}\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {boolean} result\r\n * @private\r\n */\n\nexport function isBlazor() {\n  return isBlazorPlatform;\n}\n/**\r\n * Function to convert xPath to DOM element in blazor platform\r\n *\r\n * @returns {HTMLElement} result\r\n * @param {HTMLElement | object} element ?\r\n * @private\r\n */\n\nexport function getElement(element) {\n  var xPath = 'xPath';\n\n  if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\n    return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  }\n\n  return element;\n}\n/**\r\n * Function to fetch the Instances of a HTML element for the given component.\r\n *\r\n * @param {string | HTMLElement} element ?\r\n * @param {any} component ?\r\n * @returns {Object} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function getInstance(element, component) {\n  // eslint-disable-next-line\n  var elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {\n      var inst = _a[_i];\n\n      if (inst instanceof component) {\n        return inst;\n      }\n    }\n  }\n\n  return null;\n}\n/**\r\n * Function to add instances for the given element.\r\n *\r\n * @param {string | HTMLElement} element ?\r\n * @param {Object} instance ?\r\n * @returns {void} ?\r\n * @private\r\n */\n\nexport function addInstance(element, instance) {\n  // eslint-disable-next-line\n  var elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[instances]) {\n    elem[instances].push(instance);\n  } else {\n    elem[instances] = [instance];\n  }\n}\n/**\r\n * Function to generate the unique id.\r\n *\r\n * @returns {any} ?\r\n * @private\r\n */\n// eslint-disable-next-line\n\nexport function uniqueID() {\n  if (typeof window === 'undefined') {\n    return;\n  } // eslint-disable-next-line\n\n\n  var num = new Uint16Array(5);\n  var intCrypto = window.msCrypto || window.crypto;\n  return intCrypto.getRandomValues(num);\n}\n/**\r\n *\r\n * @param {Int16Array} num ?\r\n * @returns {string} ?\r\n */\n\nfunction combineArray(num) {\n  var ret = '';\n\n  for (var i = 0; i < 5; i++) {\n    ret += (i ? ',' : '') + num[i];\n  }\n\n  return ret;\n}","map":{"version":3,"sources":["D:/HUST/20211/Introduction to Software Engineering/Project/Sprint 2/RubyGYM/client/node_modules/@syncfusion/ej2-base/src/util.js"],"names":["instances","uid","isBlazorPlatform","disableBlazorMode","createInstance","classFunction","params","arrayParam","unshift","undefined","Function","prototype","bind","apply","setImmediate","handler","unbind","num","Uint16Array","intCrypto","window","msCrypto","crypto","getRandomValues","secret","combineArray","messageHandler","event","source","data","length","addEventListener","postMessage","removeEventListener","getValue","nameSpace","obj","value","splits","replace","split","i","isUndefined","setValue","keys","start","fromObj","key","isNullOrUndefined","deleteObject","isObject","objCon","constructor","getEnumValue","enumObject","enumValue","merge","destination","temrObj","tempProp","Object","deepmerge","_i","keys_1","indexOf","Array","isArray","extend","copied","first","second","deep","result","arguments","_loop_1","arguments_1","obj1","forEach","src","copy","clone","isArrayChanged","blazorEventExtend","isBlazor","Event","hasOwnProperty","getUniqueID","definedName","debounce","eventFunction","delay","out","_this","args","later","clearTimeout","setTimeout","queryParams","array","keys_2","push","encodeURIComponent","join","isObjectArray","parser","toString","call","compareElementParent","child","parent","node","document","parentNode","throwError","message","Error","e","stack","print","element","printWindow","div","createElement","links","slice","getElementsByTagName","querySelectorAll","blinks","l","len","reference","open","appendChild","cloneNode","outerHTML","write","innerHTML","close","focus","interval","setInterval","ready","clearInterval","formatUnit","match","enableBlazorMode","getElement","xPath","Node","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","getInstance","component","elem","querySelector","_a","inst","addInstance","instance","uniqueID","ret"],"mappings":"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","sourcesContent":["var instances = 'ej2_instances';\r\nvar uid = 0;\r\nvar isBlazorPlatform = false;\r\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {void} result\r\n * @private\r\n */\r\nexport function disableBlazorMode() {\r\n    isBlazorPlatform = false;\r\n}\r\n/**\r\n * Create Instance from constructor function with desired parameters.\r\n *\r\n * @param {Function} classFunction - Class function to which need to create instance\r\n * @param {any[]} params - Parameters need to passed while creating instance\r\n * @returns {any} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function createInstance(classFunction, params) {\r\n    var arrayParam = params;\r\n    arrayParam.unshift(undefined);\r\n    return new (Function.prototype.bind.apply(classFunction, arrayParam));\r\n}\r\n/**\r\n * To run a callback function immediately after the browser has completed other operations.\r\n *\r\n * @param {Function} handler - callback function to be triggered.\r\n * @returns {Function} ?\r\n * @private\r\n */\r\nexport function setImmediate(handler) {\r\n    var unbind;\r\n    // eslint-disable-next-line\r\n    var num = new Uint16Array(5);\r\n    var intCrypto = window.msCrypto || window.crypto;\r\n    intCrypto.getRandomValues(num);\r\n    var secret = 'ej2' + combineArray(num);\r\n    // eslint-disable-next-line\r\n    var messageHandler = function (event) {\r\n        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\r\n            handler();\r\n            unbind();\r\n        }\r\n    };\r\n    window.addEventListener('message', messageHandler, false);\r\n    window.postMessage(secret, '*');\r\n    return unbind = function () {\r\n        window.removeEventListener('message', messageHandler);\r\n        handler = messageHandler = secret = undefined;\r\n    };\r\n}\r\n/**\r\n * To get nameSpace value from the desired object.\r\n *\r\n * @param {string} nameSpace - String value to the get the inner object\r\n * @param {any} obj - Object to get the inner object value.\r\n * @returns {any} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function getValue(nameSpace, obj) {\r\n    // eslint-disable-next-line\r\n    var value = obj;\r\n    var splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\r\n    for (var i = 0; i < splits.length && !isUndefined(value); i++) {\r\n        value = value[splits[i]];\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * To set value for the nameSpace in desired object.\r\n *\r\n * @param {string} nameSpace - String value to the get the inner object\r\n * @param {any} value - Value that you need to set.\r\n * @param {any} obj - Object to get the inner object value.\r\n * @returns {any} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function setValue(nameSpace, value, obj) {\r\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\r\n    // eslint-disable-next-line\r\n    var start = obj || {};\r\n    // eslint-disable-next-line\r\n    var fromObj = start;\r\n    var i;\r\n    var length = keys.length;\r\n    var key;\r\n    for (i = 0; i < length; i++) {\r\n        key = keys[i];\r\n        if (i + 1 === length) {\r\n            fromObj[key] = value === undefined ? {} : value;\r\n        }\r\n        else if (isNullOrUndefined(fromObj[key])) {\r\n            fromObj[key] = {};\r\n        }\r\n        fromObj = fromObj[key];\r\n    }\r\n    return start;\r\n}\r\n/**\r\n * Delete an item from Object\r\n *\r\n * @param {any} obj - Object in which we need to delete an item.\r\n * @param {string} key - String value to the get the inner object\r\n * @returns {void} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function deleteObject(obj, key) {\r\n    delete obj[key];\r\n}\r\n/**\r\n * Check weather the given argument is only object.\r\n *\r\n * @param {any} obj - Object which is need to check.\r\n * @returns {boolean} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function isObject(obj) {\r\n    var objCon = {};\r\n    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);\r\n}\r\n/**\r\n * To get enum value by giving the string.\r\n *\r\n * @param {any} enumObject - Enum object.\r\n * @param {string} enumValue - Enum value to be searched\r\n * @returns {any} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function getEnumValue(enumObject, enumValue) {\r\n    // eslint-disable-next-line\r\n    return enumObject[enumValue];\r\n}\r\n/**\r\n * Merge the source object into destination object.\r\n *\r\n * @param {any} source - source object which is going to merge with destination object\r\n * @param {any} destination - object need to be merged\r\n * @returns {void} ?\r\n * @private\r\n */\r\nexport function merge(source, destination) {\r\n    if (!isNullOrUndefined(destination)) {\r\n        var temrObj = source;\r\n        var tempProp = destination;\r\n        var keys = Object.keys(destination);\r\n        var deepmerge = 'deepMerge';\r\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n            var key = keys_1[_i];\r\n            if (!isNullOrUndefined(temrObj[deepmerge]) && (temrObj[deepmerge].indexOf(key) !== -1) &&\r\n                (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {\r\n                extend(temrObj[key], temrObj[key], tempProp[key], true);\r\n            }\r\n            else {\r\n                temrObj[key] = tempProp[key];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Extend the two object with newer one.\r\n *\r\n * @param {any} copied - Resultant object after merged\r\n * @param {Object} first - First object need to merge\r\n * @param {Object} second - Second object need to merge\r\n * @param {boolean} deep ?\r\n * @returns {Object} ?\r\n * @private\r\n */\r\nexport function extend(copied, first, second, deep) {\r\n    var result = copied && typeof copied === 'object' ? copied : {};\r\n    var length = arguments.length;\r\n    if (deep) {\r\n        length = length - 1;\r\n    }\r\n    var _loop_1 = function (i) {\r\n        // eslint-disable-next-line\r\n        if (!arguments_1[i]) {\r\n            return \"continue\";\r\n        }\r\n        // eslint-disable-next-line\r\n        var obj1 = arguments_1[i];\r\n        Object.keys(obj1).forEach(function (key) {\r\n            var src = result[key];\r\n            var copy = obj1[key];\r\n            var clone;\r\n            var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && (copy.length !== src.length);\r\n            // eslint-disable-next-line\r\n            var blazorEventExtend = isBlazor() ? (!(src instanceof Event) && !isArrayChanged) : true;\r\n            if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\r\n                if (isObject(copy)) {\r\n                    clone = src ? src : {};\r\n                    // eslint-disable-next-line\r\n                    if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\r\n                        extend(clone, {}, copy, deep);\r\n                    }\r\n                    else {\r\n                        result[key] = extend(clone, {}, copy, deep);\r\n                    }\r\n                }\r\n                else {\r\n                    /* istanbul ignore next */\r\n                    clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\r\n                    result[key] = extend([], clone, copy, deep);\r\n                }\r\n            }\r\n            else {\r\n                result[key] = copy;\r\n            }\r\n        });\r\n    };\r\n    var arguments_1 = arguments;\r\n    for (var i = 1; i < length; i++) {\r\n        _loop_1(i);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * To check whether the object is null or undefined.\r\n *\r\n * @param {Object} value - To check the object is null or undefined\r\n * @returns {boolean} ?\r\n * @private\r\n */\r\nexport function isNullOrUndefined(value) {\r\n    return value === undefined || value === null;\r\n}\r\n/**\r\n * To check whether the object is undefined.\r\n *\r\n * @param {Object} value - To check the object is undefined\r\n * @returns {boolean} ?\r\n * @private\r\n */\r\nexport function isUndefined(value) {\r\n    return ('undefined' === typeof value);\r\n}\r\n/**\r\n * To return the generated unique name\r\n *\r\n * @param {string} definedName - To concatenate the unique id to provided name\r\n * @returns {string} ?\r\n * @private\r\n */\r\nexport function getUniqueID(definedName) {\r\n    return definedName + '_' + uid++;\r\n}\r\n/**\r\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\r\n *\r\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\r\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\r\n * @returns {Function} ?\r\n * @private\r\n */\r\nexport function debounce(eventFunction, delay) {\r\n    // eslint-disable-next-line\r\n    var out;\r\n    return function () {\r\n        var _this = this;\r\n        // eslint-disable-next-line\r\n        var args = arguments;\r\n        var later = function () {\r\n            out = null;\r\n            return eventFunction.apply(_this, args);\r\n        };\r\n        clearTimeout(out);\r\n        out = setTimeout(later, delay);\r\n    };\r\n}\r\n/**\r\n * To convert the object to string for query url\r\n *\r\n * @param  {Object} data ?\r\n * @returns {string} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function queryParams(data) {\r\n    var array = [];\r\n    var keys = Object.keys(data);\r\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\r\n        var key = keys_2[_i];\r\n        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\r\n    }\r\n    return array.join('&');\r\n}\r\n/**\r\n * To check whether the given array contains object.\r\n *\r\n * @param {any} value - Specifies the T type array to be checked.\r\n * @returns {boolean} ?\r\n * @private\r\n */\r\nexport function isObjectArray(value) {\r\n    var parser = Object.prototype.toString;\r\n    if (parser.call(value) === '[object Array]') {\r\n        if (parser.call(value[0]) === '[object Object]') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * To check whether the  child element is descendant to parent element or parent and child are same element.\r\n *\r\n * @param {Element} child - Specifies the child element to compare with parent.\r\n * @param {Element} parent - Specifies the parent element.\r\n * @returns {boolean} ?\r\n * @private\r\n */\r\nexport function compareElementParent(child, parent) {\r\n    var node = child;\r\n    if (node === parent) {\r\n        return true;\r\n    }\r\n    else if (node === document || !node) {\r\n        return false;\r\n    }\r\n    else {\r\n        return compareElementParent(node.parentNode, parent);\r\n    }\r\n}\r\n/**\r\n * To throw custom error message.\r\n *\r\n * @param {string} message - Specifies the error message to be thrown.\r\n * @returns {void} ?\r\n * @private\r\n */\r\nexport function throwError(message) {\r\n    try {\r\n        throw new Error(message);\r\n    }\r\n    catch (e) {\r\n        // eslint-disable-next-line\r\n        throw e.message + '\\n' + e.stack;\r\n    }\r\n}\r\n/**\r\n * This function is used to print given element\r\n *\r\n * @param {Element} element - Specifies the print content element.\r\n * @param {Window} printWindow - Specifies the print window.\r\n * @returns {Window} ?\r\n * @private\r\n */\r\nexport function print(element, printWindow) {\r\n    var div = document.createElement('div');\r\n    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\r\n    var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\r\n    if (blinks.length) {\r\n        for (var l = 0, len = blinks.length; l < len; l++) {\r\n            links.push(blinks[l]);\r\n        }\r\n    }\r\n    var reference = '';\r\n    if (isNullOrUndefined(printWindow)) {\r\n        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\r\n    }\r\n    div.appendChild(element.cloneNode(true));\r\n    for (var i = 0, len = links.length; i < len; i++) {\r\n        reference += links[i].outerHTML;\r\n    }\r\n    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +\r\n        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\r\n    printWindow.document.close();\r\n    printWindow.focus();\r\n    // eslint-disable-next-line\r\n    var interval = setInterval(function () {\r\n        if (printWindow.ready) {\r\n            printWindow.print();\r\n            printWindow.close();\r\n            clearInterval(interval);\r\n        }\r\n    }, 500);\r\n    return printWindow;\r\n}\r\n/**\r\n * Function to normalize the units applied to the element.\r\n *\r\n * @param {number|string} value ?\r\n * @returns {string} result\r\n * @private\r\n */\r\nexport function formatUnit(value) {\r\n    var result = value + '';\r\n    if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\r\n        return result;\r\n    }\r\n    return result + 'px';\r\n}\r\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {void} result\r\n * @private\r\n */\r\nexport function enableBlazorMode() {\r\n    isBlazorPlatform = true;\r\n}\r\n/**\r\n * Function to check whether the platform is blazor or not.\r\n *\r\n * @returns {boolean} result\r\n * @private\r\n */\r\nexport function isBlazor() {\r\n    return isBlazorPlatform;\r\n}\r\n/**\r\n * Function to convert xPath to DOM element in blazor platform\r\n *\r\n * @returns {HTMLElement} result\r\n * @param {HTMLElement | object} element ?\r\n * @private\r\n */\r\nexport function getElement(element) {\r\n    var xPath = 'xPath';\r\n    if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {\r\n        return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\r\n    }\r\n    return element;\r\n}\r\n/**\r\n * Function to fetch the Instances of a HTML element for the given component.\r\n *\r\n * @param {string | HTMLElement} element ?\r\n * @param {any} component ?\r\n * @returns {Object} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function getInstance(element, component) {\r\n    // eslint-disable-next-line\r\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\r\n    if (elem[instances]) {\r\n        for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {\r\n            var inst = _a[_i];\r\n            if (inst instanceof component) {\r\n                return inst;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Function to add instances for the given element.\r\n *\r\n * @param {string | HTMLElement} element ?\r\n * @param {Object} instance ?\r\n * @returns {void} ?\r\n * @private\r\n */\r\nexport function addInstance(element, instance) {\r\n    // eslint-disable-next-line\r\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\r\n    if (elem[instances]) {\r\n        elem[instances].push(instance);\r\n    }\r\n    else {\r\n        elem[instances] = [instance];\r\n    }\r\n}\r\n/**\r\n * Function to generate the unique id.\r\n *\r\n * @returns {any} ?\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function uniqueID() {\r\n    if ((typeof window) === 'undefined') {\r\n        return;\r\n    }\r\n    // eslint-disable-next-line\r\n    var num = new Uint16Array(5);\r\n    var intCrypto = window.msCrypto || window.crypto;\r\n    return intCrypto.getRandomValues(num);\r\n}\r\n/**\r\n *\r\n * @param {Int16Array} num ?\r\n * @returns {string} ?\r\n */\r\nfunction combineArray(num) {\r\n    var ret = '';\r\n    for (var i = 0; i < 5; i++) {\r\n        ret += (i ? ',' : '') + num[i];\r\n    }\r\n    return ret;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}