{"ast":null,"code":"import { Save } from './save';\n/**\r\n * XmlWriter class provide method to create XML data\r\n */\n\nvar XmlWriter =\n/** @class */\nfunction () {\n  /**\r\n   * Initialize new instance of {XmlWriter}\r\n   */\n  function XmlWriter() {\n    this.contentPos = 0;\n    this.bufferText = '';\n    this.bufferBlob = new Blob([''], {\n      type: 'text/plain'\n    });\n    this.currentState = 'Initial';\n    this.namespaceStack = [];\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[2].set('', '', 'Implied');\n    this.elementStack = [];\n    this.elementStack.push(new XmlElement());\n    this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n    this.attributeStack = [];\n    Save.isMicrosoftBrowser = !!navigator.msSaveBlob;\n  }\n\n  Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n    /**\r\n     * Gets the content written to the {XmlWriter} as Blob.\r\n     * @returns {Blob}\r\n     */\n    get: function () {\n      this.flush();\n      return this.bufferBlob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Writes processing instruction with a space between the name and text\r\n   * @param {string} name - name of the processing instruction\r\n   * @param {string} text - text to write in the processing instruction\r\n   * @throws ArgumentException\r\n   * @throws InvalidArgumentException\r\n   * @throws InvalidOperationException\r\n   */\n\n  XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n    if (name === undefined || name === null || name.length === 0) {\n      throw new Error('ArgumentException: name should not be undefined, null or empty');\n    }\n\n    this.checkName(name);\n\n    if (text === undefined || text === null) {\n      text = '';\n    }\n\n    if (name.length === 3 && name === 'xml') {\n      if (this.currentState !== 'Initial') {\n        // tslint:disable-next-line:max-line-length\n        throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n      }\n    }\n\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    } else {\n      this.writeStartDocument();\n      this.writeProcessingInstructionInternal(name, text);\n    }\n  };\n  /**\r\n   * Writes Xml declaration with version and standalone attribute\r\n   * @param {boolean} standalone - if true it write standalone=yes else standalone=no\r\n   * @throws InvalidOperation\r\n   */\n\n\n  XmlWriter.prototype.writeStartDocument = function (standalone) {\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    this.currentState = 'StartDocument';\n    this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n\n    if (standalone !== null && standalone !== undefined) {\n      this.rawText('\" standalone=\"');\n      this.rawText(standalone ? 'yes' : 'no');\n    }\n\n    this.rawText('\"?>');\n  };\n  /**\r\n   * Closes any open tag or attribute and write the state back to start\r\n   */\n\n\n  XmlWriter.prototype.writeEndDocument = function () {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n\n    this.currentState = 'EndDocument';\n    this.flush();\n  };\n  /**\r\n   * Writes the specified start tag and associates it with the given namespace and prefix.\r\n   * @param {string} prefix - namespace prefix of element\r\n   * @param {string} localName -localName of element\r\n   * @param {string} namespace - namespace URI associate with element\r\n   * @throws ArgumentException\r\n   * @throws InvalidOperationException\r\n   */\n\n\n  XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n    if (this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    if (localName === undefined || localName === null || localName.length === 0) {\n      throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n    }\n\n    this.checkName(localName);\n\n    if (this.currentState === 'Initial') {\n      this.writeStartDocument();\n    }\n\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n    }\n\n    this.currentState = 'StartElement';\n\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        prefix = this.lookupPrefix(namespace);\n      }\n\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    } else if (prefix.length > 0) {\n      if (namespace === undefined || namespace === null) {\n        namespace = this.lookupNamespace(prefix);\n      }\n\n      if (namespace === undefined || namespace === null || namespace !== undefined && namespace.length === 0) {\n        throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n      }\n    }\n\n    if (namespace === undefined || namespace === null) {\n      namespace = this.lookupNamespace(prefix);\n    }\n\n    this.writeStartElementInternal(prefix, localName, namespace);\n  };\n  /**\r\n   * Closes one element and pop corresponding namespace scope\r\n   */\n\n\n  XmlWriter.prototype.writeEndElement = function () {\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n      this.currentState = 'ElementContent';\n    } else if (this.currentState === 'ElementContent') {\n      this.currentState = 'ElementContent';\n    }\n\n    this.currentState = 'EndElement';\n    var top = this.elementStack.length - 1;\n    this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n    this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n    this.elementStack.splice(top);\n\n    if (this.bufferText.length > 10240) {\n      this.flush();\n    }\n  };\n  /**\r\n   * Writes an element with the specified prefix, local name, namespace URI, and value.\r\n   * @param {string} prefix - namespace prefix of element\r\n   * @param {string} localName - localName of element\r\n   * @param {string} namespace - namespace URI associate with element\r\n   * @param {string} value - value of element\r\n   */\n\n\n  XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n    this.writeStartElement(prefix, localName, namespace);\n\n    if (value !== undefined && value !== null && value.length !== 0) {\n      this.writeString(value);\n    }\n\n    this.writeEndElement();\n  };\n  /**\r\n   * Writes out the attribute with the specified prefix, local name, namespace URI, and value\r\n   * @param {string} prefix - namespace prefix of element\r\n   * @param {string} localName - localName of element\r\n   * @param {string} namespace - namespace URI associate with element\r\n   * @param {string} value - value of element\r\n   */\n\n\n  XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n    this.writeStartAttribute(prefix, localName, namespace, value);\n    this.writeStringInternal(value, true);\n    this.writeEndAttribute();\n  };\n  /**\r\n   * Writes the given text content\r\n   * @param {string} text - text to write\r\n   * @throws InvalidOperationException\r\n   */\n\n\n  XmlWriter.prototype.writeString = function (text) {\n    this.writeInternal(text, false);\n  };\n  /**\r\n   * Write given text as raw data\r\n   * @param {string} text - text to write\r\n   * @throws InvalidOperationException\r\n   */\n\n\n  XmlWriter.prototype.writeRaw = function (text) {\n    this.writeInternal(text, true);\n  };\n\n  XmlWriter.prototype.writeInternal = function (text, isRawString) {\n    if (text === undefined || text === null) {\n      return;\n    } else {\n      if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n        throw new Error('InvalidOperationException: Wrong Token');\n      }\n\n      if (this.currentState === 'StartElement') {\n        this.startElementContent();\n      }\n\n      this.currentState = 'ElementContent';\n\n      if (isRawString) {\n        this.rawText(text);\n      } else {\n        this.writeStringInternal(text, false);\n      }\n    }\n  };\n  /**\r\n   * Saves the file with specified name and sends the file to client browser\r\n   * @param {string} fileName - file name\r\n   */\n\n\n  XmlWriter.prototype.save = function (fileName) {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n\n    if (this.bufferText !== '') {\n      this.flush();\n    }\n\n    Save.save(fileName, this.buffer);\n  };\n  /**\r\n   * Releases the resources used by XmlWriter.\r\n   */\n\n\n  XmlWriter.prototype.destroy = function () {\n    this.bufferBlob = undefined;\n\n    for (var i = 0; i < this.namespaceStack.length; i++) {\n      this.namespaceStack[i].destroy();\n    }\n\n    this.namespaceStack = [];\n\n    for (var i = 0; i < this.elementStack.length; i++) {\n      this.elementStack[i].destroy();\n    }\n\n    this.elementStack = [];\n    this.bufferText = '';\n    this.contentPos = 0;\n  };\n\n  XmlWriter.prototype.flush = function () {\n    if (this.bufferBlob === undefined) {\n      return;\n    }\n\n    this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], {\n      type: 'text/plain'\n    });\n    this.bufferText = '';\n  };\n\n  XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n    this.bufferText += '<?';\n    this.rawText(name);\n\n    if (text.length > 0) {\n      this.bufferText += ' ';\n      text = text.replace(/\\?\\>/g, '? >');\n      this.bufferText += text;\n    }\n\n    this.bufferText += '?';\n    this.bufferText += '>';\n  };\n\n  XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n    if (localName === undefined || localName === null || localName.length === 0) {\n      if (prefix === 'xmlns') {\n        localName = 'xmlns';\n        prefix = '';\n      } else {\n        throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n      }\n    }\n\n    if (this.currentState !== 'StartElement') {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    this.checkName(localName);\n    this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n  };\n\n  XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n          prefix = this.lookupPrefix(namespace);\n        }\n      }\n\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    }\n\n    if (namespace === undefined || namespace === null) {\n      if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n        namespace = this.lookupNamespace(prefix);\n      }\n\n      if (namespace === undefined || namespace === null) {\n        namespace = '';\n      }\n    }\n\n    this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n  };\n\n  XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n    if (prefix.length === 0) {\n      if (localName[0] === 'x' && localName === 'xmlns') {\n        this.skipPushAndWrite(prefix, localName, namespace);\n        this.pushNamespaceExplicit('', value);\n        return;\n      } else if (namespace.length > 0) {\n        prefix = this.lookupPrefix(namespace);\n      }\n    } else {\n      if (prefix[0] === 'x') {\n        if (prefix === 'xmlns') {\n          this.skipPushAndWrite(prefix, localName, namespace);\n          this.pushNamespaceExplicit(localName, value);\n          return;\n        } else if (prefix === 'xml') {\n          if (localName === 'space' || localName === 'lang') {\n            this.skipPushAndWrite(prefix, localName, namespace);\n            return;\n          }\n        }\n      }\n\n      if (namespace.length === 0) {\n        prefix = '';\n      }\n    }\n\n    if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n      this.pushNamespaceImplicit(prefix, namespace);\n    }\n\n    this.skipPushAndWrite(prefix, localName, namespace);\n  };\n\n  XmlWriter.prototype.writeEndAttribute = function () {\n    this.currentState = 'StartElement';\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n    this.bufferText += '<';\n\n    if (prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n\n    this.rawText(localName);\n    var top = this.elementStack.length;\n    this.elementStack.push(new XmlElement());\n    this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n    this.pushNamespaceImplicit(prefix, namespace);\n\n    for (var i = 0; i < this.attributeStack.length; i++) {\n      this.attributeStack[i].destroy();\n    }\n\n    this.attributeStack = [];\n  };\n\n  XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n    if (this.contentPos !== this.bufferText.length + 1) {\n      this.bufferText += '</';\n\n      if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n        this.rawText(prefix);\n        this.bufferText += ':';\n      }\n\n      this.rawText(localName);\n      this.bufferText += '>';\n    } else {\n      this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n      this.bufferText += ' />';\n    }\n  };\n\n  XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n    this.bufferText += ' ';\n\n    if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n\n    this.rawText(localName);\n    this.bufferText += '=';\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n    this.writeStartNamespaceDeclaration(prefix);\n    this.writeStringInternal(namespaceUri, true);\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n    if (prefix === undefined || prefix === null || prefix.length === 0) {\n      this.rawText(' xmlns=\\\"');\n    } else {\n      this.rawText(' xmlns:');\n      this.rawText(prefix);\n      this.bufferText += '=';\n      this.bufferText += '\"';\n    }\n  };\n\n  XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n    if (text === null || text === undefined) {\n      text = '';\n    }\n\n    var tempText = '';\n    text = text.replace(/\\&/g, '&amp;');\n    text = text.replace(/\\</g, '&lt;');\n    text = text.replace(/\\>/g, '&gt;');\n\n    if (inAttributeValue) {\n      text = text.replace(/\\\"/g, '&quot;');\n    }\n\n    this.bufferText += text;\n\n    if (!inAttributeValue) {\n      this.contentPos = 0;\n    }\n  };\n\n  XmlWriter.prototype.startElementContent = function () {\n    var start = this.elementStack[this.elementStack.length - 1].previousTop;\n\n    for (var i = this.namespaceStack.length - 1; i > start; i--) {\n      if (this.namespaceStack[i].kind === 'NeedToWrite') {\n        this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n      }\n    }\n\n    this.bufferText += '>';\n    this.contentPos = this.bufferText.length + 1;\n  };\n\n  XmlWriter.prototype.rawText = function (text) {\n    this.bufferText += text;\n  };\n\n  XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n    var top = this.namespaceStack.length;\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[top].set(prefix, ns, kind);\n  };\n\n  XmlWriter.prototype.lookupPrefix = function (namespace) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].namespaceUri === namespace) {\n        return this.namespaceStack[i].prefix;\n      }\n    }\n\n    return undefined;\n  };\n\n  XmlWriter.prototype.lookupNamespace = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return this.namespaceStack[i].namespaceUri;\n      }\n    }\n\n    return undefined;\n  };\n\n  XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n    var kind;\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n          throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n        }\n\n        return;\n      } else {\n        if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n          if (prefix === 'xml') {\n            if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n              throw new Error('InvalidArgumentException: Xml String');\n            } else {\n              kind = 'Implied';\n            }\n          } else {\n            throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n          }\n        } else {\n          kind = this.namespaceStack[existingNsIndex].namespaceUri === ns ? 'Implied' : 'NeedToWrite';\n        }\n      }\n    } else {\n      if (ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml' || ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns') {\n        throw new Error('InvalidArgumentException');\n      }\n\n      kind = 'NeedToWrite';\n    }\n\n    this.addNamespace(prefix, ns, kind);\n  };\n\n  XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        this.namespaceStack[existingNsIndex].kind = 'Written';\n        return;\n      }\n    }\n\n    this.addNamespace(prefix, ns, 'Written');\n    return;\n  };\n\n  XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n    var top = this.attributeStack.length;\n    this.attributeStack.push(new XmlAttribute());\n    this.attributeStack[top].set(prefix, localName, namespaceName);\n\n    for (var i = 0; i < top; i++) {\n      if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n        throw new Error('XmlException: duplicate attribute name');\n      }\n    }\n  };\n\n  XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n    this.addAttribute(prefix, localName, namespace);\n    this.writeStartAttributeInternal(prefix, localName, namespace);\n  };\n\n  XmlWriter.prototype.checkName = function (text) {\n    var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n\n    if (format.test(text)) {\n      throw new Error('InvalidArgumentException: invalid name character');\n    }\n  };\n\n  return XmlWriter;\n}();\n\nexport { XmlWriter };\n/**\r\n * class for managing namespace collection\r\n */\n\nvar Namespace =\n/** @class */\nfunction () {\n  function Namespace() {}\n  /**\r\n   * set value for current namespace instance\r\n   * @param {string} prefix namespace's prefix\r\n   * @param {string} namespaceUri namespace URI\r\n   * @param {string} kind namespace kind\r\n   */\n\n\n  Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.kind = kind;\n  };\n  /**\r\n   * Releases the resources used by Namespace\r\n   */\n\n\n  Namespace.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.kind = undefined;\n  };\n\n  return Namespace;\n}();\n\nexport { Namespace };\n/**\r\n * class for managing element collection\r\n */\n\nvar XmlElement =\n/** @class */\nfunction () {\n  function XmlElement() {}\n  /**\r\n   * set value of current element\r\n   * @param {string} prefix - element prefix\r\n   * @param {string} localName - element local name\r\n   * @param {string} namespaceUri -namespace URI\r\n   * @param {string} previousTop - previous namespace top\r\n   */\n\n\n  XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n    this.previousTop = previousTop;\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\r\n   * Releases the resources used by XmlElement\r\n   */\n\n\n  XmlElement.prototype.destroy = function () {\n    this.previousTop = undefined;\n    this.prefix = undefined;\n    this.localName = undefined;\n    this.namespaceUri = undefined;\n  };\n\n  return XmlElement;\n}();\n\nexport { XmlElement };\n/**\r\n * class for managing attribute collection\r\n */\n\nvar XmlAttribute =\n/** @class */\nfunction () {\n  function XmlAttribute() {}\n  /**\r\n   * set value of current attribute\r\n   * @param {string} prefix - namespace's prefix\r\n   * @param {string} namespaceUri - namespace URI\r\n   * @param {string} localName - attribute localName\r\n   */\n\n\n  XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\r\n   * get whether the attribute is duplicate or not\r\n   * @param {string} prefix - namespace's prefix\r\n   * @param {string} namespaceUri - namespace URI\r\n   * @param {string} localName - attribute localName\r\n   */\n\n\n  XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n    return this.localName === localName && (this.prefix === prefix || this.namespaceUri === namespaceUri);\n  };\n  /**\r\n   * Releases the resources used by XmlAttribute\r\n   */\n\n\n  XmlAttribute.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.localName = undefined;\n  };\n\n  return XmlAttribute;\n}();\n\nexport { XmlAttribute };","map":{"version":3,"sources":["D:/4_PROJECTS/RubyGYM/client/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js"],"names":["Save","XmlWriter","contentPos","bufferText","bufferBlob","Blob","type","currentState","namespaceStack","push","Namespace","set","elementStack","XmlElement","length","attributeStack","isMicrosoftBrowser","navigator","msSaveBlob","Object","defineProperty","prototype","get","flush","enumerable","configurable","writeProcessingInstruction","name","text","undefined","Error","checkName","writeStartDocument","writeProcessingInstructionInternal","standalone","rawText","writeEndDocument","writeEndElement","writeStartElement","prefix","localName","namespace","startElementContent","lookupPrefix","lookupNamespace","writeStartElementInternal","top","writeEndElementInternal","splice","previousTop","writeElementString","value","writeString","writeAttributeString","writeStartAttribute","writeStringInternal","writeEndAttribute","writeInternal","writeRaw","isRawString","save","fileName","buffer","destroy","i","replace","writeStartAttributePrefixAndNameSpace","writeStartAttributeSpecialAttribute","skipPushAndWrite","pushNamespaceExplicit","pushNamespaceImplicit","substring","writeStartAttributeInternal","namespaceName","writeNamespaceDeclaration","namespaceUri","writeStartNamespaceDeclaration","inAttributeValue","tempText","start","kind","addNamespace","ns","lookupNamespaceIndex","existingNsIndex","addAttribute","XmlAttribute","isDuplicate","format","test"],"mappings":"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","sourcesContent":["import { Save } from './save';\r\n/**\r\n * XmlWriter class provide method to create XML data\r\n */\r\nvar XmlWriter = /** @class */ (function () {\r\n    /**\r\n     * Initialize new instance of {XmlWriter}\r\n     */\r\n    function XmlWriter() {\r\n        this.contentPos = 0;\r\n        this.bufferText = '';\r\n        this.bufferBlob = new Blob([''], { type: 'text/plain' });\r\n        this.currentState = 'Initial';\r\n        this.namespaceStack = [];\r\n        this.namespaceStack.push(new Namespace());\r\n        this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\r\n        this.namespaceStack.push(new Namespace());\r\n        this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\r\n        this.namespaceStack.push(new Namespace());\r\n        this.namespaceStack[2].set('', '', 'Implied');\r\n        this.elementStack = [];\r\n        this.elementStack.push(new XmlElement());\r\n        this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\r\n        this.attributeStack = [];\r\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\r\n    }\r\n    Object.defineProperty(XmlWriter.prototype, \"buffer\", {\r\n        /**\r\n         * Gets the content written to the {XmlWriter} as Blob.\r\n         * @returns {Blob}\r\n         */\r\n        get: function () {\r\n            this.flush();\r\n            return this.bufferBlob;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes processing instruction with a space between the name and text\r\n     * @param {string} name - name of the processing instruction\r\n     * @param {string} text - text to write in the processing instruction\r\n     * @throws ArgumentException\r\n     * @throws InvalidArgumentException\r\n     * @throws InvalidOperationException\r\n     */\r\n    XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\r\n        if (name === undefined || name === null || name.length === 0) {\r\n            throw new Error('ArgumentException: name should not be undefined, null or empty');\r\n        }\r\n        this.checkName(name);\r\n        if (text === undefined || text === null) {\r\n            text = '';\r\n        }\r\n        if (name.length === 3 && name === 'xml') {\r\n            if (this.currentState !== 'Initial') {\r\n                // tslint:disable-next-line:max-line-length\r\n                throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\r\n            }\r\n        }\r\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\r\n            throw new Error('InvalidOperationException: Wrong Token');\r\n        }\r\n        else {\r\n            this.writeStartDocument();\r\n            this.writeProcessingInstructionInternal(name, text);\r\n        }\r\n    };\r\n    /**\r\n     * Writes Xml declaration with version and standalone attribute\r\n     * @param {boolean} standalone - if true it write standalone=yes else standalone=no\r\n     * @throws InvalidOperation\r\n     */\r\n    XmlWriter.prototype.writeStartDocument = function (standalone) {\r\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\r\n            throw new Error('InvalidOperationException: Wrong Token');\r\n        }\r\n        this.currentState = 'StartDocument';\r\n        this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\r\n        if (standalone !== null && standalone !== undefined) {\r\n            this.rawText('\" standalone=\"');\r\n            this.rawText(standalone ? 'yes' : 'no');\r\n        }\r\n        this.rawText('\"?>');\r\n    };\r\n    /**\r\n     * Closes any open tag or attribute and write the state back to start\r\n     */\r\n    XmlWriter.prototype.writeEndDocument = function () {\r\n        while (this.elementStack.length - 1 > 0) {\r\n            this.writeEndElement();\r\n        }\r\n        this.currentState = 'EndDocument';\r\n        this.flush();\r\n    };\r\n    /**\r\n     * Writes the specified start tag and associates it with the given namespace and prefix.\r\n     * @param {string} prefix - namespace prefix of element\r\n     * @param {string} localName -localName of element\r\n     * @param {string} namespace - namespace URI associate with element\r\n     * @throws ArgumentException\r\n     * @throws InvalidOperationException\r\n     */\r\n    XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\r\n        if (this.bufferBlob === undefined) {\r\n            throw new Error('InvalidOperationException: Wrong Token');\r\n        }\r\n        if (localName === undefined || localName === null || localName.length === 0) {\r\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\r\n        }\r\n        this.checkName(localName);\r\n        if (this.currentState === 'Initial') {\r\n            this.writeStartDocument();\r\n        }\r\n        if (this.currentState === 'StartElement') {\r\n            this.startElementContent();\r\n        }\r\n        this.currentState = 'StartElement';\r\n        if (prefix === undefined || prefix === null) {\r\n            if (namespace !== undefined && namespace !== null) {\r\n                prefix = this.lookupPrefix(namespace);\r\n            }\r\n            if (prefix === undefined || prefix === null) {\r\n                prefix = '';\r\n            }\r\n        }\r\n        else if (prefix.length > 0) {\r\n            if (namespace === undefined || namespace === null) {\r\n                namespace = this.lookupNamespace(prefix);\r\n            }\r\n            if (namespace === undefined || namespace === null || (namespace !== undefined && namespace.length === 0)) {\r\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\r\n            }\r\n        }\r\n        if (namespace === undefined || namespace === null) {\r\n            namespace = this.lookupNamespace(prefix);\r\n        }\r\n        this.writeStartElementInternal(prefix, localName, namespace);\r\n    };\r\n    /**\r\n     * Closes one element and pop corresponding namespace scope\r\n     */\r\n    XmlWriter.prototype.writeEndElement = function () {\r\n        if (this.currentState === 'StartElement') {\r\n            this.startElementContent();\r\n            this.currentState = 'ElementContent';\r\n        }\r\n        else if (this.currentState === 'ElementContent') {\r\n            this.currentState = 'ElementContent';\r\n        }\r\n        this.currentState = 'EndElement';\r\n        var top = this.elementStack.length - 1;\r\n        this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\r\n        this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\r\n        this.elementStack.splice(top);\r\n        if (this.bufferText.length > 10240) {\r\n            this.flush();\r\n        }\r\n    };\r\n    /**\r\n     * Writes an element with the specified prefix, local name, namespace URI, and value.\r\n     * @param {string} prefix - namespace prefix of element\r\n     * @param {string} localName - localName of element\r\n     * @param {string} namespace - namespace URI associate with element\r\n     * @param {string} value - value of element\r\n     */\r\n    XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\r\n        this.writeStartElement(prefix, localName, namespace);\r\n        if (value !== undefined && value !== null && value.length !== 0) {\r\n            this.writeString(value);\r\n        }\r\n        this.writeEndElement();\r\n    };\r\n    /**\r\n     * Writes out the attribute with the specified prefix, local name, namespace URI, and value\r\n     * @param {string} prefix - namespace prefix of element\r\n     * @param {string} localName - localName of element\r\n     * @param {string} namespace - namespace URI associate with element\r\n     * @param {string} value - value of element\r\n     */\r\n    XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\r\n        this.writeStartAttribute(prefix, localName, namespace, value);\r\n        this.writeStringInternal(value, true);\r\n        this.writeEndAttribute();\r\n    };\r\n    /**\r\n     * Writes the given text content\r\n     * @param {string} text - text to write\r\n     * @throws InvalidOperationException\r\n     */\r\n    XmlWriter.prototype.writeString = function (text) {\r\n        this.writeInternal(text, false);\r\n    };\r\n    /**\r\n     * Write given text as raw data\r\n     * @param {string} text - text to write\r\n     * @throws InvalidOperationException\r\n     */\r\n    XmlWriter.prototype.writeRaw = function (text) {\r\n        this.writeInternal(text, true);\r\n    };\r\n    XmlWriter.prototype.writeInternal = function (text, isRawString) {\r\n        if (text === undefined || text === null) {\r\n            return;\r\n        }\r\n        else {\r\n            if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\r\n                throw new Error('InvalidOperationException: Wrong Token');\r\n            }\r\n            if (this.currentState === 'StartElement') {\r\n                this.startElementContent();\r\n            }\r\n            this.currentState = 'ElementContent';\r\n            if (isRawString) {\r\n                this.rawText(text);\r\n            }\r\n            else {\r\n                this.writeStringInternal(text, false);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Saves the file with specified name and sends the file to client browser\r\n     * @param {string} fileName - file name\r\n     */\r\n    XmlWriter.prototype.save = function (fileName) {\r\n        while (this.elementStack.length - 1 > 0) {\r\n            this.writeEndElement();\r\n        }\r\n        if (this.bufferText !== '') {\r\n            this.flush();\r\n        }\r\n        Save.save(fileName, this.buffer);\r\n    };\r\n    /**\r\n     * Releases the resources used by XmlWriter.\r\n     */\r\n    XmlWriter.prototype.destroy = function () {\r\n        this.bufferBlob = undefined;\r\n        for (var i = 0; i < this.namespaceStack.length; i++) {\r\n            this.namespaceStack[i].destroy();\r\n        }\r\n        this.namespaceStack = [];\r\n        for (var i = 0; i < this.elementStack.length; i++) {\r\n            this.elementStack[i].destroy();\r\n        }\r\n        this.elementStack = [];\r\n        this.bufferText = '';\r\n        this.contentPos = 0;\r\n    };\r\n    XmlWriter.prototype.flush = function () {\r\n        if (this.bufferBlob === undefined) {\r\n            return;\r\n        }\r\n        this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], { type: 'text/plain' });\r\n        this.bufferText = '';\r\n    };\r\n    XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\r\n        this.bufferText += '<?';\r\n        this.rawText(name);\r\n        if (text.length > 0) {\r\n            this.bufferText += ' ';\r\n            text = text.replace(/\\?\\>/g, '? >');\r\n            this.bufferText += text;\r\n        }\r\n        this.bufferText += '?';\r\n        this.bufferText += '>';\r\n    };\r\n    XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\r\n        if (localName === undefined || localName === null || localName.length === 0) {\r\n            if (prefix === 'xmlns') {\r\n                localName = 'xmlns';\r\n                prefix = '';\r\n            }\r\n            else {\r\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\r\n            }\r\n        }\r\n        if (this.currentState !== 'StartElement') {\r\n            throw new Error('InvalidOperationException: Wrong Token');\r\n        }\r\n        this.checkName(localName);\r\n        this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\r\n    };\r\n    XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\r\n        if (prefix === undefined || prefix === null) {\r\n            if (namespace !== undefined && namespace !== null) {\r\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\r\n                    prefix = this.lookupPrefix(namespace);\r\n                }\r\n            }\r\n            if (prefix === undefined || prefix === null) {\r\n                prefix = '';\r\n            }\r\n        }\r\n        if (namespace === undefined || namespace === null) {\r\n            if (prefix !== undefined && prefix !== null && prefix.length > 0) {\r\n                namespace = this.lookupNamespace(prefix);\r\n            }\r\n            if (namespace === undefined || namespace === null) {\r\n                namespace = '';\r\n            }\r\n        }\r\n        this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\r\n    };\r\n    XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\r\n        if (prefix.length === 0) {\r\n            if (localName[0] === 'x' && localName === 'xmlns') {\r\n                this.skipPushAndWrite(prefix, localName, namespace);\r\n                this.pushNamespaceExplicit('', value);\r\n                return;\r\n            }\r\n            else if (namespace.length > 0) {\r\n                prefix = this.lookupPrefix(namespace);\r\n            }\r\n        }\r\n        else {\r\n            if (prefix[0] === 'x') {\r\n                if (prefix === 'xmlns') {\r\n                    this.skipPushAndWrite(prefix, localName, namespace);\r\n                    this.pushNamespaceExplicit(localName, value);\r\n                    return;\r\n                }\r\n                else if (prefix === 'xml') {\r\n                    if (localName === 'space' || localName === 'lang') {\r\n                        this.skipPushAndWrite(prefix, localName, namespace);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (namespace.length === 0) {\r\n                prefix = '';\r\n            }\r\n        }\r\n        if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\r\n            this.pushNamespaceImplicit(prefix, namespace);\r\n        }\r\n        this.skipPushAndWrite(prefix, localName, namespace);\r\n    };\r\n    XmlWriter.prototype.writeEndAttribute = function () {\r\n        this.currentState = 'StartElement';\r\n        this.bufferText += '\"';\r\n    };\r\n    XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\r\n        this.bufferText += '<';\r\n        if (prefix.length > 0) {\r\n            this.rawText(prefix);\r\n            this.bufferText += ':';\r\n        }\r\n        this.rawText(localName);\r\n        var top = this.elementStack.length;\r\n        this.elementStack.push(new XmlElement());\r\n        this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\r\n        this.pushNamespaceImplicit(prefix, namespace);\r\n        for (var i = 0; i < this.attributeStack.length; i++) {\r\n            this.attributeStack[i].destroy();\r\n        }\r\n        this.attributeStack = [];\r\n    };\r\n    XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\r\n        if (this.contentPos !== this.bufferText.length + 1) {\r\n            this.bufferText += '</';\r\n            if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\r\n                this.rawText(prefix);\r\n                this.bufferText += ':';\r\n            }\r\n            this.rawText(localName);\r\n            this.bufferText += '>';\r\n        }\r\n        else {\r\n            this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\r\n            this.bufferText += ' />';\r\n        }\r\n    };\r\n    XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\r\n        this.bufferText += ' ';\r\n        if (prefix !== undefined && prefix !== null && prefix.length > 0) {\r\n            this.rawText(prefix);\r\n            this.bufferText += ':';\r\n        }\r\n        this.rawText(localName);\r\n        this.bufferText += '=';\r\n        this.bufferText += '\"';\r\n    };\r\n    XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\r\n        this.writeStartNamespaceDeclaration(prefix);\r\n        this.writeStringInternal(namespaceUri, true);\r\n        this.bufferText += '\"';\r\n    };\r\n    XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\r\n        if (prefix === undefined || prefix === null || prefix.length === 0) {\r\n            this.rawText(' xmlns=\\\"');\r\n        }\r\n        else {\r\n            this.rawText(' xmlns:');\r\n            this.rawText(prefix);\r\n            this.bufferText += '=';\r\n            this.bufferText += '\"';\r\n        }\r\n    };\r\n    XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\r\n        if (text === null || text === undefined) {\r\n            text = '';\r\n        }\r\n        var tempText = '';\r\n        text = text.replace(/\\&/g, '&amp;');\r\n        text = text.replace(/\\</g, '&lt;');\r\n        text = text.replace(/\\>/g, '&gt;');\r\n        if (inAttributeValue) {\r\n            text = text.replace(/\\\"/g, '&quot;');\r\n        }\r\n        this.bufferText += text;\r\n        if (!inAttributeValue) {\r\n            this.contentPos = 0;\r\n        }\r\n    };\r\n    XmlWriter.prototype.startElementContent = function () {\r\n        var start = this.elementStack[this.elementStack.length - 1].previousTop;\r\n        for (var i = this.namespaceStack.length - 1; i > start; i--) {\r\n            if (this.namespaceStack[i].kind === 'NeedToWrite') {\r\n                this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\r\n            }\r\n        }\r\n        this.bufferText += '>';\r\n        this.contentPos = this.bufferText.length + 1;\r\n    };\r\n    XmlWriter.prototype.rawText = function (text) {\r\n        this.bufferText += text;\r\n    };\r\n    XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\r\n        var top = this.namespaceStack.length;\r\n        this.namespaceStack.push(new Namespace());\r\n        this.namespaceStack[top].set(prefix, ns, kind);\r\n    };\r\n    XmlWriter.prototype.lookupPrefix = function (namespace) {\r\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\r\n            if (this.namespaceStack[i].namespaceUri === namespace) {\r\n                return this.namespaceStack[i].prefix;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    XmlWriter.prototype.lookupNamespace = function (prefix) {\r\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\r\n            if (this.namespaceStack[i].prefix === prefix) {\r\n                return this.namespaceStack[i].namespaceUri;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\r\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\r\n            if (this.namespaceStack[i].prefix === prefix) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\r\n        var kind;\r\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\r\n        if (existingNsIndex !== -1) {\r\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\r\n                if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\r\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                if (this.namespaceStack[existingNsIndex].kind === 'Special') {\r\n                    if (prefix === 'xml') {\r\n                        if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\r\n                            throw new Error('InvalidArgumentException: Xml String');\r\n                        }\r\n                        else {\r\n                            kind = 'Implied';\r\n                        }\r\n                    }\r\n                    else {\r\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\r\n                    }\r\n                }\r\n                else {\r\n                    kind = (this.namespaceStack[existingNsIndex].namespaceUri === ns) ? 'Implied' : 'NeedToWrite';\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\r\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\r\n                throw new Error('InvalidArgumentException');\r\n            }\r\n            kind = 'NeedToWrite';\r\n        }\r\n        this.addNamespace(prefix, ns, kind);\r\n    };\r\n    XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\r\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\r\n        if (existingNsIndex !== -1) {\r\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\r\n                this.namespaceStack[existingNsIndex].kind = 'Written';\r\n                return;\r\n            }\r\n        }\r\n        this.addNamespace(prefix, ns, 'Written');\r\n        return;\r\n    };\r\n    XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\r\n        var top = this.attributeStack.length;\r\n        this.attributeStack.push(new XmlAttribute());\r\n        this.attributeStack[top].set(prefix, localName, namespaceName);\r\n        for (var i = 0; i < top; i++) {\r\n            if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\r\n                throw new Error('XmlException: duplicate attribute name');\r\n            }\r\n        }\r\n    };\r\n    XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\r\n        this.addAttribute(prefix, localName, namespace);\r\n        this.writeStartAttributeInternal(prefix, localName, namespace);\r\n    };\r\n    XmlWriter.prototype.checkName = function (text) {\r\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\r\n        if (format.test(text)) {\r\n            throw new Error('InvalidArgumentException: invalid name character');\r\n        }\r\n    };\r\n    return XmlWriter;\r\n}());\r\nexport { XmlWriter };\r\n/**\r\n * class for managing namespace collection\r\n */\r\nvar Namespace = /** @class */ (function () {\r\n    function Namespace() {\r\n    }\r\n    /**\r\n     * set value for current namespace instance\r\n     * @param {string} prefix namespace's prefix\r\n     * @param {string} namespaceUri namespace URI\r\n     * @param {string} kind namespace kind\r\n     */\r\n    Namespace.prototype.set = function (prefix, namespaceUri, kind) {\r\n        this.prefix = prefix;\r\n        this.namespaceUri = namespaceUri;\r\n        this.kind = kind;\r\n    };\r\n    /**\r\n     * Releases the resources used by Namespace\r\n     */\r\n    Namespace.prototype.destroy = function () {\r\n        this.prefix = undefined;\r\n        this.namespaceUri = undefined;\r\n        this.kind = undefined;\r\n    };\r\n    return Namespace;\r\n}());\r\nexport { Namespace };\r\n/**\r\n * class for managing element collection\r\n */\r\nvar XmlElement = /** @class */ (function () {\r\n    function XmlElement() {\r\n    }\r\n    /**\r\n     * set value of current element\r\n     * @param {string} prefix - element prefix\r\n     * @param {string} localName - element local name\r\n     * @param {string} namespaceUri -namespace URI\r\n     * @param {string} previousTop - previous namespace top\r\n     */\r\n    XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\r\n        this.previousTop = previousTop;\r\n        this.prefix = prefix;\r\n        this.namespaceUri = namespaceUri;\r\n        this.localName = localName;\r\n    };\r\n    /**\r\n     * Releases the resources used by XmlElement\r\n     */\r\n    XmlElement.prototype.destroy = function () {\r\n        this.previousTop = undefined;\r\n        this.prefix = undefined;\r\n        this.localName = undefined;\r\n        this.namespaceUri = undefined;\r\n    };\r\n    return XmlElement;\r\n}());\r\nexport { XmlElement };\r\n/**\r\n * class for managing attribute collection\r\n */\r\nvar XmlAttribute = /** @class */ (function () {\r\n    function XmlAttribute() {\r\n    }\r\n    /**\r\n     * set value of current attribute\r\n     * @param {string} prefix - namespace's prefix\r\n     * @param {string} namespaceUri - namespace URI\r\n     * @param {string} localName - attribute localName\r\n     */\r\n    XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\r\n        this.prefix = prefix;\r\n        this.namespaceUri = namespaceUri;\r\n        this.localName = localName;\r\n    };\r\n    /**\r\n     * get whether the attribute is duplicate or not\r\n     * @param {string} prefix - namespace's prefix\r\n     * @param {string} namespaceUri - namespace URI\r\n     * @param {string} localName - attribute localName\r\n     */\r\n    XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\r\n        return ((this.localName === localName) && ((this.prefix === prefix) || (this.namespaceUri === namespaceUri)));\r\n    };\r\n    /**\r\n     * Releases the resources used by XmlAttribute\r\n     */\r\n    XmlAttribute.prototype.destroy = function () {\r\n        this.prefix = undefined;\r\n        this.namespaceUri = undefined;\r\n        this.localName = undefined;\r\n    };\r\n    return XmlAttribute;\r\n}());\r\nexport { XmlAttribute };\r\n"]},"metadata":{},"sourceType":"module"}