{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\nimport '../../../theme/components/panel/balloonpanel.css';\nconst toPx = toUnit('px');\nconst defaultLimiterElement = global.document.body;\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\n\nexport default class BalloonPanelView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * The absolute top position of the balloon panel in pixels.\n     *\n     * @observable\n     * @default 0\n     * @member {Number} #top\n     */\n\n    this.set('top', 0);\n    /**\n     * The absolute left position of the balloon panel in pixels.\n     *\n     * @observable\n     * @default 0\n     * @member {Number} #left\n     */\n\n    this.set('left', 0);\n    /**\n     * The balloon panel's current position. The position name is reflected in the CSS class set\n     * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n     * controls the minor aspects of the balloon's visual appearance like the placement\n     * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n     *\n     * Default position names correspond with\n     * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n     *\n     * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n     *\n     * @observable\n     * @default 'arrow_nw'\n     * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n     */\n\n    this.set('position', 'arrow_nw');\n    /**\n     * Controls whether the balloon panel is visible or not.\n     *\n     * @observable\n     * @default false\n     * @member {Boolean} #isVisible\n     */\n\n    this.set('isVisible', false);\n    /**\n     * Controls whether the balloon panel has an arrow. The presence of the arrow\n     * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n     *\n     * @observable\n     * @default true\n     * @member {Boolean} #withArrow\n     */\n\n    this.set('withArrow', true);\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n    this.set('class');\n    /**\n     * A callback that starts pinning the panel when {@link #isVisible} gets\n     * `true`. Used by {@link #pin}.\n     *\n     * @private\n     * @member {Function} #_pinWhenIsVisibleCallback\n     */\n\n    /**\n     * A collection of the child views that creates the balloon panel contents.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.content = this.createCollection();\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-balloon-panel', bind.to('position', value => `ck-balloon-panel_${value}`), bind.if('isVisible', 'ck-balloon-panel_visible'), bind.if('withArrow', 'ck-balloon-panel_with-arrow'), bind.to('class')],\n        style: {\n          top: bind.to('top', toPx),\n          left: bind.to('left', toPx)\n        }\n      },\n      children: this.content\n    });\n  }\n  /**\n   * Shows the panel.\n   *\n   * See {@link #isVisible}.\n   */\n\n\n  show() {\n    this.isVisible = true;\n  }\n  /**\n   * Hides the panel.\n   *\n   * See {@link #isVisible}.\n   */\n\n\n  hide() {\n    this.isVisible = false;\n  }\n  /**\n   * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n   * smart positioning heuristics that chooses from available positions to make sure the panel\n   * is visible to the user i.e. within the limits of the viewport.\n   *\n   * This method accepts configuration {@link module:utils/dom/position~Options options}\n   * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n   *\n   *\t\tconst panel = new BalloonPanelView( locale );\n   *\t\tconst positions = BalloonPanelView.defaultPositions;\n   *\n   *\t\tpanel.render();\n   *\n   *\t\t// Attach the panel to an element with the \"target\" id DOM.\n   *\t\tpanel.attachTo( {\n   *\t\t\ttarget: document.querySelector( '#target' ),\n   *\t\t\tpositions: [\n   *\t\t\t\tpositions.northArrowSouth,\n   *\t\t\t\tpositions.southArrowNorth\n   *\t\t\t]\n   *\t\t} );\n   *\n   * **Note**: Attaching the panel will also automatically {@link #show} it.\n   *\n   * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n   * See the {@link #pin} method for a more permanent positioning strategy.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n\n\n  attachTo(options) {\n    this.show();\n    const defaultPositions = BalloonPanelView.defaultPositions;\n    const positionOptions = Object.assign({}, {\n      element: this.element,\n      positions: [defaultPositions.southArrowNorth, defaultPositions.southArrowNorthMiddleWest, defaultPositions.southArrowNorthMiddleEast, defaultPositions.southArrowNorthWest, defaultPositions.southArrowNorthEast, defaultPositions.northArrowSouth, defaultPositions.northArrowSouthMiddleWest, defaultPositions.northArrowSouthMiddleEast, defaultPositions.northArrowSouthWest, defaultPositions.northArrowSouthEast, defaultPositions.viewportStickyNorth],\n      limiter: defaultLimiterElement,\n      fitInViewport: true\n    }, options);\n\n    const optimalPosition = BalloonPanelView._getOptimalPosition(positionOptions); // Usually browsers make some problems with super accurate values like 104.345px\n    // so it is better to use int values.\n\n\n    const left = parseInt(optimalPosition.left);\n    const top = parseInt(optimalPosition.top);\n    const {\n      name: position,\n      config = {}\n    } = optimalPosition;\n    const {\n      withArrow = true\n    } = config;\n    Object.assign(this, {\n      top,\n      left,\n      position,\n      withArrow\n    });\n  }\n  /**\n   * Works the same way as the {@link #attachTo} method except that the position of the panel is\n   * continuously updated when:\n   *\n   * * any ancestor of the {@link module:utils/dom/position~Options#target}\n   * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n   * * the browser window gets resized or scrolled.\n   *\n   * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n   * and is immune to the changing environment.\n   *\n   *\t\tconst panel = new BalloonPanelView( locale );\n   *\t\tconst positions = BalloonPanelView.defaultPositions;\n   *\n   *\t\tpanel.render();\n   *\n   *\t\t// Pin the panel to an element with the \"target\" id DOM.\n   *\t\tpanel.pin( {\n   *\t\t\ttarget: document.querySelector( '#target' ),\n   *\t\t\tpositions: [\n   *\t\t\t\tpositions.northArrowSouth,\n   *\t\t\t\tpositions.southArrowNorth\n   *\t\t\t]\n   *\t\t} );\n   *\n   * To leave the pinned state, use the {@link #unpin} method.\n   *\n   * **Note**: Pinning the panel will also automatically {@link #show} it.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n\n\n  pin(options) {\n    this.unpin();\n\n    this._pinWhenIsVisibleCallback = () => {\n      if (this.isVisible) {\n        this._startPinning(options);\n      } else {\n        this._stopPinning();\n      }\n    };\n\n    this._startPinning(options); // Control the state of the listeners depending on whether the panel is visible\n    // or not.\n    // TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\n\n    this.listenTo(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n  }\n  /**\n   * Stops pinning the panel, as set up by {@link #pin}.\n   */\n\n\n  unpin() {\n    if (this._pinWhenIsVisibleCallback) {\n      // Deactivate listeners attached by pin().\n      this._stopPinning(); // Deactivate the panel pin() control logic.\n      // TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\n\n      this.stopListening(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n      this._pinWhenIsVisibleCallback = null;\n      this.hide();\n    }\n  }\n  /**\n   * Starts managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}.\n   */\n\n\n  _startPinning(options) {\n    this.attachTo(options);\n    const targetElement = getDomElement(options.target);\n    const limiterElement = options.limiter ? getDomElement(options.limiter) : defaultLimiterElement; // Then we need to listen on scroll event of eny element in the document.\n\n    this.listenTo(global.document, 'scroll', (evt, domEvt) => {\n      const scrollTarget = domEvt.target; // The position needs to be updated if the positioning target is within the scrolled element.\n\n      const isWithinScrollTarget = targetElement && scrollTarget.contains(targetElement); // The position needs to be updated if the positioning limiter is within the scrolled element.\n\n      const isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains(limiterElement); // The positioning target and/or limiter can be a Rect, object etc..\n      // There's no way to optimize the listener then.\n\n      if (isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement) {\n        this.attachTo(options);\n      }\n    }, {\n      useCapture: true\n    }); // We need to listen on window resize event and update position.\n\n    this.listenTo(global.window, 'resize', () => {\n      this.attachTo(options);\n    });\n  }\n  /**\n   * Stops managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   */\n\n\n  _stopPinning() {\n    this.stopListening(global.document, 'scroll');\n    this.stopListening(global.window, 'resize');\n  }\n\n} // Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\n\nfunction getDomElement(object) {\n  if (isElement(object)) {\n    return object;\n  }\n\n  if (isRange(object)) {\n    return object.commonAncestorContainer;\n  }\n\n  if (typeof object == 'function') {\n    return getDomElement(object());\n  }\n\n  return null;\n}\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 25\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\n\n\nBalloonPanelView.arrowHorizontalOffset = 25;\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 10\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\n\nBalloonPanelView.arrowVerticalOffset = 10;\n/**\n * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n * It helps in accessing toolbar buttons underneath the balloon panel.\n *\n *\t\t  +---------------------------------------------------+\n *\t\t  |                      Target                       |\n *\t\t  |                                                   |\n *\t\t  |                            /-- vertical offset    |\n *\t\t+-----------------------------V-------------------------+\n *\t\t| Toolbar            +-------------+                    |\n *\t\t+--------------------|   Balloon   |--------------------+\n *\t\t| |                  +-------------+                  | |\n *\t\t| |                                                   | |\n *\t\t| |                                                   | |\n *\t\t| |                                                   | |\n *\t\t| +---------------------------------------------------+ |\n *\t\t|                        Viewport                       |\n *\t\t+-------------------------------------------------------+\n *\n * @default 20\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset\n */\n\nBalloonPanelView.stickyVerticalOffset = 20;\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\n\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n* * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `viewportStickyNorth`\n *\n *\t\t    +---------------------------+\n *\t\t    |        [ Target ]         |\n *\t\t    |                           |\n *\t\t+-----------------------------------+\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |    |     Balloon     |    |   |\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   +---------------------------+   |\n *\t\t|             Viewport              |\n *\t\t+-----------------------------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object.<String,module:utils/dom/position~positioningFunction>}\n * module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\n\nBalloonPanelView.defaultPositions = {\n  // ------- North west\n  northWestArrowSouthWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sw'\n  }),\n  northWestArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width * .25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_smw'\n  }),\n  northWestArrowSouth: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width / 2,\n    name: 'arrow_s'\n  }),\n  northWestArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width * .75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sme'\n  }),\n  northWestArrowSouthEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_se'\n  }),\n  // ------- North\n  northArrowSouthWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sw'\n  }),\n  northArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width * .25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_smw'\n  }),\n  northArrowSouth: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n    name: 'arrow_s'\n  }),\n  northArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width * .75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sme'\n  }),\n  northArrowSouthEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_se'\n  }),\n  // ------- North east\n  northEastArrowSouthWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sw'\n  }),\n  northEastArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width * .25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_smw'\n  }),\n  northEastArrowSouth: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width / 2,\n    name: 'arrow_s'\n  }),\n  northEastArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width * .75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_sme'\n  }),\n  northEastArrowSouthEast: (targetRect, balloonRect) => ({\n    top: getNorthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_se'\n  }),\n  // ------- South west\n  southWestArrowNorthWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nw'\n  }),\n  southWestArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width * .25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nmw'\n  }),\n  southWestArrowNorth: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width / 2,\n    name: 'arrow_n'\n  }),\n  southWestArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width * .75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nme'\n  }),\n  southWestArrowNorthEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_ne'\n  }),\n  // ------- South\n  southArrowNorthWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nw'\n  }),\n  southArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nmw'\n  }),\n  southArrowNorth: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n    name: 'arrow_n'\n  }),\n  southArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nme'\n  }),\n  southArrowNorthEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_ne'\n  }),\n  // ------- South east\n  southEastArrowNorthWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nw'\n  }),\n  southEastArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width * .25 - BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nmw'\n  }),\n  southEastArrowNorth: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width / 2,\n    name: 'arrow_n'\n  }),\n  southEastArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width * .75 + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_nme'\n  }),\n  southEastArrowNorthEast: (targetRect, balloonRect) => ({\n    top: getSouthTop(targetRect, balloonRect),\n    left: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n    name: 'arrow_ne'\n  }),\n  // ------- Sticky\n  viewportStickyNorth: (targetRect, balloonRect, viewportRect) => {\n    if (!targetRect.getIntersection(viewportRect)) {\n      return null;\n    }\n\n    return {\n      top: viewportRect.top + BalloonPanelView.stickyVerticalOffset,\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n      name: 'arrowless',\n      config: {\n        withArrow: false\n      }\n    };\n  }\n}; // Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\n\nfunction getNorthTop(targetRect, balloonRect) {\n  return targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n} // Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\n\n\nfunction getSouthTop(targetRect) {\n  return targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js"],"names":["View","getOptimalPosition","isRange","toUnit","global","isElement","toPx","defaultLimiterElement","document","body","BalloonPanelView","constructor","locale","bind","bindTemplate","set","content","createCollection","setTemplate","tag","attributes","class","to","value","if","style","top","left","children","show","isVisible","hide","attachTo","options","defaultPositions","positionOptions","Object","assign","element","positions","southArrowNorth","southArrowNorthMiddleWest","southArrowNorthMiddleEast","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthMiddleWest","northArrowSouthMiddleEast","northArrowSouthWest","northArrowSouthEast","viewportStickyNorth","limiter","fitInViewport","optimalPosition","_getOptimalPosition","parseInt","name","position","config","withArrow","pin","unpin","_pinWhenIsVisibleCallback","_startPinning","_stopPinning","listenTo","stopListening","targetElement","getDomElement","target","limiterElement","evt","domEvt","scrollTarget","isWithinScrollTarget","contains","isLimiterWithinScrollTarget","useCapture","window","object","commonAncestorContainer","arrowHorizontalOffset","arrowVerticalOffset","stickyVerticalOffset","northWestArrowSouthWest","targetRect","balloonRect","getNorthTop","northWestArrowSouthMiddleWest","width","northWestArrowSouth","northWestArrowSouthMiddleEast","northWestArrowSouthEast","northEastArrowSouthWest","right","northEastArrowSouthMiddleWest","northEastArrowSouth","northEastArrowSouthMiddleEast","northEastArrowSouthEast","southWestArrowNorthWest","getSouthTop","southWestArrowNorthMiddleWest","southWestArrowNorth","southWestArrowNorthMiddleEast","southWestArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleWest","southEastArrowNorth","southEastArrowNorthMiddleEast","southEastArrowNorthEast","viewportRect","getIntersection","height","bottom"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAO,kDAAP;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAAE,IAAF,CAAnB;AACA,MAAMI,qBAAqB,GAAGH,MAAM,CAACI,QAAP,CAAgBC,IAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,gBAAN,SAA+BV,IAA/B,CAAoC;AAClD;AACD;AACA;AACCW,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA,UAAMC,IAAI,GAAG,KAAKC,YAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKC,GAAL,CAAU,KAAV,EAAiB,CAAjB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,MAAV,EAAkB,CAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,UAAV,EAAsB,UAAtB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,WAAV,EAAuB,KAAvB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,WAAV,EAAuB,IAAvB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,OAAV;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;;AACE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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\n\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_nw'\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_nw' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * A collection of the child views that creates the balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.attachTo( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\t\tdefaultPositions.viewportStickyNorth\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left );\n\t\tconst top = parseInt( optimalPosition.top );\n\n\t\tconst { name: position, config = {} } = optimalPosition;\n\t\tconst { withArrow = true } = config;\n\n\t\tObject.assign( this, { top, left, position, withArrow } );\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n\t * and is immune to the changing environment.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.pin( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement( object ) {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n\n/**\n * A horizontal offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-----|---------...\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t |     |\n *\t\t +--+  |  +------...\n *\t\t     \\ | /\n *\t\t      \\|/\n *\t    >|-----|<---------------- horizontal offset\n *\n * @default 25\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHorizontalOffset\n */\nBalloonPanelView.arrowHorizontalOffset = 25;\n\n/**\n * A vertical offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t +-------------...\n *\t\t |\n *\t\t |\n *\t\t |                      /-- vertical offset\n *\t\t |                     V\n *\t\t +--+    +-----...    ---------\n *\t\t     \\  /              |\n *\t\t      \\/               |\n *\t\t-------------------------------\n *\t\t                       ^\n *\n * @default 10\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowVerticalOffset\n */\nBalloonPanelView.arrowVerticalOffset = 10;\n\n/**\n * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n * It helps in accessing toolbar buttons underneath the balloon panel.\n *\n *\t\t  +---------------------------------------------------+\n *\t\t  |                      Target                       |\n *\t\t  |                                                   |\n *\t\t  |                            /-- vertical offset    |\n *\t\t+-----------------------------V-------------------------+\n *\t\t| Toolbar            +-------------+                    |\n *\t\t+--------------------|   Balloon   |--------------------+\n *\t\t| |                  +-------------+                  | |\n *\t\t| |                                                   | |\n *\t\t| |                                                   | |\n *\t\t| |                                                   | |\n *\t\t| +---------------------------------------------------+ |\n *\t\t|                        Viewport                       |\n *\t\t+-------------------------------------------------------+\n *\n * @default 20\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset\n */\nBalloonPanelView.stickyVerticalOffset = 20;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n* * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `viewportStickyNorth`\n *\n *\t\t    +---------------------------+\n *\t\t    |        [ Target ]         |\n *\t\t    |                           |\n *\t\t+-----------------------------------+\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |    |     Balloon     |    |   |\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   +---------------------------+   |\n *\t\t|             Viewport              |\n *\t\t+-----------------------------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object.<String,module:utils/dom/position~positioningFunction>}\n * module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = {\n\n\t// ------- North west\n\n\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North\n\n\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- North east\n\n\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sw'\n\t} ),\n\n\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_smw'\n\t} ),\n\n\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_s'\n\t} ),\n\n\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_sme'\n\t} ),\n\n\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_se'\n\t} ),\n\n\t// ------- South west\n\n\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South\n\n\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- South east\n\n\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nw'\n\t} ),\n\n\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nmw'\n\t} ),\n\n\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\tname: 'arrow_n'\n\t} ),\n\n\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_nme'\n\t} ),\n\n\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\tleft: targetRect.right - balloonRect.width + BalloonPanelView.arrowHorizontalOffset,\n\t\tname: 'arrow_ne'\n\t} ),\n\n\t// ------- Sticky\n\n\tviewportStickyNorth: ( targetRect, balloonRect, viewportRect ) => {\n\t\tif ( !targetRect.getIntersection( viewportRect ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: viewportRect.top + BalloonPanelView.stickyVerticalOffset,\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\tname: 'arrowless',\n\t\t\tconfig: {\n\t\t\t\twithArrow: false\n\t\t\t}\n\t\t};\n\t}\n};\n\n// Returns the top coordinate for positions starting with `north*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getNorthTop( targetRect, balloonRect ) {\n\treturn targetRect.top - balloonRect.height - BalloonPanelView.arrowVerticalOffset;\n}\n\n// Returns the top coordinate for positions starting with `south*`.\n//\n// @private\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n// @returns {Number}\nfunction getSouthTop( targetRect ) {\n\treturn targetRect.bottom + BalloonPanelView.arrowVerticalOffset;\n}\n"]},"metadata":{},"sourceType":"module"}