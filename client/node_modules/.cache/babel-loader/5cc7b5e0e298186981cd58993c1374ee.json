{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable max-len */\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\nimport * as events from '../base/constant';\nimport * as util from '../base/util';\n/**\r\n * Schedule CRUD operations\r\n */\n\nvar Crud =\n/** @class */\nfunction () {\n  function Crud(parent) {\n    this.parent = parent;\n    this.crudObj = {\n      sourceEvent: null,\n      targetEvent: null,\n      isCrudAction: false\n    };\n  }\n\n  Crud.prototype.getQuery = function () {\n    var start = this.parent.activeView.startDate();\n    var end = this.parent.activeView.endDate();\n    return this.parent.dataModule.generateQuery(start, end);\n  };\n\n  Crud.prototype.getTable = function () {\n    if (this.parent.eventSettings.query) {\n      var query = this.parent.eventSettings.query.clone();\n      return query.fromTable;\n    }\n\n    return null;\n  };\n\n  Crud.prototype.refreshDataManager = function () {\n    var _this = this;\n\n    if (!this.parent.activeView) {\n      return;\n    }\n\n    var start = this.parent.activeView.startDate();\n    var end = this.parent.activeView.endDate();\n    var dataManager = this.parent.dataModule.getData(this.parent.dataModule.generateQuery(start, end));\n    dataManager.then(function (e) {\n      return _this.dataManagerSuccess(e);\n    }).catch(function (e) {\n      return _this.dataManagerFailure(e);\n    });\n  };\n\n  Crud.prototype.dataManagerSuccess = function (e) {\n    var _this = this;\n\n    if (!this.parent || this.parent && this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.trigger(events.dataBinding, e, function (args) {\n      var resultData = extend([], args.result, null, true);\n      _this.parent.eventsData = resultData.filter(function (data) {\n        return !data[_this.parent.eventFields.isBlock];\n      });\n      _this.parent.blockData = resultData.filter(function (data) {\n        return data[_this.parent.eventFields.isBlock];\n      });\n\n      _this.parent.refreshEvents(false);\n\n      if (_this.parent.dragAndDropModule && _this.parent.dragAndDropModule.actionObj.action === 'drag') {\n        _this.parent.dragAndDropModule.navigationWrapper();\n      }\n\n      _this.parent.trigger(events.dataBound, null, function () {\n        _this.parent.hideSpinner();\n\n        if (_this.parent.isPrinting) {\n          _this.parent.notify(events.print, {});\n        }\n      });\n    });\n  };\n\n  Crud.prototype.dataManagerFailure = function (e) {\n    var _this = this;\n\n    if (!this.parent || this.parent && this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.trigger(events.actionFailure, {\n      error: e\n    }, function () {\n      return _this.parent.hideSpinner();\n    });\n  };\n\n  Crud.prototype.refreshData = function (args) {\n    var _this = this;\n\n    var actionArgs = {\n      requestType: args.requestType,\n      cancel: false,\n      data: args.data,\n      addedRecords: args.editParams.addedRecords,\n      changedRecords: args.editParams.changedRecords,\n      deletedRecords: args.editParams.deletedRecords\n    };\n\n    if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\n      this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\n    }\n\n    if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\n      this.parent.resizeModule.actionObj.element.style.display = 'none';\n    }\n\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\n      if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\n        this.crudObj.isCrudAction = true;\n        this.crudObj.sourceEvent = [];\n        var crudData = args.data instanceof Array ? args.data.length === 0 && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data : (typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : [args.data];\n\n        var _loop_1 = function (data) {\n          this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\n          var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\n\n          if (groupIndex > -1 && this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) {\n            return tdData.groupIndex === groupIndex;\n          }).length === 0 && this_1.crudObj.isCrudAction) {\n            this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\n          }\n        };\n\n        var this_1 = this;\n\n        for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\n          var data = crudData_1[_i];\n\n          _loop_1(data);\n        }\n\n        this.crudObj.targetEvent = this.crudObj.sourceEvent;\n      }\n    }\n\n    if (this.parent.dataModule.dataManager.dataSource.offline) {\n      this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\n        if (!offlineArgs.cancel) {\n          _this.refreshDataManager();\n        }\n      });\n    } else {\n      args.promise.then(function () {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n\n        _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\n          if (!onlineArgs.cancel) {\n            _this.refreshDataManager();\n          }\n        });\n      }).catch(function (e) {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n\n        _this.parent.trigger(events.actionFailure, {\n          error: e\n        });\n      });\n    }\n  };\n\n  Crud.prototype.addEvent = function (eventData) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowAdding && !this.parent.activeViewOptions.readonly) {\n      if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n\n      var addEvents = eventData instanceof Array ? eventData : [eventData];\n      var args = {\n        requestType: 'eventCreate',\n        cancel: false,\n        data: addEvents,\n        addedRecords: addEvents,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.trigger(events.actionBegin, args, function (addArgs) {\n        if (!addArgs.cancel) {\n          var fields = _this.parent.eventFields;\n          var editParams = {\n            addedRecords: [],\n            changedRecords: [],\n            deletedRecords: []\n          };\n          var promise = void 0;\n\n          if (addArgs.addedRecords instanceof Array) {\n            for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\n              var event_1 = _a[_i];\n              event_1 = _this.parent.eventBase.updateEventDateTime(event_1);\n              var eventData_1 = extend({}, _this.parent.eventBase.processTimezone(event_1, true), null, true);\n              editParams.addedRecords.push(eventData_1);\n            }\n\n            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n          } else {\n            var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\n\n            editParams.addedRecords.push(event_2);\n            promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\n          }\n\n          var crudArgs = {\n            requestType: 'eventCreated',\n            cancel: false,\n            data: addArgs.addedRecords,\n            promise: promise,\n            editParams: editParams\n          };\n\n          _this.refreshData(crudArgs);\n        }\n      });\n    }\n  };\n\n  Crud.prototype.saveEvent = function (eventData, action) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowEditing && !this.parent.activeViewOptions.readonly) {\n      if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n\n      this.parent.currentAction = action;\n\n      if (action) {\n        switch (action) {\n          case 'Save':\n            this.processSave(eventData);\n            break;\n\n          case 'EditOccurrence':\n            this.processOccurrences(eventData, action);\n            break;\n\n          case 'EditFollowingEvents':\n            this.processFollowSeries(eventData, action);\n            break;\n\n          case 'EditSeries':\n            this.processEntireSeries(eventData, action);\n            break;\n        }\n      } else {\n        var updateEvents = eventData instanceof Array ? eventData : [eventData];\n        var args = {\n          requestType: 'eventChange',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: updateEvents,\n          deletedRecords: []\n        };\n        this.parent.trigger(events.actionBegin, args, function (saveArgs) {\n          if (!saveArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n\n            if (saveArgs.changedRecords instanceof Array) {\n              for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\n                var event_3 = _a[_i];\n                event_3 = _this.parent.eventBase.updateEventDateTime(event_3);\n                var eventData_2 = extend({}, _this.parent.eventBase.processTimezone(event_3, true), null, true);\n                editParams.changedRecords.push(eventData_2);\n              }\n\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\n\n              editParams.changedRecords.push(event_4);\n              promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\n            }\n\n            var crudArgs = {\n              requestType: 'eventChanged',\n              cancel: false,\n              data: saveArgs.changedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n\n  Crud.prototype.deleteEvent = function (eventData, action) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowDeleting && !this.parent.activeViewOptions.readonly) {\n      this.parent.currentAction = action;\n      var deleteEvents = [];\n\n      if (typeof eventData === 'string' || typeof eventData === 'number') {\n        deleteEvents = this.parent.eventsData.filter(function (eventObj) {\n          return eventObj[_this.parent.eventFields.id] === eventData;\n        });\n      } else {\n        deleteEvents = eventData instanceof Array ? eventData : [eventData];\n      }\n\n      if (action) {\n        switch (action) {\n          case 'Delete':\n            this.processDelete(deleteEvents);\n            break;\n\n          case 'DeleteOccurrence':\n            this.processOccurrences(deleteEvents, action);\n            break;\n\n          case 'DeleteFollowingEvents':\n            this.processFollowSeries(deleteEvents, action);\n            break;\n\n          case 'DeleteSeries':\n            this.processEntireSeries(deleteEvents, action);\n            break;\n        }\n      } else {\n        var args = {\n          requestType: 'eventRemove',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: deleteEvents\n        };\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n          if (!deleteArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n\n            if (deleteArgs.deletedRecords.length > 1) {\n              editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\n              promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\n            }\n\n            _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\n\n            var crudArgs = {\n              requestType: 'eventRemoved',\n              cancel: false,\n              data: deleteArgs.deletedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n\n  Crud.prototype.processOccurrences = function (eventData, action) {\n    var _this = this;\n\n    var occurrenceData = [];\n    var isDeletedRecords = false;\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\n        var event_5 = eventData_3[_i];\n        occurrenceData.push({\n          occurrence: event_5,\n          parent: this.getParentEvent(event_5)\n        });\n      }\n    } else {\n      occurrenceData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n\n    var updateEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateEvents,\n      deletedRecords: []\n    };\n    args.data = occurrenceData;\n    this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\n      if (!occurrenceArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var occurrenceEvents = occurrenceData instanceof Array ? occurrenceData : [occurrenceData];\n\n        var _loop_2 = function (a, count) {\n          var childEvent = occurrenceArgs.changedRecords[a];\n          var parentEvent = occurrenceEvents[a].parent;\n          var parentException = parentEvent[fields.recurrenceException];\n          var editedData = void 0;\n          var exceptionDate = void 0;\n\n          switch (action) {\n            case 'EditOccurrence':\n              editedData = _this.parent.eventsProcessed.filter(function (event) {\n                return event.Guid === childEvent.Guid;\n              })[0];\n              exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\n\n              if (exceptionDate !== parentEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = exceptionDate;\n                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\n                childEvent[fields.recurrenceID] = parentEvent[fields.id];\n                childEvent[fields.followingID] = null;\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              } else {\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              }\n\n              break;\n\n            case 'DeleteOccurrence':\n              if (!childEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = _this.excludeDateCheck(childEvent[fields.startTime], parentException);\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              }\n\n              if (childEvent[fields.id] !== parentEvent[fields.id]) {\n                editParams.deletedRecords.push(childEvent);\n                isDeletedRecords = true;\n              }\n\n              break;\n          }\n        };\n\n        for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\n          _loop_2(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processFollowSeries = function (eventData, action) {\n    var _this = this;\n\n    var followData = [];\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\n        var event_6 = eventData_4[_i];\n        followData.push({\n          occurrence: event_6,\n          parent: this.getParentEvent(event_6)\n        });\n      }\n    } else {\n      followData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n\n    var updateFollowEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateFollowEvents,\n      deletedRecords: []\n    };\n    args.data = followData;\n    this.parent.trigger(events.actionBegin, args, function (followArgs) {\n      if (!followArgs.cancel) {\n        var fields_1 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var followEvents = followData instanceof Array ? followData : [followData];\n\n        var _loop_3 = function (a, count) {\n          var childEvent = followArgs.changedRecords[a];\n          var parentEvent = followEvents[a].parent;\n\n          var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\n\n          var isSpanned = void 0;\n\n          switch (action) {\n            case 'EditFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent);\n\n              isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\n              childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\n              childEvent[fields_1.recurrenceID] = null;\n              editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n\n              if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\n                childEvent[fields_1.recurrenceException] = null;\n\n                if (followData_1.occurrence.length > 0) {\n                  var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\n\n                  if (rule.indexOf('COUNT') === -1) {\n                    childEvent[fields_1.recurrenceRule] = rule;\n                  }\n                }\n\n                if (followData_1.follow.length > 0) {\n                  childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\n                  editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\n                }\n\n                if (isSpanned) {\n                  followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\n                    return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\n                  });\n                }\n\n                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\n              }\n\n              break;\n\n            case 'DeleteFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\n\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\n              break;\n          }\n        };\n\n        for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\n          _loop_3(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: followArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processEntireSeries = function (eventData, action) {\n    var _this = this;\n\n    var seriesData = [];\n    var isDeletedRecords = false;\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\n        var event_7 = eventData_5[_i];\n        seriesData.push(this.getParentEvent(event_7, true));\n      }\n    } else {\n      seriesData = this.getParentEvent(eventData, true);\n    }\n\n    var updateSeriesEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateSeriesEvents,\n      deletedRecords: []\n    };\n    args.data = seriesData;\n    this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\n      if (!seriesArgs.cancel) {\n        var fields_2 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\n\n        var _loop_4 = function (a, count) {\n          var childEvent = seriesArgs.changedRecords[a];\n          var parentEvent = seriesEvents[a];\n\n          var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\n\n          var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\n\n          switch (action) {\n            case 'EditSeries':\n              if (childEvent[fields_2.startTime] > parentEvent[fields_2.startTime] && childEvent[fields_2.recurrenceRule]) {\n                _this.processRecurrenceRule(parentEvent, childEvent);\n              }\n\n              childEvent[fields_2.id] = parentEvent[fields_2.id];\n              childEvent[fields_2.recurrenceID] = null;\n              childEvent[fields_2.followingID] = null;\n\n              if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\n                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\n                  return eventObj[fields_2.id] === childEvent[fields_2.id];\n                });\n\n                if (originalParent.length > 0) {\n                  childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\n                }\n              } else {\n                childEvent[fields_2.recurrenceException] = null;\n                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\n              }\n\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              _this.parent.uiStateValues.isIgnoreOccurrence = false;\n              break;\n\n            case 'DeleteSeries':\n              editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\n              isDeletedRecords = true;\n              break;\n          }\n        };\n\n        for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\n          _loop_4(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processDelete = function (eventData) {\n    var _this = this;\n\n    var deleteData = [];\n\n    for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\n      var eventObj = eventData_6[_i];\n\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        deleteData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        deleteData.push(eventObj);\n      }\n    }\n\n    var args = {\n      requestType: 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: eventData\n    };\n    args.data = deleteData;\n    this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n      if (!deleteArgs.cancel) {\n        var fields_3 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n\n        var _loop_5 = function (a, count) {\n          var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\n\n          if (!isDelete) {\n            var parentEvent_1 = deleteData[a].parent;\n            var isEdited = editParams.changedRecords.filter(function (obj) {\n              return obj[fields_3.id] === parentEvent_1[fields_3.id];\n            });\n            var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\n\n            if (isEdited.length > 0) {\n              var editedData = isEdited[0];\n              editedData[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\n            } else {\n              parentEvent_1[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\n            }\n\n            if (isEdited.length === 0) {\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\n            }\n\n            isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\n          }\n\n          if (isDelete) {\n            editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\n          }\n        };\n\n        for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\n          _loop_5(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\n\n        var crudArgs = {\n          requestType: 'eventRemoved',\n          cancel: false,\n          data: deleteArgs.deletedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processSave = function (data) {\n    var _this = this;\n\n    var eventData = data instanceof Array ? data : [data];\n    var editData = [];\n\n    for (var _i = 0, eventData_7 = eventData; _i < eventData_7.length; _i++) {\n      var eventObj = eventData_7[_i];\n\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        editData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        editData.push(eventObj);\n      }\n    }\n\n    var args = {\n      requestType: 'eventChange',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: eventData,\n      deletedRecords: []\n    };\n    args.data = editData;\n    this.parent.trigger(events.actionBegin, args, function (editArgs) {\n      if (!editArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n\n        for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\n          var record = _a[_i];\n\n          if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\n            var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\n\n            var parentEle = _this.getParentEvent(record);\n\n            parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ? exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\n            record[fields.id] = _this.parent.getEventMaxID();\n            record[fields.recurrenceException] = exceptionString;\n            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\n          } else {\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n          }\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n\n        var crudArgs = {\n          requestType: 'eventChanged',\n          cancel: false,\n          data: editArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.getParentEvent = function (event, isParent) {\n    if (isParent === void 0) {\n      isParent = false;\n    }\n\n    var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\n\n    if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\n      this.parent.eventBase.timezoneConvert(parentEvent);\n    }\n\n    return parentEvent;\n  };\n\n  Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\n    var exDate = getRecurrenceStringFromDate(eventStartTime);\n\n    if (!isNullOrUndefined(exceptionDateList)) {\n      if (exceptionDateList.indexOf(exDate) === -1) {\n        exceptionDateList = !isNullOrUndefined(exceptionDateList) ? exceptionDateList + ',' + exDate : exDate;\n      }\n    } else {\n      exceptionDateList = exDate;\n    }\n\n    return exceptionDateList;\n  };\n\n  Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\n    var fields = this.parent.eventFields;\n    var recurrenceRule = parentEvent[fields.recurrenceRule];\n    var endDate;\n\n    if (followEvent instanceof Date) {\n      endDate = new Date(+followEvent);\n    } else {\n      endDate = new Date(+followEvent[fields.startTime]);\n      var newRecurrenceRule = followEvent[fields.recurrenceRule];\n      var startDate = parentEvent[fields.startTime];\n      var ruleException = this.parent.currentAction === 'DeleteFollowingEvents' ? followEvent[fields.recurrenceException] : null;\n      var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\n      var untilDate = new Date(dateCollection.slice(-1)[0]);\n      untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\n      endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\n      followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\n    }\n\n    parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\n  };\n\n  Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\n    var splitRule = recurrenceRule.split(';');\n    var updatedRule = '';\n\n    for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\n      var rule = splitRule_1[_i];\n\n      if (rule !== '') {\n        var ruleKey = rule.split('=')[0];\n        var ruleValue = rule.split('=')[1];\n\n        if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\n          ruleValue = getRecurrenceStringFromDate(untilDate);\n          rule = rule.replace(rule, 'UNTIL=' + ruleValue);\n        }\n\n        updatedRule += rule + ';';\n      }\n    }\n\n    if (isParent && updatedRule.indexOf('UNTIL') === -1) {\n      updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\n    }\n\n    return updatedRule;\n  };\n\n  Crud.prototype.isBlockEvent = function (eventData) {\n    var eventCollection = eventData instanceof Array ? eventData : [eventData];\n    var value = false;\n\n    for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n      var event_8 = eventCollection_1[_i];\n      value = event_8[this.parent.eventFields.isBlock] || false;\n    }\n\n    return value;\n  };\n  /**\r\n   * To destroy the crud module.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Crud.prototype.destroy = function () {\n    this.crudObj = null;\n    this.parent = null;\n  };\n\n  return Crud;\n}();\n\nexport { Crud };","map":{"version":3,"sources":["D:/HUST/20211/Introduction to Software Engineering/Project/Sprint 2/RubyGYM/client/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/crud.js"],"names":["isNullOrUndefined","extend","getRecurrenceStringFromDate","generate","events","util","Crud","parent","crudObj","sourceEvent","targetEvent","isCrudAction","prototype","getQuery","start","activeView","startDate","end","endDate","dataModule","generateQuery","getTable","eventSettings","query","clone","fromTable","refreshDataManager","_this","dataManager","getData","then","e","dataManagerSuccess","catch","dataManagerFailure","isDestroyed","trigger","dataBinding","args","resultData","result","eventsData","filter","data","eventFields","isBlock","blockData","refreshEvents","dragAndDropModule","actionObj","action","navigationWrapper","dataBound","hideSpinner","isPrinting","notify","print","actionFailure","error","refreshData","actionArgs","requestType","cancel","addedRecords","editParams","changedRecords","deletedRecords","element","style","display","resizeModule","activeViewOptions","group","resources","length","allowGroupEdit","rowAutoHeight","virtualScrollModule","byGroupID","crudData","Array","_loop_1","this_1","groupIndex","eventBase","getGroupIndexFromEvent","crudModule","tdData","push","resourceBase","lastResourceLevel","_i","crudData_1","dataSource","offline","actionComplete","offlineArgs","promise","onlineArgs","addEvent","eventData","allowAdding","readonly","isBlockEvent","isBlockRange","quickPopup","openValidationError","addEvents","actionBegin","addArgs","fields","_a","event_1","updateEventDateTime","eventData_1","processTimezone","saveChanges","id","event_2","insert","crudArgs","saveEvent","allowEditing","currentAction","processSave","processOccurrences","processFollowSeries","processEntireSeries","updateEvents","saveArgs","event_3","eventData_2","event_4","update","deleteEvent","allowDeleting","deleteEvents","eventObj","processDelete","deleteArgs","concat","remove","selectWorkCellByTime","occurrenceData","isDeletedRecords","eventData_3","event_5","occurrence","getParentEvent","occurrenceArgs","occurrenceEvents","_loop_2","a","count","childEvent","parentEvent","parentException","recurrenceException","editedData","exceptionDate","eventsProcessed","event","Guid","excludeDateCheck","startTime","recurrenceID","followingID","followData","eventData_4","event_6","updateFollowEvents","followArgs","fields_1","followEvents","_loop_3","followData_1","getEventCollections","isSpanned","processRecurrenceRule","isFollowingEvent","uiStateValues","isIgnoreOccurrence","rule","slice","recurrenceRule","indexOf","follow","seriesData","eventData_5","event_7","updateSeriesEvents","seriesArgs","fields_2","seriesEvents","_loop_4","eventCollections","deletedEvents","originalParent","deleteData","eventData_6","fields_3","_loop_5","isDelete","parentEvent_1","isEdited","obj","editedDate","editData","eventData_7","editArgs","record","exceptionString","parentEle","getEventMaxID","isParent","startTimezone","endTimezone","timezoneConvert","eventStartTime","exceptionDateList","exDate","followEvent","Date","newRecurrenceRule","ruleException","dateCollection","firstDayOfWeek","untilDate","setHours","getHours","getMinutes","getSeconds","getUpdatedRecurrenceRule","addDays","getTime","splitRule","split","updatedRule","splitRule_1","ruleKey","ruleValue","replace","eventCollection","value","eventCollection_1","event_8","destroy"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable max-len */\r\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\r\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\r\nimport * as events from '../base/constant';\r\nimport * as util from '../base/util';\r\n/**\r\n * Schedule CRUD operations\r\n */\r\nvar Crud = /** @class */ (function () {\r\n    function Crud(parent) {\r\n        this.parent = parent;\r\n        this.crudObj = { sourceEvent: null, targetEvent: null, isCrudAction: false };\r\n    }\r\n    Crud.prototype.getQuery = function () {\r\n        var start = this.parent.activeView.startDate();\r\n        var end = this.parent.activeView.endDate();\r\n        return this.parent.dataModule.generateQuery(start, end);\r\n    };\r\n    Crud.prototype.getTable = function () {\r\n        if (this.parent.eventSettings.query) {\r\n            var query = this.parent.eventSettings.query.clone();\r\n            return query.fromTable;\r\n        }\r\n        return null;\r\n    };\r\n    Crud.prototype.refreshDataManager = function () {\r\n        var _this = this;\r\n        if (!this.parent.activeView) {\r\n            return;\r\n        }\r\n        var start = this.parent.activeView.startDate();\r\n        var end = this.parent.activeView.endDate();\r\n        var dataManager = this.parent.dataModule.getData(this.parent.dataModule.generateQuery(start, end));\r\n        dataManager.then(function (e) { return _this.dataManagerSuccess(e); }).catch(function (e) { return _this.dataManagerFailure(e); });\r\n    };\r\n    Crud.prototype.dataManagerSuccess = function (e) {\r\n        var _this = this;\r\n        if (!this.parent || this.parent && this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.trigger(events.dataBinding, e, function (args) {\r\n            var resultData = extend([], args.result, null, true);\r\n            _this.parent.eventsData = resultData.filter(function (data) { return !data[_this.parent.eventFields.isBlock]; });\r\n            _this.parent.blockData = resultData.filter(function (data) { return data[_this.parent.eventFields.isBlock]; });\r\n            _this.parent.refreshEvents(false);\r\n            if (_this.parent.dragAndDropModule && _this.parent.dragAndDropModule.actionObj.action === 'drag') {\r\n                _this.parent.dragAndDropModule.navigationWrapper();\r\n            }\r\n            _this.parent.trigger(events.dataBound, null, function () {\r\n                _this.parent.hideSpinner();\r\n                if (_this.parent.isPrinting) {\r\n                    _this.parent.notify(events.print, {});\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Crud.prototype.dataManagerFailure = function (e) {\r\n        var _this = this;\r\n        if (!this.parent || this.parent && this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.trigger(events.actionFailure, { error: e }, function () { return _this.parent.hideSpinner(); });\r\n    };\r\n    Crud.prototype.refreshData = function (args) {\r\n        var _this = this;\r\n        var actionArgs = {\r\n            requestType: args.requestType, cancel: false, data: args.data,\r\n            addedRecords: args.editParams.addedRecords, changedRecords: args.editParams.changedRecords,\r\n            deletedRecords: args.editParams.deletedRecords\r\n        };\r\n        if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\r\n            this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\r\n        }\r\n        if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\r\n            this.parent.resizeModule.actionObj.element.style.display = 'none';\r\n        }\r\n        if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit\r\n            && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\r\n            if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\r\n                this.crudObj.isCrudAction = true;\r\n                this.crudObj.sourceEvent = [];\r\n                var crudData = args.data instanceof Array ? (args.data.length === 0 &&\r\n                    args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data) :\r\n                    ((typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved') ?\r\n                        args.editParams.deletedRecords : [args.data];\r\n                var _loop_1 = function (data) {\r\n                    this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\r\n                    var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\r\n                    if (groupIndex > -1 && this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) { return tdData.groupIndex === groupIndex; }).length === 0\r\n                        && this_1.crudObj.isCrudAction) {\r\n                        this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\r\n                    }\r\n                };\r\n                var this_1 = this;\r\n                for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\r\n                    var data = crudData_1[_i];\r\n                    _loop_1(data);\r\n                }\r\n                this.crudObj.targetEvent = this.crudObj.sourceEvent;\r\n            }\r\n        }\r\n        if (this.parent.dataModule.dataManager.dataSource.offline) {\r\n            this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\r\n                if (!offlineArgs.cancel) {\r\n                    _this.refreshDataManager();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            args.promise.then(function () {\r\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\r\n                    return;\r\n                }\r\n                _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\r\n                    if (!onlineArgs.cancel) {\r\n                        _this.refreshDataManager();\r\n                    }\r\n                });\r\n            }).catch(function (e) {\r\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\r\n                    return;\r\n                }\r\n                _this.parent.trigger(events.actionFailure, { error: e });\r\n            });\r\n        }\r\n    };\r\n    Crud.prototype.addEvent = function (eventData) {\r\n        var _this = this;\r\n        if (this.parent.eventSettings.allowAdding && !this.parent.activeViewOptions.readonly) {\r\n            if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\r\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\r\n                return;\r\n            }\r\n            var addEvents = (eventData instanceof Array) ? eventData : [eventData];\r\n            var args = {\r\n                requestType: 'eventCreate', cancel: false, data: addEvents,\r\n                addedRecords: addEvents, changedRecords: [], deletedRecords: []\r\n            };\r\n            this.parent.trigger(events.actionBegin, args, function (addArgs) {\r\n                if (!addArgs.cancel) {\r\n                    var fields = _this.parent.eventFields;\r\n                    var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                    var promise = void 0;\r\n                    if (addArgs.addedRecords instanceof Array) {\r\n                        for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\r\n                            var event_1 = _a[_i];\r\n                            event_1 = _this.parent.eventBase.updateEventDateTime(event_1);\r\n                            var eventData_1 = extend({}, _this.parent.eventBase.processTimezone(event_1, true), null, true);\r\n                            editParams.addedRecords.push(eventData_1);\r\n                        }\r\n                        promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\r\n                    }\r\n                    else {\r\n                        var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\r\n                        editParams.addedRecords.push(event_2);\r\n                        promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\r\n                    }\r\n                    var crudArgs = {\r\n                        requestType: 'eventCreated', cancel: false, data: addArgs.addedRecords, promise: promise, editParams: editParams\r\n                    };\r\n                    _this.refreshData(crudArgs);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Crud.prototype.saveEvent = function (eventData, action) {\r\n        var _this = this;\r\n        if (this.parent.eventSettings.allowEditing && !this.parent.activeViewOptions.readonly) {\r\n            if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData)\r\n                && this.parent.eventBase.isBlockRange(eventData)) {\r\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\r\n                return;\r\n            }\r\n            this.parent.currentAction = action;\r\n            if (action) {\r\n                switch (action) {\r\n                    case 'Save':\r\n                        this.processSave(eventData);\r\n                        break;\r\n                    case 'EditOccurrence':\r\n                        this.processOccurrences(eventData, action);\r\n                        break;\r\n                    case 'EditFollowingEvents':\r\n                        this.processFollowSeries(eventData, action);\r\n                        break;\r\n                    case 'EditSeries':\r\n                        this.processEntireSeries(eventData, action);\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\r\n                var args = {\r\n                    requestType: 'eventChange', cancel: false, data: eventData,\r\n                    addedRecords: [], changedRecords: updateEvents, deletedRecords: []\r\n                };\r\n                this.parent.trigger(events.actionBegin, args, function (saveArgs) {\r\n                    if (!saveArgs.cancel) {\r\n                        var promise = void 0;\r\n                        var fields = _this.parent.eventFields;\r\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                        if (saveArgs.changedRecords instanceof Array) {\r\n                            for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\r\n                                var event_3 = _a[_i];\r\n                                event_3 = _this.parent.eventBase.updateEventDateTime(event_3);\r\n                                var eventData_2 = extend({}, _this.parent.eventBase.processTimezone(event_3, true), null, true);\r\n                                editParams.changedRecords.push(eventData_2);\r\n                            }\r\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\r\n                        }\r\n                        else {\r\n                            var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\r\n                            editParams.changedRecords.push(event_4);\r\n                            promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\r\n                        }\r\n                        var crudArgs = {\r\n                            requestType: 'eventChanged', cancel: false,\r\n                            data: saveArgs.changedRecords, promise: promise, editParams: editParams\r\n                        };\r\n                        _this.refreshData(crudArgs);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Crud.prototype.deleteEvent = function (eventData, action) {\r\n        var _this = this;\r\n        if (this.parent.eventSettings.allowDeleting && !this.parent.activeViewOptions.readonly) {\r\n            this.parent.currentAction = action;\r\n            var deleteEvents = [];\r\n            if (typeof eventData === 'string' || typeof eventData === 'number') {\r\n                deleteEvents = this.parent.eventsData.filter(function (eventObj) {\r\n                    return eventObj[_this.parent.eventFields.id] === eventData;\r\n                });\r\n            }\r\n            else {\r\n                deleteEvents = (eventData instanceof Array ? eventData : [eventData]);\r\n            }\r\n            if (action) {\r\n                switch (action) {\r\n                    case 'Delete':\r\n                        this.processDelete(deleteEvents);\r\n                        break;\r\n                    case 'DeleteOccurrence':\r\n                        this.processOccurrences(deleteEvents, action);\r\n                        break;\r\n                    case 'DeleteFollowingEvents':\r\n                        this.processFollowSeries(deleteEvents, action);\r\n                        break;\r\n                    case 'DeleteSeries':\r\n                        this.processEntireSeries(deleteEvents, action);\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                var args = {\r\n                    requestType: 'eventRemove', cancel: false, data: eventData,\r\n                    addedRecords: [], changedRecords: [], deletedRecords: deleteEvents\r\n                };\r\n                this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\r\n                    if (!deleteArgs.cancel) {\r\n                        var promise = void 0;\r\n                        var fields = _this.parent.eventFields;\r\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                        if (deleteArgs.deletedRecords.length > 1) {\r\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\r\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\r\n                        }\r\n                        else {\r\n                            editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\r\n                            promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\r\n                        }\r\n                        _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\r\n                        var crudArgs = {\r\n                            requestType: 'eventRemoved', cancel: false,\r\n                            data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\r\n                        };\r\n                        _this.refreshData(crudArgs);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Crud.prototype.processOccurrences = function (eventData, action) {\r\n        var _this = this;\r\n        var occurrenceData = [];\r\n        var isDeletedRecords = false;\r\n        if (eventData instanceof Array) {\r\n            for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\r\n                var event_5 = eventData_3[_i];\r\n                occurrenceData.push({ occurrence: event_5, parent: this.getParentEvent(event_5) });\r\n            }\r\n        }\r\n        else {\r\n            occurrenceData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\r\n        }\r\n        var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\r\n        var args = {\r\n            requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove', cancel: false,\r\n            addedRecords: [], changedRecords: updateEvents, deletedRecords: []\r\n        };\r\n        args.data = occurrenceData;\r\n        this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\r\n            if (!occurrenceArgs.cancel) {\r\n                var fields = _this.parent.eventFields;\r\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                var occurrenceEvents = (occurrenceData instanceof Array ? occurrenceData : [occurrenceData]);\r\n                var _loop_2 = function (a, count) {\r\n                    var childEvent = occurrenceArgs.changedRecords[a];\r\n                    var parentEvent = occurrenceEvents[a].parent;\r\n                    var parentException = parentEvent[fields.recurrenceException];\r\n                    var editedData = void 0;\r\n                    var exceptionDate = void 0;\r\n                    switch (action) {\r\n                        case 'EditOccurrence':\r\n                            editedData = _this.parent.eventsProcessed.filter(function (event) { return event.Guid === childEvent.Guid; })[0];\r\n                            exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\r\n                            if (exceptionDate !== parentEvent[fields.recurrenceException]) {\r\n                                parentEvent[fields.recurrenceException] = exceptionDate;\r\n                                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\r\n                                childEvent[fields.recurrenceID] = parentEvent[fields.id];\r\n                                childEvent[fields.followingID] = null;\r\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\r\n                                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\r\n                            }\r\n                            else {\r\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\r\n                            }\r\n                            break;\r\n                        case 'DeleteOccurrence':\r\n                            if (!childEvent[fields.recurrenceException]) {\r\n                                parentEvent[fields.recurrenceException] =\r\n                                    _this.excludeDateCheck(childEvent[fields.startTime], parentException);\r\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\r\n                            }\r\n                            if (childEvent[fields.id] !== parentEvent[fields.id]) {\r\n                                editParams.deletedRecords.push(childEvent);\r\n                                isDeletedRecords = true;\r\n                            }\r\n                            break;\r\n                    }\r\n                };\r\n                for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\r\n                    _loop_2(a, count);\r\n                }\r\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\r\n                _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\r\n                var crudArgs = {\r\n                    requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\r\n                    cancel: false, data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\r\n                    promise: promise, editParams: editParams\r\n                };\r\n                _this.refreshData(crudArgs);\r\n            }\r\n        });\r\n    };\r\n    Crud.prototype.processFollowSeries = function (eventData, action) {\r\n        var _this = this;\r\n        var followData = [];\r\n        if (eventData instanceof Array) {\r\n            for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\r\n                var event_6 = eventData_4[_i];\r\n                followData.push({ occurrence: event_6, parent: this.getParentEvent(event_6) });\r\n            }\r\n        }\r\n        else {\r\n            followData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\r\n        }\r\n        var updateFollowEvents = (eventData instanceof Array) ? eventData : [eventData];\r\n        var args = {\r\n            requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove', cancel: false,\r\n            addedRecords: [], changedRecords: updateFollowEvents, deletedRecords: []\r\n        };\r\n        args.data = followData;\r\n        this.parent.trigger(events.actionBegin, args, function (followArgs) {\r\n            if (!followArgs.cancel) {\r\n                var fields_1 = _this.parent.eventFields;\r\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                var followEvents = followData instanceof Array ? followData : [followData];\r\n                var _loop_3 = function (a, count) {\r\n                    var childEvent = followArgs.changedRecords[a];\r\n                    var parentEvent = followEvents[a].parent;\r\n                    var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\r\n                    var isSpanned = void 0;\r\n                    switch (action) {\r\n                        case 'EditFollowingEvents':\r\n                            _this.processRecurrenceRule(parentEvent, childEvent);\r\n                            isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\r\n                            childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\r\n                            childEvent[fields_1.recurrenceID] = null;\r\n                            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\r\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\r\n                            if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\r\n                                childEvent[fields_1.recurrenceException] = null;\r\n                                if (followData_1.occurrence.length > 0) {\r\n                                    var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\r\n                                    if (rule.indexOf('COUNT') === -1) {\r\n                                        childEvent[fields_1.recurrenceRule] = rule;\r\n                                    }\r\n                                }\r\n                                if (followData_1.follow.length > 0) {\r\n                                    childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\r\n                                    editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\r\n                                }\r\n                                if (isSpanned) {\r\n                                    followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\r\n                                        return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\r\n                                    });\r\n                                }\r\n                                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\r\n                            }\r\n                            break;\r\n                        case 'DeleteFollowingEvents':\r\n                            _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\r\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\r\n                            editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\r\n                            break;\r\n                    }\r\n                };\r\n                for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\r\n                    _loop_3(a, count);\r\n                }\r\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\r\n                _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\r\n                var crudArgs = {\r\n                    requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\r\n                    cancel: false, data: followArgs.changedRecords, promise: promise, editParams: editParams\r\n                };\r\n                _this.refreshData(crudArgs);\r\n            }\r\n        });\r\n    };\r\n    Crud.prototype.processEntireSeries = function (eventData, action) {\r\n        var _this = this;\r\n        var seriesData = [];\r\n        var isDeletedRecords = false;\r\n        if (eventData instanceof Array) {\r\n            for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\r\n                var event_7 = eventData_5[_i];\r\n                seriesData.push(this.getParentEvent(event_7, true));\r\n            }\r\n        }\r\n        else {\r\n            seriesData = this.getParentEvent(eventData, true);\r\n        }\r\n        var updateSeriesEvents = (eventData instanceof Array) ? eventData : [eventData];\r\n        var args = {\r\n            requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove', cancel: false,\r\n            addedRecords: [], changedRecords: updateSeriesEvents, deletedRecords: []\r\n        };\r\n        args.data = seriesData;\r\n        this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\r\n            if (!seriesArgs.cancel) {\r\n                var fields_2 = _this.parent.eventFields;\r\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\r\n                var _loop_4 = function (a, count) {\r\n                    var childEvent = seriesArgs.changedRecords[a];\r\n                    var parentEvent = seriesEvents[a];\r\n                    var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\r\n                    var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\r\n                    switch (action) {\r\n                        case 'EditSeries':\r\n                            if ((childEvent[fields_2.startTime] > parentEvent[fields_2.startTime]) && childEvent[fields_2.recurrenceRule]) {\r\n                                _this.processRecurrenceRule(parentEvent, childEvent);\r\n                            }\r\n                            childEvent[fields_2.id] = parentEvent[fields_2.id];\r\n                            childEvent[fields_2.recurrenceID] = null;\r\n                            childEvent[fields_2.followingID] = null;\r\n                            if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\r\n                                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\r\n                                    return eventObj[fields_2.id] === childEvent[fields_2.id];\r\n                                });\r\n                                if (originalParent.length > 0) {\r\n                                    childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\r\n                                }\r\n                            }\r\n                            else {\r\n                                childEvent[fields_2.recurrenceException] = null;\r\n                                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\r\n                            }\r\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\r\n                            _this.parent.uiStateValues.isIgnoreOccurrence = false;\r\n                            break;\r\n                        case 'DeleteSeries':\r\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\r\n                            isDeletedRecords = true;\r\n                            break;\r\n                    }\r\n                };\r\n                for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\r\n                    _loop_4(a, count);\r\n                }\r\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\r\n                _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\r\n                var crudArgs = {\r\n                    requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\r\n                    cancel: false, data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\r\n                    promise: promise, editParams: editParams\r\n                };\r\n                _this.refreshData(crudArgs);\r\n            }\r\n        });\r\n    };\r\n    Crud.prototype.processDelete = function (eventData) {\r\n        var _this = this;\r\n        var deleteData = [];\r\n        for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\r\n            var eventObj = eventData_6[_i];\r\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\r\n                deleteData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\r\n            }\r\n            else {\r\n                deleteData.push(eventObj);\r\n            }\r\n        }\r\n        var args = {\r\n            requestType: 'eventRemove', cancel: false,\r\n            addedRecords: [], changedRecords: [], deletedRecords: eventData\r\n        };\r\n        args.data = deleteData;\r\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\r\n            if (!deleteArgs.cancel) {\r\n                var fields_3 = _this.parent.eventFields;\r\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                var _loop_5 = function (a, count) {\r\n                    var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\r\n                    if (!isDelete) {\r\n                        var parentEvent_1 = deleteData[a].parent;\r\n                        var isEdited = editParams.changedRecords.filter(function (obj) {\r\n                            return obj[fields_3.id] === parentEvent_1[fields_3.id];\r\n                        });\r\n                        var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\r\n                        if (isEdited.length > 0) {\r\n                            var editedData = isEdited[0];\r\n                            editedData[fields_3.recurrenceException] =\r\n                                _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\r\n                        }\r\n                        else {\r\n                            parentEvent_1[fields_3.recurrenceException] =\r\n                                _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\r\n                        }\r\n                        if (isEdited.length === 0) {\r\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\r\n                        }\r\n                        isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\r\n                    }\r\n                    if (isDelete) {\r\n                        editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\r\n                    }\r\n                };\r\n                for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\r\n                    _loop_5(a, count);\r\n                }\r\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\r\n                var crudArgs = {\r\n                    requestType: 'eventRemoved', cancel: false, data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\r\n                };\r\n                _this.refreshData(crudArgs);\r\n            }\r\n        });\r\n    };\r\n    Crud.prototype.processSave = function (data) {\r\n        var _this = this;\r\n        var eventData = (data instanceof Array) ? data : [data];\r\n        var editData = [];\r\n        for (var _i = 0, eventData_7 = eventData; _i < eventData_7.length; _i++) {\r\n            var eventObj = eventData_7[_i];\r\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\r\n                editData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\r\n            }\r\n            else {\r\n                editData.push(eventObj);\r\n            }\r\n        }\r\n        var args = { requestType: 'eventChange', cancel: false, addedRecords: [], changedRecords: eventData, deletedRecords: [] };\r\n        args.data = editData;\r\n        this.parent.trigger(events.actionBegin, args, function (editArgs) {\r\n            if (!editArgs.cancel) {\r\n                var fields = _this.parent.eventFields;\r\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\r\n                for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\r\n                    var record = _a[_i];\r\n                    if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\r\n                        var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\r\n                        var parentEle = _this.getParentEvent(record);\r\n                        parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ?\r\n                            exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\r\n                        record[fields.id] = _this.parent.getEventMaxID();\r\n                        record[fields.recurrenceException] = exceptionString;\r\n                        editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\r\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\r\n                    }\r\n                    else {\r\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\r\n                    }\r\n                }\r\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\r\n                var crudArgs = { requestType: 'eventChanged', cancel: false, data: editArgs.changedRecords, promise: promise, editParams: editParams };\r\n                _this.refreshData(crudArgs);\r\n            }\r\n        });\r\n    };\r\n    Crud.prototype.getParentEvent = function (event, isParent) {\r\n        if (isParent === void 0) { isParent = false; }\r\n        var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\r\n        if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\r\n            this.parent.eventBase.timezoneConvert(parentEvent);\r\n        }\r\n        return parentEvent;\r\n    };\r\n    Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\r\n        var exDate = getRecurrenceStringFromDate(eventStartTime);\r\n        if (!isNullOrUndefined(exceptionDateList)) {\r\n            if (exceptionDateList.indexOf(exDate) === -1) {\r\n                exceptionDateList = !(isNullOrUndefined(exceptionDateList)) ? exceptionDateList + ',' + exDate : exDate;\r\n            }\r\n        }\r\n        else {\r\n            exceptionDateList = exDate;\r\n        }\r\n        return exceptionDateList;\r\n    };\r\n    Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\r\n        var fields = this.parent.eventFields;\r\n        var recurrenceRule = parentEvent[fields.recurrenceRule];\r\n        var endDate;\r\n        if (followEvent instanceof Date) {\r\n            endDate = new Date(+followEvent);\r\n        }\r\n        else {\r\n            endDate = new Date(+followEvent[fields.startTime]);\r\n            var newRecurrenceRule = followEvent[fields.recurrenceRule];\r\n            var startDate = parentEvent[fields.startTime];\r\n            var ruleException = (this.parent.currentAction === 'DeleteFollowingEvents') ? followEvent[fields.recurrenceException] : null;\r\n            var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\r\n            var untilDate = new Date(dateCollection.slice(-1)[0]);\r\n            untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\r\n            endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\r\n            followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\r\n        }\r\n        parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\r\n    };\r\n    Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\r\n        var splitRule = recurrenceRule.split(';');\r\n        var updatedRule = '';\r\n        for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\r\n            var rule = splitRule_1[_i];\r\n            if (rule !== '') {\r\n                var ruleKey = rule.split('=')[0];\r\n                var ruleValue = rule.split('=')[1];\r\n                if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\r\n                    ruleValue = getRecurrenceStringFromDate(untilDate);\r\n                    rule = rule.replace(rule, 'UNTIL=' + ruleValue);\r\n                }\r\n                updatedRule += rule + ';';\r\n            }\r\n        }\r\n        if (isParent && updatedRule.indexOf('UNTIL') === -1) {\r\n            updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\r\n        }\r\n        return updatedRule;\r\n    };\r\n    Crud.prototype.isBlockEvent = function (eventData) {\r\n        var eventCollection = (eventData instanceof Array) ? eventData : [eventData];\r\n        var value = false;\r\n        for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\r\n            var event_8 = eventCollection_1[_i];\r\n            value = event_8[this.parent.eventFields.isBlock] || false;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * To destroy the crud module.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Crud.prototype.destroy = function () {\r\n        this.crudObj = null;\r\n        this.parent = null;\r\n    };\r\n    return Crud;\r\n}());\r\nexport { Crud };\r\n"]},"metadata":{},"sourceType":"module"}