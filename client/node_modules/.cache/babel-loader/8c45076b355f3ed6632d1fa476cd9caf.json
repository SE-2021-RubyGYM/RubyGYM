{"ast":null,"code":"/**\r\n * Copyright 2014-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEmptyComponent\r\n */\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar assign = require('./Object.assign');\n\nvar placeholderElement;\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function (component) {\n    placeholderElement = ReactElement.createElement(component);\n  }\n};\n\nfunction registerNullComponentID() {\n  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);\n}\n\nvar ReactEmptyComponent = function (instantiate) {\n  this._currentElement = null;\n  this._rootNodeID = null;\n  this._renderedComponent = instantiate(placeholderElement);\n};\n\nassign(ReactEmptyComponent.prototype, {\n  construct: function (element) {},\n  mountComponent: function (rootID, transaction, context) {\n    transaction.getReactMountReady().enqueue(registerNullComponentID, this);\n    this._rootNodeID = rootID;\n    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\n  },\n  receiveComponent: function () {},\n  unmountComponent: function (rootID, transaction, context) {\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\n    this._rootNodeID = null;\n    this._renderedComponent = null;\n  }\n});\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\nmodule.exports = ReactEmptyComponent;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/ReactEmptyComponent.js"],"names":["ReactElement","require","ReactEmptyComponentRegistry","ReactReconciler","assign","placeholderElement","ReactEmptyComponentInjection","injectEmptyComponent","component","createElement","registerNullComponentID","_rootNodeID","ReactEmptyComponent","instantiate","_currentElement","_renderedComponent","prototype","construct","element","mountComponent","rootID","transaction","context","getReactMountReady","enqueue","receiveComponent","unmountComponent","deregisterNullComponentID","injection","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,2BAA2B,GAAGD,OAAO,CAAC,+BAAD,CAAzC;;AACA,IAAIE,eAAe,GAAGF,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAApB;;AAEA,IAAII,kBAAJ;AAEA,IAAIC,4BAA4B,GAAG;AACjCC,EAAAA,oBAAoB,EAAE,UAAUC,SAAV,EAAqB;AACzCH,IAAAA,kBAAkB,GAAGL,YAAY,CAACS,aAAb,CAA2BD,SAA3B,CAArB;AACD;AAHgC,CAAnC;;AAMA,SAASE,uBAAT,GAAmC;AACjCR,EAAAA,2BAA2B,CAACQ,uBAA5B,CAAoD,KAAKC,WAAzD;AACD;;AAED,IAAIC,mBAAmB,GAAG,UAAUC,WAAV,EAAuB;AAC/C,OAAKC,eAAL,GAAuB,IAAvB;AACA,OAAKH,WAAL,GAAmB,IAAnB;AACA,OAAKI,kBAAL,GAA0BF,WAAW,CAACR,kBAAD,CAArC;AACD,CAJD;;AAKAD,MAAM,CAACQ,mBAAmB,CAACI,SAArB,EAAgC;AACpCC,EAAAA,SAAS,EAAE,UAAUC,OAAV,EAAmB,CAAE,CADI;AAEpCC,EAAAA,cAAc,EAAE,UAAUC,MAAV,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwC;AACtDD,IAAAA,WAAW,CAACE,kBAAZ,GAAiCC,OAAjC,CAAyCd,uBAAzC,EAAkE,IAAlE;AACA,SAAKC,WAAL,GAAmBS,MAAnB;AACA,WAAOjB,eAAe,CAACgB,cAAhB,CAA+B,KAAKJ,kBAApC,EAAwDK,MAAxD,EAAgEC,WAAhE,EAA6EC,OAA7E,CAAP;AACD,GANmC;AAOpCG,EAAAA,gBAAgB,EAAE,YAAY,CAAE,CAPI;AAQpCC,EAAAA,gBAAgB,EAAE,UAAUN,MAAV,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwC;AACxDnB,IAAAA,eAAe,CAACuB,gBAAhB,CAAiC,KAAKX,kBAAtC;AACAb,IAAAA,2BAA2B,CAACyB,yBAA5B,CAAsD,KAAKhB,WAA3D;AACA,SAAKA,WAAL,GAAmB,IAAnB;AACA,SAAKI,kBAAL,GAA0B,IAA1B;AACD;AAbmC,CAAhC,CAAN;AAgBAH,mBAAmB,CAACgB,SAApB,GAAgCtB,4BAAhC;AAEAuB,MAAM,CAACC,OAAP,GAAiBlB,mBAAjB","sourcesContent":["/**\r\n * Copyright 2014-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEmptyComponent\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactElement = require('./ReactElement');\r\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\r\nvar ReactReconciler = require('./ReactReconciler');\r\n\r\nvar assign = require('./Object.assign');\r\n\r\nvar placeholderElement;\r\n\r\nvar ReactEmptyComponentInjection = {\r\n  injectEmptyComponent: function (component) {\r\n    placeholderElement = ReactElement.createElement(component);\r\n  }\r\n};\r\n\r\nfunction registerNullComponentID() {\r\n  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);\r\n}\r\n\r\nvar ReactEmptyComponent = function (instantiate) {\r\n  this._currentElement = null;\r\n  this._rootNodeID = null;\r\n  this._renderedComponent = instantiate(placeholderElement);\r\n};\r\nassign(ReactEmptyComponent.prototype, {\r\n  construct: function (element) {},\r\n  mountComponent: function (rootID, transaction, context) {\r\n    transaction.getReactMountReady().enqueue(registerNullComponentID, this);\r\n    this._rootNodeID = rootID;\r\n    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\r\n  },\r\n  receiveComponent: function () {},\r\n  unmountComponent: function (rootID, transaction, context) {\r\n    ReactReconciler.unmountComponent(this._renderedComponent);\r\n    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\r\n    this._rootNodeID = null;\r\n    this._renderedComponent = null;\r\n  }\r\n});\r\n\r\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\r\n\r\nmodule.exports = ReactEmptyComponent;"]},"metadata":{},"sourceType":"script"}