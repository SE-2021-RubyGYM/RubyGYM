{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEventListener\r\n * @typechecks static-only\r\n */\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar PooledClass = require('./PooledClass');\n\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar ReactMount = require('./ReactMount');\n\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\n\nvar getEventTarget = require('./getEventTarget');\n\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n/**\r\n * Finds the parent React component of `node`.\r\n *\r\n * @param {*} node\r\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\r\n *                           is not nested.\r\n */\n\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n} // Used to store ancestor hierarchy in top level callback\n\n\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n  void handleTopLevelWithPath; // temporarily unused\n\n  handleTopLevelWithoutPath(bookKeeping);\n} // Legacy browsers don't have a path attribute on native events\n\n\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window; // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n\n  var ancestor = topLevelTarget;\n\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n} // New browsers have a path attribute on native events\n\n\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    } // TODO: slow\n\n\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget); // Jump to the root of this React render tree\n\n\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\r\n   * Traps top-level events by using event bubbling.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\r\n   * @param {object} handle Element on which to attach listener.\r\n   * @return {?object} An object with a remove function which will forcefully\r\n   *                  remove the listener.\r\n   * @internal\r\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n\n    if (!element) {\n      return null;\n    }\n\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\r\n   * Traps a top-level event by using event capturing.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\r\n   * @param {object} handle Element on which to attach listener.\r\n   * @return {?object} An object with a remove function which will forcefully\r\n   *                  remove the listener.\r\n   * @internal\r\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n\n    if (!element) {\n      return null;\n    }\n\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\nmodule.exports = ReactEventListener;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/ReactEventListener.js"],"names":["EventListener","require","ExecutionEnvironment","PooledClass","ReactInstanceHandles","ReactMount","ReactUpdates","assign","getEventTarget","getUnboundedScrollPosition","DOCUMENT_FRAGMENT_NODE_TYPE","findParent","node","nodeID","getID","rootID","getReactRootIDFromNodeID","container","findReactContainerForID","parent","getFirstReactDOM","TopLevelCallbackBookKeeping","topLevelType","nativeEvent","ancestors","prototype","destructor","length","addPoolingTo","twoArgumentPooler","handleTopLevelImpl","bookKeeping","handleTopLevelWithPath","handleTopLevelWithoutPath","topLevelTarget","window","ancestor","push","i","topLevelTargetID","ReactEventListener","_handleTopLevel","path","currentNativeTarget","eventsFired","currentPathElement","nodeType","reactParent","currentPathElementID","newRootID","scrollValueMonitor","cb","scrollPosition","_enabled","WINDOW_HANDLE","canUseDOM","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","trapBubbledEvent","handlerBaseName","handle","element","listen","dispatchEvent","bind","trapCapturedEvent","capture","monitorScrollValue","refresh","callback","getPooled","batchedUpdates","release","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEventListener\r\n * @typechecks static-only\r\n */\r\n\r\n'use strict';\r\n\r\nvar EventListener = require('fbjs/lib/EventListener');\r\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\r\nvar PooledClass = require('./PooledClass');\r\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\r\nvar ReactMount = require('./ReactMount');\r\nvar ReactUpdates = require('./ReactUpdates');\r\n\r\nvar assign = require('./Object.assign');\r\nvar getEventTarget = require('./getEventTarget');\r\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\r\n\r\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\r\n\r\n/**\r\n * Finds the parent React component of `node`.\r\n *\r\n * @param {*} node\r\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\r\n *                           is not nested.\r\n */\r\nfunction findParent(node) {\r\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\r\n  // traversal, but caching is difficult to do correctly without using a\r\n  // mutation observer to listen for all DOM changes.\r\n  var nodeID = ReactMount.getID(node);\r\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\r\n  var container = ReactMount.findReactContainerForID(rootID);\r\n  var parent = ReactMount.getFirstReactDOM(container);\r\n  return parent;\r\n}\r\n\r\n// Used to store ancestor hierarchy in top level callback\r\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\r\n  this.topLevelType = topLevelType;\r\n  this.nativeEvent = nativeEvent;\r\n  this.ancestors = [];\r\n}\r\nassign(TopLevelCallbackBookKeeping.prototype, {\r\n  destructor: function () {\r\n    this.topLevelType = null;\r\n    this.nativeEvent = null;\r\n    this.ancestors.length = 0;\r\n  }\r\n});\r\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\r\n\r\nfunction handleTopLevelImpl(bookKeeping) {\r\n  // TODO: Re-enable event.path handling\r\n  //\r\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\r\n  //   // New browsers have a path attribute on native events\r\n  //   handleTopLevelWithPath(bookKeeping);\r\n  // } else {\r\n  //   // Legacy browsers don't have a path attribute on native events\r\n  //   handleTopLevelWithoutPath(bookKeeping);\r\n  // }\r\n\r\n  void handleTopLevelWithPath; // temporarily unused\r\n  handleTopLevelWithoutPath(bookKeeping);\r\n}\r\n\r\n// Legacy browsers don't have a path attribute on native events\r\nfunction handleTopLevelWithoutPath(bookKeeping) {\r\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\r\n\r\n  // Loop through the hierarchy, in case there's any nested components.\r\n  // It's important that we build the array of ancestors before calling any\r\n  // event handlers, because event handlers can modify the DOM, leading to\r\n  // inconsistencies with ReactMount's node cache. See #1105.\r\n  var ancestor = topLevelTarget;\r\n  while (ancestor) {\r\n    bookKeeping.ancestors.push(ancestor);\r\n    ancestor = findParent(ancestor);\r\n  }\r\n\r\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\r\n    topLevelTarget = bookKeeping.ancestors[i];\r\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\r\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\r\n  }\r\n}\r\n\r\n// New browsers have a path attribute on native events\r\nfunction handleTopLevelWithPath(bookKeeping) {\r\n  var path = bookKeeping.nativeEvent.path;\r\n  var currentNativeTarget = path[0];\r\n  var eventsFired = 0;\r\n  for (var i = 0; i < path.length; i++) {\r\n    var currentPathElement = path[i];\r\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\r\n      currentNativeTarget = path[i + 1];\r\n    }\r\n    // TODO: slow\r\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\r\n    if (reactParent === currentPathElement) {\r\n      var currentPathElementID = ReactMount.getID(currentPathElement);\r\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\r\n      bookKeeping.ancestors.push(currentPathElement);\r\n\r\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\r\n      eventsFired++;\r\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\r\n\r\n      // Jump to the root of this React render tree\r\n      while (currentPathElementID !== newRootID) {\r\n        i++;\r\n        currentPathElement = path[i];\r\n        currentPathElementID = ReactMount.getID(currentPathElement);\r\n      }\r\n    }\r\n  }\r\n  if (eventsFired === 0) {\r\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\r\n  }\r\n}\r\n\r\nfunction scrollValueMonitor(cb) {\r\n  var scrollPosition = getUnboundedScrollPosition(window);\r\n  cb(scrollPosition);\r\n}\r\n\r\nvar ReactEventListener = {\r\n  _enabled: true,\r\n  _handleTopLevel: null,\r\n\r\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\r\n\r\n  setHandleTopLevel: function (handleTopLevel) {\r\n    ReactEventListener._handleTopLevel = handleTopLevel;\r\n  },\r\n\r\n  setEnabled: function (enabled) {\r\n    ReactEventListener._enabled = !!enabled;\r\n  },\r\n\r\n  isEnabled: function () {\r\n    return ReactEventListener._enabled;\r\n  },\r\n\r\n  /**\r\n   * Traps top-level events by using event bubbling.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\r\n   * @param {object} handle Element on which to attach listener.\r\n   * @return {?object} An object with a remove function which will forcefully\r\n   *                  remove the listener.\r\n   * @internal\r\n   */\r\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\r\n    var element = handle;\r\n    if (!element) {\r\n      return null;\r\n    }\r\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\r\n  },\r\n\r\n  /**\r\n   * Traps a top-level event by using event capturing.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\r\n   * @param {object} handle Element on which to attach listener.\r\n   * @return {?object} An object with a remove function which will forcefully\r\n   *                  remove the listener.\r\n   * @internal\r\n   */\r\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\r\n    var element = handle;\r\n    if (!element) {\r\n      return null;\r\n    }\r\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\r\n  },\r\n\r\n  monitorScrollValue: function (refresh) {\r\n    var callback = scrollValueMonitor.bind(null, refresh);\r\n    EventListener.listen(window, 'scroll', callback);\r\n  },\r\n\r\n  dispatchEvent: function (topLevelType, nativeEvent) {\r\n    if (!ReactEventListener._enabled) {\r\n      return;\r\n    }\r\n\r\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\r\n    try {\r\n      // Event queue being processed in the same cycle allows\r\n      // `preventDefault`.\r\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\r\n    } finally {\r\n      TopLevelCallbackBookKeeping.release(bookKeeping);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = ReactEventListener;"]},"metadata":{},"sourceType":"script"}