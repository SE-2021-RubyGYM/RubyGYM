{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule toArray\r\n * @typechecks\r\n */\n'use strict';\n\nvar invariant = require('./invariant');\n/**\r\n * Convert array-like objects to arrays.\r\n *\r\n * This API assumes the caller knows the contents of the data type. For less\r\n * well defined inputs use createArrayFromMixed.\r\n *\r\n * @param {object|function|filelist} obj\r\n * @return {array}\r\n */\n\n\nfunction toArray(obj) {\n  var length = obj.length; // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined; // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {// IE < 9 does not support Array#slice on collections objects\n    }\n  } // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n\n\n  var ret = Array(length);\n\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n\n  return ret;\n}\n\nmodule.exports = toArray;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/fbjs/lib/toArray.js"],"names":["invariant","require","toArray","obj","length","Array","isArray","process","env","NODE_ENV","undefined","hasOwnProperty","prototype","slice","call","e","ret","ii","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAjB,CADoB,CAGpB;AACA;;AACA,IAAE,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAD,KAAwB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAAlE,CAAF,IAAmFI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,SAAS,CAAC,KAAD,EAAQ,qCAAR,CAAjD,GAAkGA,SAAS,CAAC,KAAD,CAA9L,GAAwMU,SAAxM;AAEA,IAAE,OAAON,MAAP,KAAkB,QAApB,IAAgCG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,SAAS,CAAC,KAAD,EAAQ,yCAAR,CAAjD,GAAsGA,SAAS,CAAC,KAAD,CAA/I,GAAyJU,SAAzJ;AAEA,IAAEN,MAAM,KAAK,CAAX,IAAgBA,MAAM,GAAG,CAAT,IAAcD,GAAhC,IAAuCI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,SAAS,CAAC,KAAD,EAAQ,8CAAR,CAAjD,GAA2GA,SAAS,CAAC,KAAD,CAA3J,GAAqKU,SAArK,CAToB,CAWpB;AACA;AACA;;AACA,MAAIP,GAAG,CAACQ,cAAR,EAAwB;AACtB,QAAI;AACF,aAAON,KAAK,CAACO,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BX,GAA3B,CAAP;AACD,KAFD,CAEE,OAAOY,CAAP,EAAU,CACV;AACD;AACF,GApBmB,CAsBpB;AACA;;;AACA,MAAIC,GAAG,GAAGX,KAAK,CAACD,MAAD,CAAf;;AACA,OAAK,IAAIa,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGb,MAAtB,EAA8Ba,EAAE,EAAhC,EAAoC;AAClCD,IAAAA,GAAG,CAACC,EAAD,CAAH,GAAUd,GAAG,CAACc,EAAD,CAAb;AACD;;AACD,SAAOD,GAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBjB,OAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule toArray\r\n * @typechecks\r\n */\r\n\r\n'use strict';\r\n\r\nvar invariant = require('./invariant');\r\n\r\n/**\r\n * Convert array-like objects to arrays.\r\n *\r\n * This API assumes the caller knows the contents of the data type. For less\r\n * well defined inputs use createArrayFromMixed.\r\n *\r\n * @param {object|function|filelist} obj\r\n * @return {array}\r\n */\r\nfunction toArray(obj) {\r\n  var length = obj.length;\r\n\r\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\r\n  // old versions of Safari).\r\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\r\n\r\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\r\n\r\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\r\n\r\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\r\n  // without method will throw during the slice call and skip straight to the\r\n  // fallback.\r\n  if (obj.hasOwnProperty) {\r\n    try {\r\n      return Array.prototype.slice.call(obj);\r\n    } catch (e) {\r\n      // IE < 9 does not support Array#slice on collections objects\r\n    }\r\n  }\r\n\r\n  // Fall back to copying key by key. This assumes all keys have a value,\r\n  // so will not preserve sparsely populated inputs.\r\n  var ret = Array(length);\r\n  for (var ii = 0; ii < length; ii++) {\r\n    ret[ii] = obj[ii];\r\n  }\r\n  return ret;\r\n}\r\n\r\nmodule.exports = toArray;"]},"metadata":{},"sourceType":"script"}