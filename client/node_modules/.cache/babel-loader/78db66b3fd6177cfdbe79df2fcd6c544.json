{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/imageinsertui\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport ImageInsertPanelView from './ui/imageinsertpanelview';\nimport { prepareIntegrations } from './utils';\n/**\n * The image insert dropdown plugin.\n *\n * For a detailed overview, check the {@glink features/images/image-upload/image-upload Image upload feature}\n * and {@glink features/images/image-upload/images-inserting#inserting-images-via-source-url Insert images via source URL} documentation.\n *\n * Adds the `'insertImage'` dropdown to the {@link module:ui/componentfactory~ComponentFactory UI component factory}\n * and also the `imageInsert` dropdown as an alias for backward compatibility.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class ImageInsertUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'ImageInsertUI';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n\n    const componentCreator = locale => {\n      return this._createDropdownView(locale);\n    }; // Register `insertImage` dropdown and add `imageInsert` dropdown as an alias for backward compatibility.\n\n\n    editor.ui.componentFactory.add('insertImage', componentCreator);\n    editor.ui.componentFactory.add('imageInsert', componentCreator);\n  }\n  /**\n   * Creates the dropdown view.\n   *\n   * @param {module:utils/locale~Locale} locale The localization services instance.\n   *\n   * @private\n   * @returns {module:ui/dropdown/dropdownview~DropdownView}\n   */\n\n\n  _createDropdownView(locale) {\n    const editor = this.editor;\n    const imageInsertView = new ImageInsertPanelView(locale, prepareIntegrations(editor));\n    const command = editor.commands.get('uploadImage');\n    const dropdownView = imageInsertView.dropdownView;\n    const splitButtonView = dropdownView.buttonView;\n    splitButtonView.actionView = editor.ui.componentFactory.create('uploadImage'); // After we replaced action button with `uploadImage` component,\n    // we have lost a proper styling and some minor visual quirks have appeared.\n    // Brining back original split button classes helps fix the button styling\n    // See https://github.com/ckeditor/ckeditor5/issues/7986.\n\n    splitButtonView.actionView.extendTemplate({\n      attributes: {\n        class: 'ck ck-button ck-splitbutton__action'\n      }\n    });\n    return this._setUpDropdown(dropdownView, imageInsertView, command);\n  }\n  /**\n   * Sets up the dropdown view.\n   *\n   * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdownView.\n   * @param {module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView} imageInsertView An imageInsertView.\n   * @param {module:core/command~Command} command An insertImage command\n   *\n   * @private\n   * @returns {module:ui/dropdown/dropdownview~DropdownView}\n   */\n\n\n  _setUpDropdown(dropdownView, imageInsertView, command) {\n    const editor = this.editor;\n    const t = editor.t;\n    const insertButtonView = imageInsertView.insertButtonView;\n    const insertImageViaUrlForm = imageInsertView.getIntegration('insertImageViaUrl');\n    const panelView = dropdownView.panelView;\n    const imageUtils = this.editor.plugins.get('ImageUtils');\n    dropdownView.bind('isEnabled').to(command); // Defer the children injection to improve initial performance.\n    // See https://github.com/ckeditor/ckeditor5/pull/8019#discussion_r484069652.\n\n    dropdownView.buttonView.once('open', () => {\n      panelView.children.add(imageInsertView);\n    });\n    dropdownView.on('change:isOpen', () => {\n      const selectedElement = editor.model.document.selection.getSelectedElement();\n\n      if (dropdownView.isOpen) {\n        imageInsertView.focus();\n\n        if (imageUtils.isImage(selectedElement)) {\n          imageInsertView.imageURLInputValue = selectedElement.getAttribute('src');\n          insertButtonView.label = t('Update');\n          insertImageViaUrlForm.label = t('Update image URL');\n        } else {\n          imageInsertView.imageURLInputValue = '';\n          insertButtonView.label = t('Insert');\n          insertImageViaUrlForm.label = t('Insert image via URL');\n        }\n      } // Note: Use the low priority to make sure the following listener starts working after the\n      // default action of the drop-down is executed (i.e. the panel showed up). Otherwise, the\n      // invisible form/input cannot be focused/selected.\n\n    }, {\n      priority: 'low'\n    });\n    imageInsertView.delegate('submit', 'cancel').to(dropdownView);\n    this.delegate('cancel').to(dropdownView);\n    dropdownView.on('submit', () => {\n      closePanel();\n      onSubmit();\n    });\n    dropdownView.on('cancel', () => {\n      closePanel();\n    });\n\n    function onSubmit() {\n      const selectedElement = editor.model.document.selection.getSelectedElement();\n\n      if (imageUtils.isImage(selectedElement)) {\n        editor.model.change(writer => {\n          writer.setAttribute('src', imageInsertView.imageURLInputValue, selectedElement);\n          writer.removeAttribute('srcset', selectedElement);\n          writer.removeAttribute('sizes', selectedElement);\n        });\n      } else {\n        editor.execute('insertImage', {\n          source: imageInsertView.imageURLInputValue\n        });\n      }\n    }\n\n    function closePanel() {\n      editor.editing.view.focus();\n      dropdownView.isOpen = false;\n    }\n\n    return dropdownView;\n  }\n\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-image/src/imageinsert/imageinsertui.js"],"names":["Plugin","ImageInsertPanelView","prepareIntegrations","ImageInsertUI","pluginName","init","editor","componentCreator","locale","_createDropdownView","ui","componentFactory","add","imageInsertView","command","commands","get","dropdownView","splitButtonView","buttonView","actionView","create","extendTemplate","attributes","class","_setUpDropdown","t","insertButtonView","insertImageViaUrlForm","getIntegration","panelView","imageUtils","plugins","bind","to","once","children","on","selectedElement","model","document","selection","getSelectedElement","isOpen","focus","isImage","imageURLInputValue","getAttribute","label","priority","delegate","closePanel","onSubmit","change","writer","setAttribute","removeAttribute","execute","source","editing","view"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/imageinsertui\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport ImageInsertPanelView from './ui/imageinsertpanelview';\nimport { prepareIntegrations } from './utils';\n\n/**\n * The image insert dropdown plugin.\n *\n * For a detailed overview, check the {@glink features/images/image-upload/image-upload Image upload feature}\n * and {@glink features/images/image-upload/images-inserting#inserting-images-via-source-url Insert images via source URL} documentation.\n *\n * Adds the `'insertImage'` dropdown to the {@link module:ui/componentfactory~ComponentFactory UI component factory}\n * and also the `imageInsert` dropdown as an alias for backward compatibility.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageInsertUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageInsertUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst componentCreator = locale => {\n\t\t\treturn this._createDropdownView( locale );\n\t\t};\n\n\t\t// Register `insertImage` dropdown and add `imageInsert` dropdown as an alias for backward compatibility.\n\t\teditor.ui.componentFactory.add( 'insertImage', componentCreator );\n\t\teditor.ui.componentFactory.add( 'imageInsert', componentCreator );\n\t}\n\n\t/**\n\t * Creates the dropdown view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t *\n\t * @private\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_createDropdownView( locale ) {\n\t\tconst editor = this.editor;\n\t\tconst imageInsertView = new ImageInsertPanelView( locale, prepareIntegrations( editor ) );\n\t\tconst command = editor.commands.get( 'uploadImage' );\n\n\t\tconst dropdownView = imageInsertView.dropdownView;\n\t\tconst splitButtonView = dropdownView.buttonView;\n\n\t\tsplitButtonView.actionView = editor.ui.componentFactory.create( 'uploadImage' );\n\t\t// After we replaced action button with `uploadImage` component,\n\t\t// we have lost a proper styling and some minor visual quirks have appeared.\n\t\t// Brining back original split button classes helps fix the button styling\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/7986.\n\t\tsplitButtonView.actionView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck ck-button ck-splitbutton__action'\n\t\t\t}\n\t\t} );\n\n\t\treturn this._setUpDropdown( dropdownView, imageInsertView, command );\n\t}\n\n\t/**\n\t * Sets up the dropdown view.\n\t *\n\t * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdownView.\n\t * @param {module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView} imageInsertView An imageInsertView.\n\t * @param {module:core/command~Command} command An insertImage command\n\t *\n\t * @private\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_setUpDropdown( dropdownView, imageInsertView, command ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst insertButtonView = imageInsertView.insertButtonView;\n\t\tconst insertImageViaUrlForm = imageInsertView.getIntegration( 'insertImageViaUrl' );\n\t\tconst panelView = dropdownView.panelView;\n\t\tconst imageUtils = this.editor.plugins.get( 'ImageUtils' );\n\n\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t// Defer the children injection to improve initial performance.\n\t\t// See https://github.com/ckeditor/ckeditor5/pull/8019#discussion_r484069652.\n\t\tdropdownView.buttonView.once( 'open', () => {\n\t\t\tpanelView.children.add( imageInsertView );\n\t\t} );\n\n\t\tdropdownView.on( 'change:isOpen', () => {\n\t\t\tconst selectedElement = editor.model.document.selection.getSelectedElement();\n\n\t\t\tif ( dropdownView.isOpen ) {\n\t\t\t\timageInsertView.focus();\n\n\t\t\t\tif ( imageUtils.isImage( selectedElement ) ) {\n\t\t\t\t\timageInsertView.imageURLInputValue = selectedElement.getAttribute( 'src' );\n\t\t\t\t\tinsertButtonView.label = t( 'Update' );\n\t\t\t\t\tinsertImageViaUrlForm.label = t( 'Update image URL' );\n\t\t\t\t} else {\n\t\t\t\t\timageInsertView.imageURLInputValue = '';\n\t\t\t\t\tinsertButtonView.label = t( 'Insert' );\n\t\t\t\t\tinsertImageViaUrlForm.label = t( 'Insert image via URL' );\n\t\t\t\t}\n\t\t\t}\n\t\t// Note: Use the low priority to make sure the following listener starts working after the\n\t\t// default action of the drop-down is executed (i.e. the panel showed up). Otherwise, the\n\t\t// invisible form/input cannot be focused/selected.\n\t\t}, { priority: 'low' } );\n\n\t\timageInsertView.delegate( 'submit', 'cancel' ).to( dropdownView );\n\t\tthis.delegate( 'cancel' ).to( dropdownView );\n\n\t\tdropdownView.on( 'submit', () => {\n\t\t\tclosePanel();\n\t\t\tonSubmit();\n\t\t} );\n\n\t\tdropdownView.on( 'cancel', () => {\n\t\t\tclosePanel();\n\t\t} );\n\n\t\tfunction onSubmit() {\n\t\t\tconst selectedElement = editor.model.document.selection.getSelectedElement();\n\n\t\t\tif ( imageUtils.isImage( selectedElement ) ) {\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\twriter.setAttribute( 'src', imageInsertView.imageURLInputValue, selectedElement );\n\t\t\t\t\twriter.removeAttribute( 'srcset', selectedElement );\n\t\t\t\t\twriter.removeAttribute( 'sizes', selectedElement );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\teditor.execute( 'insertImage', { source: imageInsertView.imageURLInputValue } );\n\t\t\t}\n\t\t}\n\n\t\tfunction closePanel() {\n\t\t\teditor.editing.view.focus();\n\t\t\tdropdownView.isOpen = false;\n\t\t}\n\n\t\treturn dropdownView;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}