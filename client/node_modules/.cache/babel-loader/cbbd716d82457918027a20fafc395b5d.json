{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\nexports[\"default\"] = useSelection;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // TODO: warning if use ajax!!!\n\n\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return (0, _extends2[\"default\"])({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/antd/lib/table/hooks/useSelection.js"],"names":["_interopRequireDefault","require","_typeof3","Object","defineProperty","exports","value","SELECTION_NONE","SELECTION_INVERT","SELECTION_ALL","useSelection","_toArray2","_defineProperty2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","React","_interopRequireWildcard","_DownOutlined","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","useCallback","keys","newCache","current","useEffect","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabledData","checked","_ref2","allDisabled","length","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","INTERNAL_COL_DEFINE","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\r\nexports[\"default\"] = useSelection;\r\n\r\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\r\n\r\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\r\n\r\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\r\n\r\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\r\n\r\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\r\n\r\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\r\n\r\nvar React = _interopRequireWildcard(require(\"react\"));\r\n\r\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\r\n\r\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\r\n\r\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\r\n\r\nvar _util = require(\"rc-tree/lib/util\");\r\n\r\nvar _rcTable = require(\"rc-table\");\r\n\r\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\r\n\r\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\r\n\r\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\r\n\r\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\r\n\r\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\r\n\r\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\n// TODO: warning if use ajax!!!\r\nvar SELECTION_ALL = 'SELECT_ALL';\r\nexports.SELECTION_ALL = SELECTION_ALL;\r\nvar SELECTION_INVERT = 'SELECT_INVERT';\r\nexports.SELECTION_INVERT = SELECTION_INVERT;\r\nvar SELECTION_NONE = 'SELECT_NONE';\r\nexports.SELECTION_NONE = SELECTION_NONE;\r\n\r\nfunction getFixedType(column) {\r\n  return column && column.fixed;\r\n}\r\n\r\nfunction flattenData(data, childrenColumnName) {\r\n  var list = [];\r\n  (data || []).forEach(function (record) {\r\n    list.push(record);\r\n\r\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\r\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\r\n    }\r\n  });\r\n  return list;\r\n}\r\n\r\nfunction useSelection(rowSelection, config) {\r\n  var _ref = rowSelection || {},\r\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\r\n      selectedRowKeys = _ref.selectedRowKeys,\r\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\r\n      getCheckboxProps = _ref.getCheckboxProps,\r\n      onSelectionChange = _ref.onChange,\r\n      onSelect = _ref.onSelect,\r\n      onSelectAll = _ref.onSelectAll,\r\n      onSelectInvert = _ref.onSelectInvert,\r\n      onSelectNone = _ref.onSelectNone,\r\n      onSelectMultiple = _ref.onSelectMultiple,\r\n      selectionColWidth = _ref.columnWidth,\r\n      selectionType = _ref.type,\r\n      selections = _ref.selections,\r\n      fixed = _ref.fixed,\r\n      customizeRenderCell = _ref.renderCell,\r\n      hideSelectAll = _ref.hideSelectAll,\r\n      _ref$checkStrictly = _ref.checkStrictly,\r\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\r\n\r\n  var prefixCls = config.prefixCls,\r\n      data = config.data,\r\n      pageData = config.pageData,\r\n      getRecordByKey = config.getRecordByKey,\r\n      getRowKey = config.getRowKey,\r\n      expandType = config.expandType,\r\n      childrenColumnName = config.childrenColumnName,\r\n      tableLocale = config.locale,\r\n      expandIconColumnIndex = config.expandIconColumnIndex,\r\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\r\n\r\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\r\n    value: selectedRowKeys\r\n  }),\r\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\r\n      mergedSelectedKeys = _useMergedState2[0],\r\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\r\n\r\n\r\n  var preserveRecordsRef = React.useRef(new Map());\r\n  var updatePreserveRecordsCache = (0, React.useCallback)(function (keys) {\r\n    if (preserveSelectedRowKeys) {\r\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\r\n\r\n      keys.forEach(function (key) {\r\n        var record = getRecordByKey(key);\r\n\r\n        if (!record && preserveRecordsRef.current.has(key)) {\r\n          record = preserveRecordsRef.current.get(key);\r\n        }\r\n\r\n        newCache.set(key, record);\r\n      }); // Refresh to new cache\r\n\r\n      preserveRecordsRef.current = newCache;\r\n    }\r\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\r\n\r\n  React.useEffect(function () {\r\n    updatePreserveRecordsCache(mergedSelectedKeys);\r\n  }, [mergedSelectedKeys]);\r\n\r\n  var _useMemo = (0, React.useMemo)(function () {\r\n    return checkStrictly ? {\r\n      keyEntities: null\r\n    } : (0, _treeUtil.convertDataToEntities)(data, {\r\n      externalGetKey: getRowKey,\r\n      childrenPropName: childrenColumnName\r\n    });\r\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\r\n      keyEntities = _useMemo.keyEntities; // Get flatten data\r\n\r\n\r\n  var flattedData = (0, React.useMemo)(function () {\r\n    return flattenData(pageData, childrenColumnName);\r\n  }, [pageData, childrenColumnName]); // Get all checkbox props\r\n\r\n  var checkboxPropsMap = (0, React.useMemo)(function () {\r\n    var map = new Map();\r\n    flattedData.forEach(function (record, index) {\r\n      var key = getRowKey(record, index);\r\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\r\n      map.set(key, checkboxProps);\r\n\r\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\r\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\r\n      }\r\n    });\r\n    return map;\r\n  }, [flattedData, getRowKey, getCheckboxProps]);\r\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\r\n    var _a;\r\n\r\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\r\n  }, [checkboxPropsMap, getRowKey]);\r\n\r\n  var _useMemo2 = (0, React.useMemo)(function () {\r\n    if (checkStrictly) {\r\n      return [mergedSelectedKeys || [], []];\r\n    }\r\n\r\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\r\n        checkedKeys = _conductCheck.checkedKeys,\r\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\r\n\r\n    return [checkedKeys || [], halfCheckedKeys];\r\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\r\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\r\n      derivedSelectedKeys = _useMemo3[0],\r\n      derivedHalfSelectedKeys = _useMemo3[1];\r\n\r\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\r\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\r\n    return new Set(keys);\r\n  }, [derivedSelectedKeys, selectionType]);\r\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\r\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\r\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\r\n\r\n  var _useState = (0, React.useState)(null),\r\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\r\n      lastSelectedKey = _useState2[0],\r\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\r\n\r\n\r\n  React.useEffect(function () {\r\n    if (!rowSelection) {\r\n      setMergedSelectedKeys([]);\r\n    }\r\n  }, [!!rowSelection]);\r\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\r\n    var availableKeys;\r\n    var records;\r\n    updatePreserveRecordsCache(keys);\r\n\r\n    if (preserveSelectedRowKeys) {\r\n      availableKeys = keys;\r\n      records = keys.map(function (key) {\r\n        return preserveRecordsRef.current.get(key);\r\n      });\r\n    } else {\r\n      // Filter key which not exist in the `dataSource`\r\n      availableKeys = [];\r\n      records = [];\r\n      keys.forEach(function (key) {\r\n        var record = getRecordByKey(key);\r\n\r\n        if (record !== undefined) {\r\n          availableKeys.push(key);\r\n          records.push(record);\r\n        }\r\n      });\r\n    }\r\n\r\n    setMergedSelectedKeys(availableKeys);\r\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\r\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\r\n  // Trigger single `onSelect` event\r\n\r\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\r\n    if (onSelect) {\r\n      var rows = keys.map(function (k) {\r\n        return getRecordByKey(k);\r\n      });\r\n      onSelect(getRecordByKey(key), selected, rows, event);\r\n    }\r\n\r\n    setSelectedKeys(keys);\r\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\r\n  var mergedSelections = (0, React.useMemo)(function () {\r\n    if (!selections || hideSelectAll) {\r\n      return null;\r\n    }\r\n\r\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\r\n    return selectionList.map(function (selection) {\r\n      if (selection === SELECTION_ALL) {\r\n        return {\r\n          key: 'all',\r\n          text: tableLocale.selectionAll,\r\n          onSelect: function onSelect() {\r\n            setSelectedKeys(data.map(function (record, index) {\r\n              return getRowKey(record, index);\r\n            }).filter(function (key) {\r\n              var checkProps = checkboxPropsMap.get(key);\r\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\r\n            }));\r\n          }\r\n        };\r\n      }\r\n\r\n      if (selection === SELECTION_INVERT) {\r\n        return {\r\n          key: 'invert',\r\n          text: tableLocale.selectInvert,\r\n          onSelect: function onSelect() {\r\n            var keySet = new Set(derivedSelectedKeySet);\r\n            pageData.forEach(function (record, index) {\r\n              var key = getRowKey(record, index);\r\n              var checkProps = checkboxPropsMap.get(key);\r\n\r\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\r\n                if (keySet.has(key)) {\r\n                  keySet[\"delete\"](key);\r\n                } else {\r\n                  keySet.add(key);\r\n                }\r\n              }\r\n            });\r\n            var keys = Array.from(keySet);\r\n\r\n            if (onSelectInvert) {\r\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\r\n              onSelectInvert(keys);\r\n            }\r\n\r\n            setSelectedKeys(keys);\r\n          }\r\n        };\r\n      }\r\n\r\n      if (selection === SELECTION_NONE) {\r\n        return {\r\n          key: 'none',\r\n          text: tableLocale.selectNone,\r\n          onSelect: function onSelect() {\r\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\r\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\r\n              var checkProps = checkboxPropsMap.get(key);\r\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\r\n            }));\r\n          }\r\n        };\r\n      }\r\n\r\n      return selection;\r\n    });\r\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\r\n\r\n  var transformColumns = (0, React.useCallback)(function (columns) {\r\n    if (!rowSelection) {\r\n      return columns;\r\n    } // Support selection\r\n\r\n\r\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\r\n\r\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\r\n      return !checkboxPropsMap.get(key).disabled;\r\n    });\r\n    var checkedCurrentAll = recordKeys.every(function (key) {\r\n      return keySet.has(key);\r\n    });\r\n    var checkedCurrentSome = recordKeys.some(function (key) {\r\n      return keySet.has(key);\r\n    });\r\n\r\n    var onSelectAllChange = function onSelectAllChange() {\r\n      var changeKeys = [];\r\n\r\n      if (checkedCurrentAll) {\r\n        recordKeys.forEach(function (key) {\r\n          keySet[\"delete\"](key);\r\n          changeKeys.push(key);\r\n        });\r\n      } else {\r\n        recordKeys.forEach(function (key) {\r\n          if (!keySet.has(key)) {\r\n            keySet.add(key);\r\n            changeKeys.push(key);\r\n          }\r\n        });\r\n      }\r\n\r\n      var keys = Array.from(keySet);\r\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\r\n        return getRecordByKey(k);\r\n      }), changeKeys.map(function (k) {\r\n        return getRecordByKey(k);\r\n      }));\r\n      setSelectedKeys(keys);\r\n    }; // ===================== Render =====================\r\n    // Title Cell\r\n\r\n\r\n    var title;\r\n\r\n    if (selectionType !== 'radio') {\r\n      var customizeSelections;\r\n\r\n      if (mergedSelections) {\r\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\r\n          getPopupContainer: getPopupContainer\r\n        }, mergedSelections.map(function (selection, index) {\r\n          var key = selection.key,\r\n              text = selection.text,\r\n              onSelectionClick = selection.onSelect;\r\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\r\n            key: key || index,\r\n            onClick: function onClick() {\r\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\r\n            }\r\n          }, text);\r\n        }));\r\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\r\n          className: \"\".concat(prefixCls, \"-selection-extra\")\r\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\r\n          overlay: menu,\r\n          getPopupContainer: getPopupContainer\r\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\r\n      }\r\n\r\n      var allDisabledData = flattedData.map(function (record, index) {\r\n        var key = getRowKey(record, index);\r\n        var checkboxProps = checkboxPropsMap.get(key) || {};\r\n        return (0, _extends2[\"default\"])({\r\n          checked: keySet.has(key)\r\n        }, checkboxProps);\r\n      }).filter(function (_ref2) {\r\n        var disabled = _ref2.disabled;\r\n        return disabled;\r\n      });\r\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\r\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\r\n        var checked = _ref3.checked;\r\n        return checked;\r\n      });\r\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\r\n        var checked = _ref4.checked;\r\n        return checked;\r\n      });\r\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\r\n        className: \"\".concat(prefixCls, \"-selection\")\r\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\r\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\r\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\r\n        onChange: onSelectAllChange,\r\n        disabled: flattedData.length === 0 || allDisabled,\r\n        skipGroup: true\r\n      }), customizeSelections);\r\n    } // Body Cell\r\n\r\n\r\n    var renderCell;\r\n\r\n    if (selectionType === 'radio') {\r\n      renderCell = function renderCell(_, record, index) {\r\n        var key = getRowKey(record, index);\r\n        var checked = keySet.has(key);\r\n        return {\r\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\r\n            checked: checked,\r\n            onClick: function onClick(e) {\r\n              return e.stopPropagation();\r\n            },\r\n            onChange: function onChange(event) {\r\n              if (!keySet.has(key)) {\r\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\r\n              }\r\n            }\r\n          })),\r\n          checked: checked\r\n        };\r\n      };\r\n    } else {\r\n      renderCell = function renderCell(_, record, index) {\r\n        var _a;\r\n\r\n        var key = getRowKey(record, index);\r\n        var checked = keySet.has(key);\r\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\r\n        var checkboxProps = checkboxPropsMap.get(key);\r\n        var mergedIndeterminate;\r\n\r\n        if (expandType === 'nest') {\r\n          mergedIndeterminate = indeterminate;\r\n          (0, _devWarning[\"default\"])(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\r\n        } else {\r\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\r\n        } // Record checked\r\n\r\n\r\n        return {\r\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\r\n            indeterminate: mergedIndeterminate,\r\n            checked: checked,\r\n            skipGroup: true,\r\n            onClick: function onClick(e) {\r\n              return e.stopPropagation();\r\n            },\r\n            onChange: function onChange(_ref5) {\r\n              var nativeEvent = _ref5.nativeEvent;\r\n              var shiftKey = nativeEvent.shiftKey;\r\n              var startIndex = -1;\r\n              var endIndex = -1; // Get range of this\r\n\r\n              if (shiftKey && checkStrictly) {\r\n                var pointKeys = new Set([lastSelectedKey, key]);\r\n                recordKeys.some(function (recordKey, recordIndex) {\r\n                  if (pointKeys.has(recordKey)) {\r\n                    if (startIndex === -1) {\r\n                      startIndex = recordIndex;\r\n                    } else {\r\n                      endIndex = recordIndex;\r\n                      return true;\r\n                    }\r\n                  }\r\n\r\n                  return false;\r\n                });\r\n              }\r\n\r\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\r\n                // Batch update selections\r\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\r\n                var changedKeys = [];\r\n\r\n                if (checked) {\r\n                  rangeKeys.forEach(function (recordKey) {\r\n                    if (keySet.has(recordKey)) {\r\n                      changedKeys.push(recordKey);\r\n                      keySet[\"delete\"](recordKey);\r\n                    }\r\n                  });\r\n                } else {\r\n                  rangeKeys.forEach(function (recordKey) {\r\n                    if (!keySet.has(recordKey)) {\r\n                      changedKeys.push(recordKey);\r\n                      keySet.add(recordKey);\r\n                    }\r\n                  });\r\n                }\r\n\r\n                var keys = Array.from(keySet);\r\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\r\n                  return getRecordByKey(recordKey);\r\n                }), changedKeys.map(function (recordKey) {\r\n                  return getRecordByKey(recordKey);\r\n                }));\r\n                setSelectedKeys(keys);\r\n              } else {\r\n                // Single record selected\r\n                var originCheckedKeys = derivedSelectedKeys;\r\n\r\n                if (checkStrictly) {\r\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\r\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\r\n                } else {\r\n                  // Always fill first\r\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\r\n                  var _checkedKeys = result.checkedKeys,\r\n                      halfCheckedKeys = result.halfCheckedKeys;\r\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\r\n\r\n                  if (checked) {\r\n                    var tempKeySet = new Set(_checkedKeys);\r\n                    tempKeySet[\"delete\"](key);\r\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\r\n                      checked: false,\r\n                      halfCheckedKeys: halfCheckedKeys\r\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\r\n                  }\r\n\r\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\r\n                }\r\n              }\r\n\r\n              setLastSelectedKey(key);\r\n            }\r\n          })),\r\n          checked: checked\r\n        };\r\n      };\r\n    }\r\n\r\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\r\n      var _renderCell = renderCell(_, record, index),\r\n          node = _renderCell.node,\r\n          checked = _renderCell.checked;\r\n\r\n      if (customizeRenderCell) {\r\n        return customizeRenderCell(checked, record, index, node);\r\n      }\r\n\r\n      return node;\r\n    }; // Columns\r\n\r\n\r\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\r\n      width: selectionColWidth,\r\n      className: \"\".concat(prefixCls, \"-selection-column\"),\r\n      title: rowSelection.columnTitle || title,\r\n      render: renderSelectionCell\r\n    }, _rcTable.INTERNAL_COL_DEFINE, {\r\n      className: \"\".concat(prefixCls, \"-selection-col\")\r\n    });\r\n\r\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\r\n      var _columns = (0, _toArray2[\"default\"])(columns),\r\n          expandColumn = _columns[0],\r\n          restColumns = _columns.slice(1);\r\n\r\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\r\n\r\n      if (selectionFixed) {\r\n        expandColumn.fixed = selectionFixed;\r\n      }\r\n\r\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\r\n        fixed: selectionFixed\r\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\r\n    }\r\n\r\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\r\n      fixed: fixed || getFixedType(columns[0])\r\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\r\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\r\n  return [transformColumns, derivedSelectedKeySet];\r\n}"]},"metadata":{},"sourceType":"script"}