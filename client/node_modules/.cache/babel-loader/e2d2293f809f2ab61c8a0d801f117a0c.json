{"ast":null,"code":"import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ /]([\\w.]+)/i;\nvar REGX_BROWSER = {\n  OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\n  EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\n  CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\n  PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\n  SAFARI: /(safari)[ /]([\\w.]+)/i,\n  WEBKIT: /(webkit)[ /]([\\w.]+)/i,\n  MSIE: /(msie|trident) ([\\w.]+)/i,\n  MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\n\nif (typeof window !== 'undefined') {\n  window.browserDetails = window.browserDetails || {};\n}\n/**\r\n * Get configuration details for Browser\r\n *\r\n * @private\r\n */\n\n\nvar Browser =\n/** @class */\nfunction () {\n  function Browser() {}\n\n  Browser.extractBrowserDetail = function () {\n    var browserInfo = {\n      culture: {}\n    };\n    var keys = Object.keys(REGX_BROWSER);\n    var clientInfo = [];\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n\n      if (clientInfo) {\n        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();\n        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;\n        browserInfo.version = clientInfo[2];\n        browserInfo.culture.name = browserInfo.culture.language = navigator.language; // eslint-disable-next-line\n\n        if (!!Browser.userAgent.match(REGX_IE11)) {\n          browserInfo.name = 'msie';\n          break;\n        }\n\n        var version = Browser.userAgent.match(REGX_VERSION);\n\n        if (browserInfo.name === 'safari' && version) {\n          browserInfo.version = version[2];\n        }\n\n        break;\n      }\n    }\n\n    return browserInfo;\n  };\n  /**\r\n   * To get events from the browser\r\n   *\r\n   * @param {string} event - type of event triggered.\r\n   * @returns {boolean}\r\n   */\n\n\n  Browser.getEvent = function (event) {\n    // eslint-disable-next-line\n    var events = {\n      start: {\n        isPointer: 'pointerdown',\n        isTouch: 'touchstart',\n        isDevice: 'mousedown'\n      },\n      move: {\n        isPointer: 'pointermove',\n        isTouch: 'touchmove',\n        isDevice: 'mousemove'\n      },\n      end: {\n        isPointer: 'pointerup',\n        isTouch: 'touchend',\n        isDevice: 'mouseup'\n      },\n      cancel: {\n        isPointer: 'pointercancel',\n        isTouch: 'touchcancel',\n        isDevice: 'mouseleave'\n      }\n    };\n    return Browser.isPointer ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;\n  };\n  /**\r\n   * To get the Touch start event from browser\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  Browser.getTouchStartEvent = function () {\n    return Browser.getEvent('start');\n  };\n  /**\r\n   * To get the Touch end event from browser\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  Browser.getTouchEndEvent = function () {\n    return Browser.getEvent('end');\n  };\n  /**\r\n   * To get the Touch move event from browser\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  Browser.getTouchMoveEvent = function () {\n    return Browser.getEvent('move');\n  };\n  /**\r\n   * To cancel the touch event from browser\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  Browser.getTouchCancelEvent = function () {\n    return Browser.getEvent('cancel');\n  };\n  /**\r\n   * To get the value based on provided key and regX\r\n   *\r\n   * @param {string} key ?\r\n   * @param {RegExp} regX ?\r\n   * @returns {Object} ?\r\n   */\n\n\n  Browser.getValue = function (key, regX) {\n    var browserDetails = window.browserDetails;\n\n    if ('undefined' === typeof browserDetails[key]) {\n      return browserDetails[key] = regX.test(Browser.userAgent);\n    }\n\n    if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\n      browserDetails['isIos'] = true;\n      browserDetails['isDevice'] = true;\n      browserDetails['isTouch'] = true;\n      browserDetails['isPointer'] = true;\n    }\n\n    return browserDetails[key];\n  };\n\n  Object.defineProperty(Browser, \"userAgent\", {\n    get: function () {\n      return Browser.uA;\n    },\n    //Properties\n\n    /**\r\n     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\r\n     * Also we can set our own userAgent.\r\n     *\r\n     * @param {string} uA ?\r\n     */\n    set: function (uA) {\n      Browser.uA = uA;\n      window.browserDetails = {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"info\", {\n    //Read Only Properties\n\n    /**\r\n     * Property is to get the browser information like Name, Version and Language\r\n     *\r\n     * @returns {BrowserInfo} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.info)) {\n        return window.browserDetails.info = Browser.extractBrowserDetail();\n      }\n\n      return window.browserDetails.info;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIE\", {\n    /**\r\n     * Property is to get whether the userAgent is based IE.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isIE', REGX_IE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isTouch\", {\n    /**\r\n     * Property is to get whether the browser has touch support.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isTouch)) {\n        return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;\n      }\n\n      return window.browserDetails.isTouch;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isPointer\", {\n    /**\r\n     * Property is to get whether the browser has Pointer support.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isPointer)) {\n        return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;\n      }\n\n      return window.browserDetails.isPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isMSPointer\", {\n    /**\r\n     * Property is to get whether the browser has MSPointer support.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isMSPointer)) {\n        return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;\n      }\n\n      return window.browserDetails.isMSPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isDevice\", {\n    /**\r\n     * Property is to get whether the userAgent is device based.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isDevice', REGX_MOBILE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos\", {\n    /**\r\n     * Property is to get whether the userAgent is IOS.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isIos', REGX_IOS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos7\", {\n    /**\r\n     * Property is to get whether the userAgent is Ios7.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isIos7', REGX_IOS7);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isAndroid\", {\n    /**\r\n     * Property is to get whether the userAgent is Android.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isAndroid', REGX_ANDROID);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWebView\", {\n    /**\r\n     * Property is to identify whether application ran in web view.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isWebView)) {\n        window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');\n        return window.browserDetails.isWebView;\n      }\n\n      return window.browserDetails.isWebView;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWindows\", {\n    /**\r\n     * Property is to get whether the userAgent is Windows.\r\n     *\r\n     * @returns {boolean} ?\r\n     */\n    get: function () {\n      return Browser.getValue('isWindows', REGX_WINDOWS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchStartEvent\", {\n    /**\r\n     * Property is to get the touch start event. It returns event name based on browser.\r\n     *\r\n     * @returns {string} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchStartEvent)) {\n        return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n      }\n\n      return window.browserDetails.touchStartEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchMoveEvent\", {\n    /**\r\n     * Property is to get the touch move event. It returns event name based on browser.\r\n     *\r\n     * @returns {string} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchMoveEvent)) {\n        return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n      }\n\n      return window.browserDetails.touchMoveEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchEndEvent\", {\n    /**\r\n     * Property is to get the touch end event. It returns event name based on browser.\r\n     *\r\n     * @returns {string} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchEndEvent)) {\n        return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n      }\n\n      return window.browserDetails.touchEndEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchCancelEvent\", {\n    /**\r\n     * Property is to cancel the touch end event.\r\n     *\r\n     * @returns {string} ?\r\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchCancelEvent)) {\n        return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n      }\n\n      return window.browserDetails.touchCancelEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* istanbul ignore next */\n\n  Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n  return Browser;\n}();\n\nexport { Browser };","map":{"version":3,"sources":["D:/HUST/20211/Introduction to Software Engineering/Project/Sprint 2/RubyGYM/client/node_modules/@syncfusion/ej2-base/src/browser.js"],"names":["isUndefined","REGX_MOBILE","REGX_IE","REGX_IE11","REGX_IOS","REGX_IOS7","REGX_ANDROID","REGX_WINDOWS","REGX_VERSION","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","window","browserDetails","Browser","extractBrowserDetail","browserInfo","culture","keys","Object","clientInfo","_i","keys_1","length","key","userAgent","match","name","toLowerCase","version","language","navigator","getEvent","event","events","start","isPointer","isTouch","isDevice","move","end","cancel","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","getTouchCancelEvent","getValue","regX","test","platform","maxTouchPoints","defineProperty","get","uA","set","enumerable","configurable","info","isMSPointer","isWebView","cordova","PhoneGap","phonegap","forge","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent"],"mappings":"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","sourcesContent":["import { isUndefined } from './util';\r\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\r\nvar REGX_IE = /msie|trident/i;\r\nvar REGX_IE11 = /Trident\\/7\\./;\r\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\r\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\r\nvar REGX_ANDROID = /android/i;\r\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\r\nvar REGX_VERSION = /(version)[ /]([\\w.]+)/i;\r\nvar REGX_BROWSER = {\r\n    OPERA: /(opera|opr)(?:.*version|)[ /]([\\w.]+)/i,\r\n    EDGE: /(edge)(?:.*version|)[ /]([\\w.]+)/i,\r\n    CHROME: /(chrome|crios)[ /]([\\w.]+)/i,\r\n    PANTHOMEJS: /(phantomjs)[ /]([\\w.]+)/i,\r\n    SAFARI: /(safari)[ /]([\\w.]+)/i,\r\n    WEBKIT: /(webkit)[ /]([\\w.]+)/i,\r\n    MSIE: /(msie|trident) ([\\w.]+)/i,\r\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\r\n};\r\n/* istanbul ignore else  */\r\nif (typeof window !== 'undefined') {\r\n    window.browserDetails = window.browserDetails || {};\r\n}\r\n/**\r\n * Get configuration details for Browser\r\n *\r\n * @private\r\n */\r\nvar Browser = /** @class */ (function () {\r\n    function Browser() {\r\n    }\r\n    Browser.extractBrowserDetail = function () {\r\n        var browserInfo = { culture: {} };\r\n        var keys = Object.keys(REGX_BROWSER);\r\n        var clientInfo = [];\r\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n            var key = keys_1[_i];\r\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\r\n            if (clientInfo) {\r\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\r\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\r\n                browserInfo.version = clientInfo[2];\r\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\r\n                // eslint-disable-next-line\r\n                if (!!Browser.userAgent.match(REGX_IE11)) {\r\n                    browserInfo.name = 'msie';\r\n                    break;\r\n                }\r\n                var version = Browser.userAgent.match(REGX_VERSION);\r\n                if (browserInfo.name === 'safari' && version) {\r\n                    browserInfo.version = version[2];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return browserInfo;\r\n    };\r\n    /**\r\n     * To get events from the browser\r\n     *\r\n     * @param {string} event - type of event triggered.\r\n     * @returns {boolean}\r\n     */\r\n    Browser.getEvent = function (event) {\r\n        // eslint-disable-next-line\r\n        var events = {\r\n            start: {\r\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\r\n            },\r\n            move: {\r\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\r\n            },\r\n            end: {\r\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\r\n            },\r\n            cancel: {\r\n                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'\r\n            }\r\n        };\r\n        return (Browser.isPointer ? events[event].isPointer :\r\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\r\n                : events[event].isDevice));\r\n    };\r\n    /**\r\n     * To get the Touch start event from browser\r\n     *\r\n     * @returns {string}\r\n     */\r\n    Browser.getTouchStartEvent = function () {\r\n        return Browser.getEvent('start');\r\n    };\r\n    /**\r\n     * To get the Touch end event from browser\r\n     *\r\n     * @returns {string}\r\n     */\r\n    Browser.getTouchEndEvent = function () {\r\n        return Browser.getEvent('end');\r\n    };\r\n    /**\r\n     * To get the Touch move event from browser\r\n     *\r\n     * @returns {string}\r\n     */\r\n    Browser.getTouchMoveEvent = function () {\r\n        return Browser.getEvent('move');\r\n    };\r\n    /**\r\n     * To cancel the touch event from browser\r\n     *\r\n     * @returns {string}\r\n     */\r\n    Browser.getTouchCancelEvent = function () {\r\n        return Browser.getEvent('cancel');\r\n    };\r\n    /**\r\n     * To get the value based on provided key and regX\r\n     *\r\n     * @param {string} key ?\r\n     * @param {RegExp} regX ?\r\n     * @returns {Object} ?\r\n     */\r\n    Browser.getValue = function (key, regX) {\r\n        var browserDetails = window.browserDetails;\r\n        if ('undefined' === typeof browserDetails[key]) {\r\n            return browserDetails[key] = regX.test(Browser.userAgent);\r\n        }\r\n        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {\r\n            browserDetails['isIos'] = true;\r\n            browserDetails['isDevice'] = true;\r\n            browserDetails['isTouch'] = true;\r\n            browserDetails['isPointer'] = true;\r\n        }\r\n        return browserDetails[key];\r\n    };\r\n    Object.defineProperty(Browser, \"userAgent\", {\r\n        get: function () {\r\n            return Browser.uA;\r\n        },\r\n        //Properties\r\n        /**\r\n         * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\r\n         * Also we can set our own userAgent.\r\n         *\r\n         * @param {string} uA ?\r\n         */\r\n        set: function (uA) {\r\n            Browser.uA = uA;\r\n            window.browserDetails = {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"info\", {\r\n        //Read Only Properties\r\n        /**\r\n         * Property is to get the browser information like Name, Version and Language\r\n         *\r\n         * @returns {BrowserInfo} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.info)) {\r\n                return window.browserDetails.info = Browser.extractBrowserDetail();\r\n            }\r\n            return window.browserDetails.info;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isIE\", {\r\n        /**\r\n         * Property is to get whether the userAgent is based IE.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isIE', REGX_IE);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isTouch\", {\r\n        /**\r\n         * Property is to get whether the browser has touch support.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.isTouch)) {\r\n                return (window.browserDetails.isTouch =\r\n                    ('ontouchstart' in window.navigator) ||\r\n                        (window &&\r\n                            window.navigator &&\r\n                            (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));\r\n            }\r\n            return window.browserDetails.isTouch;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isPointer\", {\r\n        /**\r\n         * Property is to get whether the browser has Pointer support.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.isPointer)) {\r\n                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\r\n            }\r\n            return window.browserDetails.isPointer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isMSPointer\", {\r\n        /**\r\n         * Property is to get whether the browser has MSPointer support.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.isMSPointer)) {\r\n                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\r\n            }\r\n            return window.browserDetails.isMSPointer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isDevice\", {\r\n        /**\r\n         * Property is to get whether the userAgent is device based.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isDevice', REGX_MOBILE);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isIos\", {\r\n        /**\r\n         * Property is to get whether the userAgent is IOS.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isIos', REGX_IOS);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isIos7\", {\r\n        /**\r\n         * Property is to get whether the userAgent is Ios7.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isIos7', REGX_IOS7);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isAndroid\", {\r\n        /**\r\n         * Property is to get whether the userAgent is Android.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isAndroid', REGX_ANDROID);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isWebView\", {\r\n        /**\r\n         * Property is to identify whether application ran in web view.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.isWebView)) {\r\n                window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\r\n                    && isUndefined(window.phonegap) && window.forge !== 'object');\r\n                return window.browserDetails.isWebView;\r\n            }\r\n            return window.browserDetails.isWebView;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"isWindows\", {\r\n        /**\r\n         * Property is to get whether the userAgent is Windows.\r\n         *\r\n         * @returns {boolean} ?\r\n         */\r\n        get: function () {\r\n            return Browser.getValue('isWindows', REGX_WINDOWS);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"touchStartEvent\", {\r\n        /**\r\n         * Property is to get the touch start event. It returns event name based on browser.\r\n         *\r\n         * @returns {string} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.touchStartEvent)) {\r\n                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\r\n            }\r\n            return window.browserDetails.touchStartEvent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"touchMoveEvent\", {\r\n        /**\r\n         * Property is to get the touch move event. It returns event name based on browser.\r\n         *\r\n         * @returns {string} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.touchMoveEvent)) {\r\n                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\r\n            }\r\n            return window.browserDetails.touchMoveEvent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"touchEndEvent\", {\r\n        /**\r\n         * Property is to get the touch end event. It returns event name based on browser.\r\n         *\r\n         * @returns {string} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.touchEndEvent)) {\r\n                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\r\n            }\r\n            return window.browserDetails.touchEndEvent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Browser, \"touchCancelEvent\", {\r\n        /**\r\n         * Property is to cancel the touch end event.\r\n         *\r\n         * @returns {string} ?\r\n         */\r\n        get: function () {\r\n            if (isUndefined(window.browserDetails.touchCancelEvent)) {\r\n                return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\r\n            }\r\n            return window.browserDetails.touchCancelEvent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /* istanbul ignore next */\r\n    Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\r\n    return Browser;\r\n}());\r\nexport { Browser };\r\n"]},"metadata":{},"sourceType":"module"}