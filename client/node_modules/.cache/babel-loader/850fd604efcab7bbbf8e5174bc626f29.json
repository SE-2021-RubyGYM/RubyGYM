{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactInstanceMap\r\n */\n'use strict';\n/**\r\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\r\n * instance (key) and the internal representation (value). This allows public\r\n * methods to accept the user facing instance as an argument and map them back\r\n * to internal methods.\r\n */\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n  /**\r\n   * This API should be called `delete` but we'd have to make sure to always\r\n   * transform these to strings for IE support. When this transform is fully\r\n   * supported we can rename it.\r\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n};\nmodule.exports = ReactInstanceMap;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/ReactInstanceMap.js"],"names":["ReactInstanceMap","remove","key","_reactInternalInstance","undefined","get","has","set","value","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIA,gBAAgB,GAAG;AAErB;AACF;AACA;AACA;AACA;AACEC,EAAAA,MAAM,EAAE,UAAUC,GAAV,EAAe;AACrBA,IAAAA,GAAG,CAACC,sBAAJ,GAA6BC,SAA7B;AACD,GAToB;AAWrBC,EAAAA,GAAG,EAAE,UAAUH,GAAV,EAAe;AAClB,WAAOA,GAAG,CAACC,sBAAX;AACD,GAboB;AAerBG,EAAAA,GAAG,EAAE,UAAUJ,GAAV,EAAe;AAClB,WAAOA,GAAG,CAACC,sBAAJ,KAA+BC,SAAtC;AACD,GAjBoB;AAmBrBG,EAAAA,GAAG,EAAE,UAAUL,GAAV,EAAeM,KAAf,EAAsB;AACzBN,IAAAA,GAAG,CAACC,sBAAJ,GAA6BK,KAA7B;AACD;AArBoB,CAAvB;AAyBAC,MAAM,CAACC,OAAP,GAAiBV,gBAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactInstanceMap\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\r\n * instance (key) and the internal representation (value). This allows public\r\n * methods to accept the user facing instance as an argument and map them back\r\n * to internal methods.\r\n */\r\n\r\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\r\nvar ReactInstanceMap = {\r\n\r\n  /**\r\n   * This API should be called `delete` but we'd have to make sure to always\r\n   * transform these to strings for IE support. When this transform is fully\r\n   * supported we can rename it.\r\n   */\r\n  remove: function (key) {\r\n    key._reactInternalInstance = undefined;\r\n  },\r\n\r\n  get: function (key) {\r\n    return key._reactInternalInstance;\r\n  },\r\n\r\n  has: function (key) {\r\n    return key._reactInternalInstance !== undefined;\r\n  },\r\n\r\n  set: function (key, value) {\r\n    key._reactInternalInstance = value;\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = ReactInstanceMap;"]},"metadata":{},"sourceType":"script"}