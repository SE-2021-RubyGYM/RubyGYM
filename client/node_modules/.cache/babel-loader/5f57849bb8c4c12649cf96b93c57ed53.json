{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Schedule common utilities\n */\n\nexport var WEEK_LENGTH = 7;\nexport var DEFAULT_WEEKS = 6;\nexport var MS_PER_DAY = 86400000;\nexport var MS_PER_MINUTE = 60000;\n/**\n * Method to get height from element\n *\n * @param {Element} container Accepts the DOM element\n * @param {string} elementClass Accepts the element class\n * @returns {number} Returns the height of the element\n */\n\nexport function getElementHeightFromClass(container, elementClass) {\n  var height = 0;\n  var el = createElement('div', {\n    className: elementClass\n  }).cloneNode();\n  el.style.visibility = 'hidden';\n  el.style.position = 'absolute';\n  container.appendChild(el);\n  height = el.getBoundingClientRect().height;\n  remove(el);\n  return height;\n}\n/**\n * Method to get translateY value\n *\n * @param {HTMLElement | Element} element Accepts the DOM element\n * @returns {number} Returns the translateY value of given element\n */\n\nexport function getTranslateY(element) {\n  var style = getComputedStyle(element);\n  return window.WebKitCSSMatrix ? new WebKitCSSMatrix(style.webkitTransform).m42 : 0;\n}\n/**\n * Method to get week first date\n *\n * @param {Date} date Accepts the date object\n * @param {number} firstDayOfWeek Accepts the first day of week number\n * @returns {Date} Returns the date object\n */\n\nexport function getWeekFirstDate(date, firstDayOfWeek) {\n  var date1 = new Date(date.getTime());\n  firstDayOfWeek = (firstDayOfWeek - date1.getDay() + 7 * -1) % 7;\n  return new Date(date1.setDate(date1.getDate() + firstDayOfWeek));\n}\n/**\n * Method to get week last date\n *\n * @param {Date} date Accepts the date object\n * @param {number} firstDayOfWeek Accepts the first day of week number\n * @returns {Date} Returns the date object\n */\n\nexport function getWeekLastDate(date, firstDayOfWeek) {\n  var weekFirst = getWeekFirstDate(date, firstDayOfWeek);\n  var weekLast = new Date(weekFirst.getFullYear(), weekFirst.getMonth(), weekFirst.getDate() + 6);\n  return new Date(weekLast.getTime());\n}\n/**\n * Method to get first date of month\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\n\nexport function firstDateOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n/**\n * Method to get last date of month\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\n\nexport function lastDateOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n/**\n * Method to get week number\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the week number\n */\n\nexport function getWeekNumber(date) {\n  var date1 = new Date(date.getFullYear(), 0, 1).valueOf();\n  var currentDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()).valueOf();\n  var dayOfYear = (currentDate - date1 + MS_PER_DAY) / MS_PER_DAY;\n  return Math.ceil(dayOfYear / 7);\n}\n/**\n * Method to get week middle date\n *\n * @param {Date} weekFirst Accepts the week first date object\n * @param {Date} weekLast Accepts the week last date object\n * @returns {Date} Returns the date object\n */\n\nexport function getWeekMiddleDate(weekFirst, weekLast) {\n  return new Date(weekLast.valueOf() - (weekLast.valueOf() - weekFirst.valueOf()) / 2);\n}\n/**\n * Method to set time to date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} time Accepts the milliseconds\n * @returns {Date} Returns the date object\n */\n\nexport function setTime(date, time) {\n  var tzOffsetBefore = date.getTimezoneOffset();\n  var d = new Date(date.getTime() + time);\n  var tzOffsetDiff = d.getTimezoneOffset() - tzOffsetBefore;\n  date.setTime(d.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n  return date;\n}\n/**\n * Method the reset hours in date object\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\n\nexport function resetTime(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n}\n/**\n * Method to get milliseconds from date object\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the milliseconds from date object\n */\n\nexport function getDateInMs(date) {\n  var localOffset = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTimezoneOffset();\n  var dateOffset = date.getTimezoneOffset();\n  var timezoneOffset = dateOffset - localOffset;\n  return date.getTime() - new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTime() - timezoneOffset * 60 * 1000;\n}\n/**\n * Method to get date count between two dates\n *\n * @param {Date} startDate Accepts the date object\n * @param {Date} endDate Accepts the date object\n * @returns {number} Returns the date count\n */\n\nexport function getDateCount(startDate, endDate) {\n  return Math.ceil((endDate.getTime() - startDate.getTime()) / MS_PER_DAY);\n}\n/**\n * Method to add no of days in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfDays Accepts the number of days count\n * @returns {Date} Returns the date object\n */\n\nexport function addDays(date, noOfDays) {\n  date = new Date('' + date);\n  return new Date(date.setDate(date.getDate() + noOfDays));\n}\n/**\n * Method to add no of months in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfMonths Accepts the number of month count\n * @returns {Date} Returns the date object\n */\n\nexport function addMonths(date, noOfMonths) {\n  date = new Date('' + date);\n  var day = date.getDate();\n  date.setDate(1);\n  date.setMonth(date.getMonth() + noOfMonths);\n  date.setDate(Math.min(day, getMaxDays(date)));\n  return date;\n}\n/**\n * Method to add no of years in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfYears Accepts the number of month count\n * @returns {Date} Returns the date object\n */\n\nexport function addYears(date, noOfYears) {\n  date = new Date('' + date);\n  var day = date.getDate();\n  date.setDate(1);\n  date.setFullYear(date.getFullYear() + noOfYears);\n  date.setDate(Math.min(day, getMaxDays(date)));\n  return date;\n}\n/**\n * Method to get start and end hours\n *\n * @param {Date} date Accepts the date object\n * @param {Date} startHour Accepts the start hour date object\n * @param {Date} endHour Accepts the end hour date object\n * @returns {Object} Returns the start and end hour date objects\n */\n\nexport function getStartEndHours(date, startHour, endHour) {\n  var date1 = new Date(date.getTime());\n  date1.setHours(startHour.getHours());\n  date1.setMinutes(startHour.getMinutes());\n  date1.setSeconds(startHour.getSeconds());\n  var date2 = new Date(date.getTime());\n\n  if (endHour.getHours() === 0) {\n    date2 = addDays(date2, 1);\n  } else {\n    date2.setHours(endHour.getHours());\n    date2.setMinutes(endHour.getMinutes());\n    date2.setSeconds(endHour.getSeconds());\n  }\n\n  return {\n    startHour: date1,\n    endHour: date2\n  };\n}\n/**\n * Method to get month last date\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the month last date\n */\n\nexport function getMaxDays(date) {\n  return lastDateOfMonth(date).getDate();\n}\n/**\n * Method to get days count between two dates\n *\n * @param {Date} startDate Accepts the date object\n * @param {Date} endDate Accepts the date object\n * @returns {number} Returns the days count\n */\n\nexport function getDaysCount(startDate, endDate) {\n  var strTime = resetTime(new Date(startDate));\n  var endTime = resetTime(new Date(endDate));\n  return Math.round((endTime.getTime() - strTime.getTime()) / MS_PER_DAY);\n}\n/**\n * Method to get date object from date string\n *\n * @param {string} date Accepts the date string\n * @returns {Date} Returns the date object\n */\n\nexport function getDateFromString(date) {\n  return date.indexOf('Date') !== -1 ? new Date(parseInt(date.match(/\\d+/g).toString(), 10)) : date.indexOf('T') !== -1 ? new Date(date) : new Date(date.replace(/-/g, '/'));\n}\n/** @private */\n\nvar scrollWidth = null;\n/**\n * Method to get scrollbar width\n *\n * @returns {number} Returns the scrollbar width\n * @private\n */\n\nexport function getScrollBarWidth() {\n  if (scrollWidth !== null) {\n    return scrollWidth;\n  }\n\n  var divNode = createElement('div');\n  var value = 0;\n  divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n  document.body.appendChild(divNode);\n  var ratio = devicePixelRatio ? devicePixelRatio.toFixed(2) === '1.10' || devicePixelRatio <= 1 ? Math.ceil(devicePixelRatio % 1) : Math.floor(devicePixelRatio % 1) : 0;\n  value = divNode.offsetWidth - divNode.clientWidth - ratio | 0;\n  document.body.removeChild(divNode);\n  return scrollWidth = value;\n}\n/**\n * Method to find the index from data collection\n *\n * @param {Object} data Accepts the data as object\n * @param {string} field Accepts the field name\n * @param {string} value Accepts the value name\n * @param {Object} event Accepts the data as object\n * @param {Object[]} resourceCollection Accepts the data collections\n * @returns {number} Returns the index number\n */\n// eslint-disable-next-line max-len\n\nexport function findIndexInData(data, field, value, event, resourceCollection) {\n  for (var i = 0, length_1 = data.length; i < length_1; i++) {\n    if (data[i][field] === value) {\n      if (event) {\n        var field_1 = resourceCollection.slice(-2)[0].field;\n        var res = event[field_1] instanceof Array ? event[field_1] : [event[field_1]];\n        var resData = res.join(',');\n\n        if (resData.includes(data[i][resourceCollection.slice(-1)[0].groupIDField])) {\n          return i;\n        }\n      } else {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * Method to get element outer height\n *\n * @param {HTMLElement} element Accepts the DOM element\n * @returns {number} Returns the outer height of the given element\n */\n\nexport function getOuterHeight(element) {\n  var style = getComputedStyle(element);\n  return element.offsetHeight + (parseInt(style.marginTop, 10) || 0) + (parseInt(style.marginBottom, 10) || 0);\n}\n/**\n * Method to remove child elements\n *\n * @param {HTMLElement | Element} element Accepts the DOM element\n * @returns {void}\n */\n\nexport function removeChildren(element) {\n  var elementChildren = [].slice.call(element.children);\n\n  for (var _i = 0, elementChildren_1 = elementChildren; _i < elementChildren_1.length; _i++) {\n    var elementChild = elementChildren_1[_i];\n\n    if (!elementChild.classList.contains('blazor-template')) {\n      element.removeChild(elementChild);\n    }\n  }\n}\n/**\n * Method to check DST is present or not in date object\n *\n * @param {Date} date Accepts the date object\n * @returns {boolean} Returns the boolean value for either DST is present or not\n */\n\nexport function isDaylightSavingTime(date) {\n  var jan = new Date(date.getFullYear(), 0, 1);\n  var jul = new Date(date.getFullYear(), 6, 1);\n  return date.getTimezoneOffset() < Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n}\n/**\n * Method to get UTC time value from date\n *\n * @param {Date} date Accepts the date\n * @returns {number} Returns the UTC time value\n */\n\nexport function getUniversalTime(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var day = date.getDate();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var milliseconds = date.getMilliseconds();\n  return Date.UTC(year, month, day, hours, minutes, seconds, milliseconds);\n}\n/**\n * Method to check the device\n *\n * @returns {boolean} Returns the boolean value for either device is present or not.\n */\n\nexport function isMobile() {\n  return window.navigator.userAgent.toLowerCase().indexOf('mobi') > -1;\n}\n/**\n * Method to check the IPad device\n *\n * @returns {boolean} Returns the boolean value for either IPad device is present or not.\n */\n\nexport function isIPadDevice() {\n  return window.navigator.userAgent.toLowerCase().indexOf('ipad') > -1;\n}\n/**\n * Method to capitalize the first word in string\n *\n * @param {string} inputString Accepts the string value\n * @param {string} type Accepts the string type\n * @returns {string} Returns the output string\n */\n\nexport function capitalizeFirstWord(inputString, type) {\n  if (type === 'multiple') {\n    inputString = inputString.split(' ').map(function (e) {\n      return e.charAt(0).toLocaleUpperCase() + e.substring(1);\n    }).join(' ');\n  } else if (type === 'single') {\n    if (inputString[0] >= '0' && inputString[0] <= '9') {\n      var array = inputString.match(/[a-zA-Z]/);\n      inputString = isNullOrUndefined(array) ? inputString : inputString.slice(0, array.index) + inputString[array.index].toLocaleUpperCase() + inputString.slice(array.index + 1);\n    }\n\n    inputString = inputString[0].toLocaleUpperCase() + inputString.slice(1);\n  }\n\n  return inputString;\n}","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/@syncfusion/ej2-schedule/src/schedule/base/util.js"],"names":["createElement","remove","isNullOrUndefined","WEEK_LENGTH","DEFAULT_WEEKS","MS_PER_DAY","MS_PER_MINUTE","getElementHeightFromClass","container","elementClass","height","el","className","cloneNode","style","visibility","position","appendChild","getBoundingClientRect","getTranslateY","element","getComputedStyle","window","WebKitCSSMatrix","webkitTransform","m42","getWeekFirstDate","date","firstDayOfWeek","date1","Date","getTime","getDay","setDate","getDate","getWeekLastDate","weekFirst","weekLast","getFullYear","getMonth","firstDateOfMonth","lastDateOfMonth","getWeekNumber","valueOf","currentDate","dayOfYear","Math","ceil","getWeekMiddleDate","setTime","time","tzOffsetBefore","getTimezoneOffset","d","tzOffsetDiff","resetTime","getDateInMs","localOffset","dateOffset","timezoneOffset","getDateCount","startDate","endDate","addDays","noOfDays","addMonths","noOfMonths","day","setMonth","min","getMaxDays","addYears","noOfYears","setFullYear","getStartEndHours","startHour","endHour","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","date2","getDaysCount","strTime","endTime","round","getDateFromString","indexOf","parseInt","match","toString","replace","scrollWidth","getScrollBarWidth","divNode","value","cssText","document","body","ratio","devicePixelRatio","toFixed","floor","offsetWidth","clientWidth","removeChild","findIndexInData","data","field","event","resourceCollection","i","length_1","length","field_1","slice","res","Array","resData","join","includes","groupIDField","getOuterHeight","offsetHeight","marginTop","marginBottom","removeChildren","elementChildren","call","children","_i","elementChildren_1","elementChild","classList","contains","isDaylightSavingTime","jan","jul","max","getUniversalTime","year","month","hours","minutes","seconds","milliseconds","getMilliseconds","UTC","isMobile","navigator","userAgent","toLowerCase","isIPadDevice","capitalizeFirstWord","inputString","type","split","map","e","charAt","toLocaleUpperCase","substring","array","index"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Schedule common utilities\n */\nexport var WEEK_LENGTH = 7;\nexport var DEFAULT_WEEKS = 6;\nexport var MS_PER_DAY = 86400000;\nexport var MS_PER_MINUTE = 60000;\n/**\n * Method to get height from element\n *\n * @param {Element} container Accepts the DOM element\n * @param {string} elementClass Accepts the element class\n * @returns {number} Returns the height of the element\n */\nexport function getElementHeightFromClass(container, elementClass) {\n    var height = 0;\n    var el = createElement('div', { className: elementClass }).cloneNode();\n    el.style.visibility = 'hidden';\n    el.style.position = 'absolute';\n    container.appendChild(el);\n    height = el.getBoundingClientRect().height;\n    remove(el);\n    return height;\n}\n/**\n * Method to get translateY value\n *\n * @param {HTMLElement | Element} element Accepts the DOM element\n * @returns {number} Returns the translateY value of given element\n */\nexport function getTranslateY(element) {\n    var style = getComputedStyle(element);\n    return window.WebKitCSSMatrix ?\n        new WebKitCSSMatrix(style.webkitTransform).m42 : 0;\n}\n/**\n * Method to get week first date\n *\n * @param {Date} date Accepts the date object\n * @param {number} firstDayOfWeek Accepts the first day of week number\n * @returns {Date} Returns the date object\n */\nexport function getWeekFirstDate(date, firstDayOfWeek) {\n    var date1 = new Date(date.getTime());\n    firstDayOfWeek = (firstDayOfWeek - date1.getDay() + 7 * (-1)) % 7;\n    return new Date(date1.setDate(date1.getDate() + firstDayOfWeek));\n}\n/**\n * Method to get week last date\n *\n * @param {Date} date Accepts the date object\n * @param {number} firstDayOfWeek Accepts the first day of week number\n * @returns {Date} Returns the date object\n */\nexport function getWeekLastDate(date, firstDayOfWeek) {\n    var weekFirst = getWeekFirstDate(date, firstDayOfWeek);\n    var weekLast = new Date(weekFirst.getFullYear(), weekFirst.getMonth(), weekFirst.getDate() + 6);\n    return new Date(weekLast.getTime());\n}\n/**\n * Method to get first date of month\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\nexport function firstDateOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n/**\n * Method to get last date of month\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\nexport function lastDateOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n/**\n * Method to get week number\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the week number\n */\nexport function getWeekNumber(date) {\n    var date1 = new Date(date.getFullYear(), 0, 1).valueOf();\n    var currentDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()).valueOf();\n    var dayOfYear = ((currentDate - date1 + MS_PER_DAY) / MS_PER_DAY);\n    return Math.ceil(dayOfYear / 7);\n}\n/**\n * Method to get week middle date\n *\n * @param {Date} weekFirst Accepts the week first date object\n * @param {Date} weekLast Accepts the week last date object\n * @returns {Date} Returns the date object\n */\nexport function getWeekMiddleDate(weekFirst, weekLast) {\n    return new Date(weekLast.valueOf() - ((weekLast.valueOf() - weekFirst.valueOf()) / 2));\n}\n/**\n * Method to set time to date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} time Accepts the milliseconds\n * @returns {Date} Returns the date object\n */\nexport function setTime(date, time) {\n    var tzOffsetBefore = date.getTimezoneOffset();\n    var d = new Date(date.getTime() + time);\n    var tzOffsetDiff = d.getTimezoneOffset() - tzOffsetBefore;\n    date.setTime(d.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n    return date;\n}\n/**\n * Method the reset hours in date object\n *\n * @param {Date} date Accepts the date object\n * @returns {Date} Returns the date object\n */\nexport function resetTime(date) {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n}\n/**\n * Method to get milliseconds from date object\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the milliseconds from date object\n */\nexport function getDateInMs(date) {\n    var localOffset = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTimezoneOffset();\n    var dateOffset = date.getTimezoneOffset();\n    var timezoneOffset = dateOffset - localOffset;\n    return ((date.getTime() - new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0).getTime())\n        - (timezoneOffset * 60 * 1000));\n}\n/**\n * Method to get date count between two dates\n *\n * @param {Date} startDate Accepts the date object\n * @param {Date} endDate Accepts the date object\n * @returns {number} Returns the date count\n */\nexport function getDateCount(startDate, endDate) {\n    return Math.ceil((endDate.getTime() - startDate.getTime()) / MS_PER_DAY);\n}\n/**\n * Method to add no of days in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfDays Accepts the number of days count\n * @returns {Date} Returns the date object\n */\nexport function addDays(date, noOfDays) {\n    date = new Date('' + date);\n    return new Date(date.setDate(date.getDate() + noOfDays));\n}\n/**\n * Method to add no of months in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfMonths Accepts the number of month count\n * @returns {Date} Returns the date object\n */\nexport function addMonths(date, noOfMonths) {\n    date = new Date('' + date);\n    var day = date.getDate();\n    date.setDate(1);\n    date.setMonth(date.getMonth() + noOfMonths);\n    date.setDate(Math.min(day, getMaxDays(date)));\n    return date;\n}\n/**\n * Method to add no of years in date object\n *\n * @param {Date} date Accepts the date object\n * @param {number} noOfYears Accepts the number of month count\n * @returns {Date} Returns the date object\n */\nexport function addYears(date, noOfYears) {\n    date = new Date('' + date);\n    var day = date.getDate();\n    date.setDate(1);\n    date.setFullYear(date.getFullYear() + noOfYears);\n    date.setDate(Math.min(day, getMaxDays(date)));\n    return date;\n}\n/**\n * Method to get start and end hours\n *\n * @param {Date} date Accepts the date object\n * @param {Date} startHour Accepts the start hour date object\n * @param {Date} endHour Accepts the end hour date object\n * @returns {Object} Returns the start and end hour date objects\n */\nexport function getStartEndHours(date, startHour, endHour) {\n    var date1 = new Date(date.getTime());\n    date1.setHours(startHour.getHours());\n    date1.setMinutes(startHour.getMinutes());\n    date1.setSeconds(startHour.getSeconds());\n    var date2 = new Date(date.getTime());\n    if (endHour.getHours() === 0) {\n        date2 = addDays(date2, 1);\n    }\n    else {\n        date2.setHours(endHour.getHours());\n        date2.setMinutes(endHour.getMinutes());\n        date2.setSeconds(endHour.getSeconds());\n    }\n    return { startHour: date1, endHour: date2 };\n}\n/**\n * Method to get month last date\n *\n * @param {Date} date Accepts the date object\n * @returns {number} Returns the month last date\n */\nexport function getMaxDays(date) {\n    return lastDateOfMonth(date).getDate();\n}\n/**\n * Method to get days count between two dates\n *\n * @param {Date} startDate Accepts the date object\n * @param {Date} endDate Accepts the date object\n * @returns {number} Returns the days count\n */\nexport function getDaysCount(startDate, endDate) {\n    var strTime = resetTime(new Date(startDate));\n    var endTime = resetTime(new Date(endDate));\n    return Math.round((endTime.getTime() - strTime.getTime()) / MS_PER_DAY);\n}\n/**\n * Method to get date object from date string\n *\n * @param {string} date Accepts the date string\n * @returns {Date} Returns the date object\n */\nexport function getDateFromString(date) {\n    return date.indexOf('Date') !== -1 ? new Date(parseInt(date.match(/\\d+/g).toString(), 10)) :\n        date.indexOf('T') !== -1 ? new Date(date) : new Date(date.replace(/-/g, '/'));\n}\n/** @private */\nvar scrollWidth = null;\n/**\n * Method to get scrollbar width\n *\n * @returns {number} Returns the scrollbar width\n * @private\n */\nexport function getScrollBarWidth() {\n    if (scrollWidth !== null) {\n        return scrollWidth;\n    }\n    var divNode = createElement('div');\n    var value = 0;\n    divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n    document.body.appendChild(divNode);\n    var ratio = (devicePixelRatio) ? (devicePixelRatio.toFixed(2) === '1.10' || devicePixelRatio <= 1) ?\n        Math.ceil(devicePixelRatio % 1) : Math.floor(devicePixelRatio % 1) : 0;\n    value = (divNode.offsetWidth - divNode.clientWidth - ratio) | 0;\n    document.body.removeChild(divNode);\n    return scrollWidth = value;\n}\n/**\n * Method to find the index from data collection\n *\n * @param {Object} data Accepts the data as object\n * @param {string} field Accepts the field name\n * @param {string} value Accepts the value name\n * @param {Object} event Accepts the data as object\n * @param {Object[]} resourceCollection Accepts the data collections\n * @returns {number} Returns the index number\n */\n// eslint-disable-next-line max-len\nexport function findIndexInData(data, field, value, event, resourceCollection) {\n    for (var i = 0, length_1 = data.length; i < length_1; i++) {\n        if (data[i][field] === value) {\n            if (event) {\n                var field_1 = resourceCollection.slice(-2)[0].field;\n                var res = (event[field_1] instanceof Array ? event[field_1] : [event[field_1]]);\n                var resData = res.join(',');\n                if (resData.includes(data[i][resourceCollection.slice(-1)[0].groupIDField])) {\n                    return i;\n                }\n            }\n            else {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n/**\n * Method to get element outer height\n *\n * @param {HTMLElement} element Accepts the DOM element\n * @returns {number} Returns the outer height of the given element\n */\nexport function getOuterHeight(element) {\n    var style = getComputedStyle(element);\n    return element.offsetHeight + (parseInt(style.marginTop, 10) || 0) + (parseInt(style.marginBottom, 10) || 0);\n}\n/**\n * Method to remove child elements\n *\n * @param {HTMLElement | Element} element Accepts the DOM element\n * @returns {void}\n */\nexport function removeChildren(element) {\n    var elementChildren = [].slice.call(element.children);\n    for (var _i = 0, elementChildren_1 = elementChildren; _i < elementChildren_1.length; _i++) {\n        var elementChild = elementChildren_1[_i];\n        if (!elementChild.classList.contains('blazor-template')) {\n            element.removeChild(elementChild);\n        }\n    }\n}\n/**\n * Method to check DST is present or not in date object\n *\n * @param {Date} date Accepts the date object\n * @returns {boolean} Returns the boolean value for either DST is present or not\n */\nexport function isDaylightSavingTime(date) {\n    var jan = new Date(date.getFullYear(), 0, 1);\n    var jul = new Date(date.getFullYear(), 6, 1);\n    return date.getTimezoneOffset() < Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n}\n/**\n * Method to get UTC time value from date\n *\n * @param {Date} date Accepts the date\n * @returns {number} Returns the UTC time value\n */\nexport function getUniversalTime(date) {\n    var year = date.getFullYear();\n    var month = date.getMonth();\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var seconds = date.getSeconds();\n    var milliseconds = date.getMilliseconds();\n    return Date.UTC(year, month, day, hours, minutes, seconds, milliseconds);\n}\n/**\n * Method to check the device\n *\n * @returns {boolean} Returns the boolean value for either device is present or not.\n */\nexport function isMobile() {\n    return window.navigator.userAgent.toLowerCase().indexOf('mobi') > -1;\n}\n/**\n * Method to check the IPad device\n *\n * @returns {boolean} Returns the boolean value for either IPad device is present or not.\n */\nexport function isIPadDevice() {\n    return window.navigator.userAgent.toLowerCase().indexOf('ipad') > -1;\n}\n/**\n * Method to capitalize the first word in string\n *\n * @param {string} inputString Accepts the string value\n * @param {string} type Accepts the string type\n * @returns {string} Returns the output string\n */\nexport function capitalizeFirstWord(inputString, type) {\n    if (type === 'multiple') {\n        inputString = inputString.split(' ').map(function (e) { return e.charAt(0).toLocaleUpperCase() + e.substring(1); }).join(' ');\n    }\n    else if (type === 'single') {\n        if (inputString[0] >= '0' && inputString[0] <= '9') {\n            var array = inputString.match(/[a-zA-Z]/);\n            inputString = isNullOrUndefined(array) ? inputString :\n                inputString.slice(0, array.index) + inputString[array.index].toLocaleUpperCase() + inputString.slice(array.index + 1);\n        }\n        inputString = inputString[0].toLocaleUpperCase() + inputString.slice(1);\n    }\n    return inputString;\n}\n"]},"metadata":{},"sourceType":"module"}