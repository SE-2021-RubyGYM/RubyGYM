{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule SyntheticMouseEvent\r\n * @typechecks static-only\r\n */\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n/**\r\n * @interface MouseEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\n\n\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n\n    if ('which' in event) {\n      return button;\n    } // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n\n\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n/**\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {string} dispatchMarker Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @extends {SyntheticUIEvent}\r\n */\n\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\nmodule.exports = SyntheticMouseEvent;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/SyntheticMouseEvent.js"],"names":["SyntheticUIEvent","require","ViewportMetrics","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","event","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","SyntheticMouseEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAD,CAAnC;AAEA;AACA;AACA;AACA;;;AACA,IAAIG,mBAAmB,GAAG;AACxBC,EAAAA,OAAO,EAAE,IADe;AAExBC,EAAAA,OAAO,EAAE,IAFe;AAGxBC,EAAAA,OAAO,EAAE,IAHe;AAIxBC,EAAAA,OAAO,EAAE,IAJe;AAKxBC,EAAAA,OAAO,EAAE,IALe;AAMxBC,EAAAA,QAAQ,EAAE,IANc;AAOxBC,EAAAA,MAAM,EAAE,IAPgB;AAQxBC,EAAAA,OAAO,EAAE,IARe;AASxBC,EAAAA,gBAAgB,EAAEV,qBATM;AAUxBW,EAAAA,MAAM,EAAE,UAAUC,KAAV,EAAiB;AACvB;AACA;AACA;AACA,QAAID,MAAM,GAAGC,KAAK,CAACD,MAAnB;;AACA,QAAI,WAAWC,KAAf,EAAsB;AACpB,aAAOD,MAAP;AACD,KAPsB,CAQvB;AACA;AACA;AACA;;;AACA,WAAOA,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmB,CAA7C;AACD,GAvBuB;AAwBxBE,EAAAA,OAAO,EAAE,IAxBe;AAyBxBC,EAAAA,aAAa,EAAE,UAAUF,KAAV,EAAiB;AAC9B,WAAOA,KAAK,CAACE,aAAN,KAAwBF,KAAK,CAACG,WAAN,KAAsBH,KAAK,CAACI,UAA5B,GAAyCJ,KAAK,CAACK,SAA/C,GAA2DL,KAAK,CAACG,WAAzF,CAAP;AACD,GA3BuB;AA4BxB;AACAG,EAAAA,KAAK,EAAE,UAAUN,KAAV,EAAiB;AACtB,WAAO,WAAWA,KAAX,GAAmBA,KAAK,CAACM,KAAzB,GAAiCN,KAAK,CAACR,OAAN,GAAgBL,eAAe,CAACoB,iBAAxE;AACD,GA/BuB;AAgCxBC,EAAAA,KAAK,EAAE,UAAUR,KAAV,EAAiB;AACtB,WAAO,WAAWA,KAAX,GAAmBA,KAAK,CAACQ,KAAzB,GAAiCR,KAAK,CAACP,OAAN,GAAgBN,eAAe,CAACsB,gBAAxE;AACD;AAlCuB,CAA1B;AAqCA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,WAA7D,EAA0EC,iBAA1E,EAA6F;AAC3F7B,EAAAA,gBAAgB,CAAC8B,IAAjB,CAAsB,IAAtB,EAA4BJ,cAA5B,EAA4CC,cAA5C,EAA4DC,WAA5D,EAAyEC,iBAAzE;AACD;;AAED7B,gBAAgB,CAAC+B,YAAjB,CAA8BN,mBAA9B,EAAmDrB,mBAAnD;AAEA4B,MAAM,CAACC,OAAP,GAAiBR,mBAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule SyntheticMouseEvent\r\n * @typechecks static-only\r\n */\r\n\r\n'use strict';\r\n\r\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\r\nvar ViewportMetrics = require('./ViewportMetrics');\r\n\r\nvar getEventModifierState = require('./getEventModifierState');\r\n\r\n/**\r\n * @interface MouseEvent\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\nvar MouseEventInterface = {\r\n  screenX: null,\r\n  screenY: null,\r\n  clientX: null,\r\n  clientY: null,\r\n  ctrlKey: null,\r\n  shiftKey: null,\r\n  altKey: null,\r\n  metaKey: null,\r\n  getModifierState: getEventModifierState,\r\n  button: function (event) {\r\n    // Webkit, Firefox, IE9+\r\n    // which:  1 2 3\r\n    // button: 0 1 2 (standard)\r\n    var button = event.button;\r\n    if ('which' in event) {\r\n      return button;\r\n    }\r\n    // IE<9\r\n    // which:  undefined\r\n    // button: 0 0 0\r\n    // button: 1 4 2 (onmouseup)\r\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\r\n  },\r\n  buttons: null,\r\n  relatedTarget: function (event) {\r\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\r\n  },\r\n  // \"Proprietary\" Interface.\r\n  pageX: function (event) {\r\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\r\n  },\r\n  pageY: function (event) {\r\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\r\n  }\r\n};\r\n\r\n/**\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {string} dispatchMarker Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @extends {SyntheticUIEvent}\r\n */\r\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\r\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\r\n}\r\n\r\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\r\n\r\nmodule.exports = SyntheticMouseEvent;"]},"metadata":{},"sourceType":"script"}