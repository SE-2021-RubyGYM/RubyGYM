{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest, remove } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { select, selectAll } from '@syncfusion/ej2-base';\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\nvar INPUT_WRAPPER = 'e-file-select';\nvar DROP_AREA = 'e-file-drop';\nvar DROP_WRAPPER = 'e-file-select-wrap';\nvar LIST_PARENT = 'e-upload-files';\nvar FILE = 'e-upload-file-list';\nvar STATUS = 'e-file-status';\nvar ACTION_BUTTONS = 'e-upload-actions';\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\nvar FILE_NAME = 'e-file-name';\nvar FILE_TYPE = 'e-file-type';\nvar FILE_SIZE = 'e-file-size';\nvar REMOVE_ICON = 'e-file-remove-btn';\nvar DELETE_ICON = 'e-file-delete-btn';\nvar SPINNER_PANE = 'e-spinner-pane';\nvar ABORT_ICON = 'e-file-abort-btn';\nvar RETRY_ICON = 'e-file-reload-btn';\nvar DRAG_HOVER = 'e-upload-drag-hover';\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\nvar PROGRESSBAR = 'e-upload-progress-bar';\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\nvar UPLOAD_SUCCESS = 'e-upload-success';\nvar UPLOAD_FAILED = 'e-upload-fails';\nvar TEXT_CONTAINER = 'e-file-container';\nvar VALIDATION_FAILS = 'e-validation-fails';\nvar RTL = 'e-rtl';\nvar DISABLED = 'e-disabled';\nvar RTL_CONTAINER = 'e-rtl-container';\nvar ICON_FOCUSED = 'e-clear-icon-focus';\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\nvar RESUME_UPLOAD = 'e-file-play-btn';\nvar RESTRICT_RETRY = 'e-restrict-retry';\nvar wrapperAttr = ['title', 'style', 'class'];\nvar FORM_UPLOAD = 'e-form-upload';\nvar HIDDEN_INPUT = 'e-hidden-file-input';\nvar INVALID_FILE = 'e-file-invalid';\nvar INFORMATION = 'e-file-information';\n\nvar FilesProp =\n/** @class */\nfunction (_super) {\n  __extends(FilesProp, _super);\n\n  function FilesProp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], FilesProp.prototype, \"name\", void 0);\n\n  __decorate([Property(null)], FilesProp.prototype, \"size\", void 0);\n\n  __decorate([Property('')], FilesProp.prototype, \"type\", void 0);\n\n  return FilesProp;\n}(ChildProperty);\n\nexport { FilesProp };\n\nvar ButtonsProps =\n/** @class */\nfunction (_super) {\n  __extends(ButtonsProps, _super);\n\n  function ButtonsProps() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Browse...')], ButtonsProps.prototype, \"browse\", void 0);\n\n  __decorate([Property('Upload')], ButtonsProps.prototype, \"upload\", void 0);\n\n  __decorate([Property('Clear')], ButtonsProps.prototype, \"clear\", void 0);\n\n  return ButtonsProps;\n}(ChildProperty);\n\nexport { ButtonsProps };\n\nvar AsyncSettings =\n/** @class */\nfunction (_super) {\n  __extends(AsyncSettings, _super);\n\n  function AsyncSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('')], AsyncSettings.prototype, \"saveUrl\", void 0);\n\n  __decorate([Property('')], AsyncSettings.prototype, \"removeUrl\", void 0);\n\n  __decorate([Property(0)], AsyncSettings.prototype, \"chunkSize\", void 0);\n\n  __decorate([Property(3)], AsyncSettings.prototype, \"retryCount\", void 0);\n\n  __decorate([Property(500)], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\n\n  return AsyncSettings;\n}(ChildProperty);\n\nexport { AsyncSettings };\n/**\r\n * The uploader component allows to upload images, documents, and other files from local to server.\r\n * ```html\r\n * <input type='file' name='images[]' id='upload'/>\r\n * ```\r\n * ```typescript\r\n * <script>\r\n *   var uploadObj = new Uploader();\r\n *   uploadObj.appendTo('#upload');\r\n * </script>\r\n * ```\r\n */\n\nvar Uploader =\n/** @class */\nfunction (_super) {\n  __extends(Uploader, _super);\n  /**\r\n   * Triggers when change the Uploader value.\r\n   *\r\n   * @param {UploaderModel} options - Specifies the Uploader model.\r\n   * @param {string | HTMLInputElement} element - Specifies the element to render as component.\r\n   * @private\r\n   */\n\n\n  function Uploader(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.initialAttr = {\n      accept: null,\n      multiple: false,\n      disabled: false\n    };\n    _this.uploadedFilesData = [];\n    _this.base64String = [];\n    _this.isForm = false;\n    _this.allTypes = false;\n    _this.pausedData = [];\n    _this.uploadMetaData = [];\n    _this.tabIndex = '0';\n    _this.btnTabIndex = '0';\n    _this.disableKeyboardNavigation = false;\n    _this.count = -1;\n    _this.actionCompleteCount = 0;\n    _this.flag = true;\n    _this.selectedFiles = [];\n    _this.uploaderName = 'UploadFiles';\n    _this.fileStreams = [];\n    _this.newFileRef = 0;\n    _this.isFirstFileOnSelection = false;\n    _this.dragCounter = 0;\n    /**\r\n     * Get the file item(li) which are shown in file list.\r\n     *\r\n     * @private\r\n     */\n\n    _this.fileList = [];\n    /**\r\n     * Get the data of files which are shown in file list.\r\n     *\r\n     * @private\r\n     */\n\n    _this.filesData = [];\n    _this.uploaderOptions = options;\n    return _this;\n  }\n  /**\r\n   * Calls internally if any of the property value is changed.\r\n   *\r\n   * @param {UploaderModel} newProp - Returns the dynamic property value of the component.\r\n   * @param {UploaderModel} oldProp - Returns the previous property value of the component.\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowedExtensions':\n          this.setExtensions(this.allowedExtensions);\n          this.clearAll();\n          break;\n\n        case 'enabled':\n          this.setControlStatus();\n          break;\n\n        case 'multiple':\n          this.setMultipleSelection();\n          break;\n\n        case 'enableRtl':\n          this.setRTL();\n          this.reRenderFileList();\n          break;\n\n        case 'buttons':\n          this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\n          this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\n          this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\n          this.renderButtonTemplates();\n          break;\n\n        case 'dropArea':\n          this.unBindDropEvents();\n          this.updateDropArea();\n          break;\n\n        case 'htmlAttributes':\n          this.updateHTMLAttrToElement();\n          this.updateHTMLAttrToWrapper();\n          this.checkHTMLAttributes(true);\n          break;\n\n        case 'files':\n          this.renderPreLoadFiles();\n          break;\n\n        case 'directoryUpload':\n          this.updateDirectoryAttributes();\n          break;\n\n        case 'template':\n          this.clearAll();\n          break;\n\n        case 'minFileSize':\n        case 'maxFileSize':\n        case 'autoUpload':\n          this.clearAll();\n          break;\n\n        case 'sequentialUpload':\n          this.clearAll();\n          break;\n\n        case 'locale':\n          this.l10n.setLocale(this.locale);\n          this.setLocalizedTexts();\n          this.preLocaleObj = getValue('currentLocale', this.l10n);\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n      }\n    }\n  };\n\n  Uploader.prototype.setLocalizedTexts = function () {\n    if (isNullOrUndefined(this.template)) {\n      if (typeof this.buttons.browse === 'string') {\n        this.browseButton.innerText = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n        this.browseButton.setAttribute('title', this.browseButton.innerText);\n\n        if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\n          this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\n        }\n      }\n\n      this.updateFileList();\n    }\n  };\n\n  Uploader.prototype.getKeyValue = function (val) {\n    var keyValue;\n\n    for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      if (this.preLocaleObj[key] === val) {\n        keyValue = key;\n      }\n    }\n\n    return keyValue;\n  };\n\n  Uploader.prototype.updateFileList = function () {\n    var element;\n    /* istanbul ignore next */\n\n    if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\n      for (var i = 0; i < this.fileList.length; i++) {\n        element = this.fileList[i].querySelector('.e-file-status');\n        element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n        this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\n\n        if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-play-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-remove-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\n        }\n\n        if (this.fileList[i].querySelector('.e-file-reload-btn')) {\n          this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\n        }\n\n        if (!this.autoUpload) {\n          this.uploadButton.innerText = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n          this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\n          this.clearButton.innerText = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n          this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.reRenderFileList = function () {\n    if (this.listParent) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createFileList(this.filesData);\n\n      if (this.actionButtons) {\n        this.removeActionButtons();\n        this.renderActionButtons();\n        this.checkActionButtonStatus();\n      }\n    }\n  };\n\n  Uploader.prototype.preRender = function () {\n    this.localeText = {\n      Browse: 'Browse...',\n      Clear: 'Clear',\n      Upload: 'Upload',\n      dropFilesHint: 'Or drop files here',\n      invalidMaxFileSize: 'File size is too large',\n      invalidMinFileSize: 'File size is too small',\n      invalidFileType: 'File type is not allowed',\n      uploadFailedMessage: 'File failed to upload',\n      uploadSuccessMessage: 'File uploaded successfully',\n      removedSuccessMessage: 'File removed successfully',\n      removedFailedMessage: 'Unable to remove file',\n      inProgress: 'Uploading',\n      readyToUploadMessage: 'Ready to upload',\n      abort: 'Abort',\n      remove: 'Remove',\n      cancel: 'Cancel',\n      delete: 'Delete file',\n      pauseUpload: 'File upload paused',\n      pause: 'Pause',\n      resume: 'Resume',\n      retry: 'Retry',\n      fileUploadCancel: 'File upload canceled',\n      invalidFileSelection: 'Invalid files selected',\n      totalFiles: 'Total files',\n      size: 'Size'\n    };\n    this.l10n = new L10n('uploader', this.localeText, this.locale);\n    this.preLocaleObj = getValue('currentLocale', this.l10n);\n    this.formRendered();\n    this.updateHTMLAttrToElement();\n    this.checkHTMLAttributes(false);\n    var ejInstance = getValue('ej2_instances', this.element);\n    /* istanbul ignore next */\n\n    if (this.element.tagName === 'EJS-UPLOADER') {\n      var inputElement = this.createElement('input', {\n        attrs: {\n          type: 'file'\n        }\n      });\n      var index = 0;\n\n      for (index; index < this.element.attributes.length; index++) {\n        inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\n        inputElement.innerHTML = this.element.innerHTML;\n      }\n\n      if (!inputElement.hasAttribute('name')) {\n        inputElement.setAttribute('name', 'UploadFiles');\n      }\n\n      this.element.appendChild(inputElement);\n      this.element = inputElement;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n    /* istanbul ignore next */\n\n\n    if (ejInstance[0].isPureReactComponent) {\n      if (!isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.name);\n      } else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\n        this.element.setAttribute('name', ejInstance[0].props.id);\n      } else {\n        this.element.setAttribute('name', 'UploadFiles');\n      }\n    }\n\n    if (isNullOrUndefined(this.element.getAttribute('name'))) {\n      this.element.setAttribute('name', this.element.getAttribute('id'));\n    }\n\n    if (!this.element.hasAttribute('type')) {\n      this.element.setAttribute('type', 'file');\n    }\n\n    this.updateDirectoryAttributes();\n    this.keyConfigs = {\n      enter: 'enter'\n    };\n\n    if (this.element.hasAttribute('tabindex')) {\n      this.tabIndex = this.element.getAttribute('tabindex');\n    }\n\n    this.browserName = Browser.info.name;\n    this.uploaderName = this.element.getAttribute('name');\n  };\n\n  Uploader.prototype.formRendered = function () {\n    var parentEle = closest(this.element, 'form');\n\n    if (!isNullOrUndefined(parentEle)) {\n      for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\n        if (parentEle.tagName === 'FORM') {\n          this.isForm = true;\n          this.formElement = parentEle;\n          parentEle.setAttribute('enctype', 'multipart/form-data');\n          parentEle.setAttribute('encoding', 'multipart/form-data');\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.getPersistData = function () {\n    return this.addOnPersist(['filesData']);\n  };\n  /**\r\n   * Return the module name of the component.\r\n   *\r\n   * @returns {string} Returns the component name.\r\n   */\n\n\n  Uploader.prototype.getModuleName = function () {\n    return 'uploader';\n  };\n\n  Uploader.prototype.updateDirectoryAttributes = function () {\n    if (this.directoryUpload) {\n      this.element.setAttribute('directory', 'true');\n      this.element.setAttribute('webkitdirectory', 'true');\n    } else {\n      this.element.removeAttribute('directory');\n      this.element.removeAttribute('webkitdirectory');\n    }\n  };\n  /**\r\n   * To Initialize the control rendering\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.render = function () {\n    this.renderBrowseButton();\n    this.initializeUpload();\n    this.updateHTMLAttrToWrapper();\n    this.wireEvents();\n    this.setMultipleSelection();\n    this.setExtensions(this.allowedExtensions);\n    this.setRTL();\n    this.renderPreLoadFiles();\n    this.setControlStatus();\n    this.setCSSClass();\n  };\n\n  Uploader.prototype.renderBrowseButton = function () {\n    this.browseButton = this.createElement('button', {\n      className: 'e-css e-btn',\n      attrs: {\n        'type': 'button'\n      }\n    });\n    this.browseButton.setAttribute('tabindex', this.tabIndex);\n\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.innerText);\n    } else {\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    this.element.setAttribute('aria-label', 'Uploader');\n  };\n\n  Uploader.prototype.renderActionButtons = function () {\n    this.element.setAttribute('tabindex', '-1');\n    this.actionButtons = this.createElement('div', {\n      className: ACTION_BUTTONS\n    });\n    this.uploadButton = this.createElement('button', {\n      className: UPLOAD_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.clearButton = this.createElement('button', {\n      className: CLEAR_BUTTONS,\n      attrs: {\n        'type': 'button',\n        'tabindex': this.btnTabIndex\n      }\n    });\n    this.actionButtons.appendChild(this.clearButton);\n    this.actionButtons.appendChild(this.uploadButton);\n    this.renderButtonTemplates();\n    this.uploadWrapper.appendChild(this.actionButtons);\n    this.browseButton.blur();\n\n    if (!this.isPreloadFiles) {\n      this.uploadButton.focus();\n    }\n\n    this.wireActionButtonEvents();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverActionButtonsEventBind = function (element) {\n    if (element && !this.isForm) {\n      this.browseButton.blur();\n      this.actionButtons = element;\n      this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\n      this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\n      this.uploadButton.focus();\n      this.unwireActionButtonEvents();\n      this.wireActionButtonEvents();\n      this.checkActionButtonStatus();\n    }\n  };\n\n  Uploader.prototype.wireActionButtonEvents = function () {\n    EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\n    EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\n  };\n\n  Uploader.prototype.unwireActionButtonEvents = function () {\n    EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\n    EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\n  };\n\n  Uploader.prototype.removeActionButtons = function () {\n    if (this.actionButtons) {\n      this.unwireActionButtonEvents();\n      detach(this.actionButtons);\n      this.actionButtons = null;\n    }\n  };\n\n  Uploader.prototype.renderButtonTemplates = function () {\n    if (typeof this.buttons.browse === 'string') {\n      this.browseButton.textContent = this.buttons.browse === 'Browse...' ? this.localizedTexts('Browse') : this.buttons.browse;\n      this.browseButton.setAttribute('title', this.browseButton.textContent);\n    } else {\n      this.browseButton.innerHTML = '';\n      this.browseButton.appendChild(this.buttons.browse);\n    }\n\n    if (this.uploadButton) {\n      var uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\n      this.buttons.upload = uploadText;\n\n      if (typeof this.buttons.upload === 'string') {\n        this.uploadButton.textContent = this.buttons.upload === 'Upload' ? this.localizedTexts('Upload') : this.buttons.upload;\n        this.uploadButton.setAttribute('title', this.uploadButton.textContent);\n      } else {\n        this.uploadButton.innerHTML = '';\n        this.uploadButton.appendChild(this.buttons.upload);\n      }\n    }\n\n    if (this.clearButton) {\n      var clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\n      this.buttons.clear = clearText;\n\n      if (typeof this.buttons.clear === 'string') {\n        this.clearButton.textContent = this.buttons.clear === 'Clear' ? this.localizedTexts('Clear') : this.buttons.clear;\n        this.clearButton.setAttribute('title', this.clearButton.textContent);\n      } else {\n        this.clearButton.innerHTML = '';\n        this.clearButton.appendChild(this.buttons.clear);\n      }\n    }\n  };\n\n  Uploader.prototype.initializeUpload = function () {\n    this.element.setAttribute('tabindex', '-1');\n    var inputWrapper = this.createElement('span', {\n      className: INPUT_WRAPPER\n    });\n    this.element.parentElement.insertBefore(inputWrapper, this.element);\n    this.dropAreaWrapper = this.createElement('div', {\n      className: DROP_WRAPPER\n    });\n    this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\n    inputWrapper.appendChild(this.element);\n    this.dropAreaWrapper.appendChild(this.browseButton);\n    this.dropAreaWrapper.appendChild(inputWrapper);\n    this.uploadWrapper = this.createElement('div', {\n      className: CONTROL_WRAPPER\n    });\n    this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\n    this.uploadWrapper.appendChild(this.dropAreaWrapper);\n    this.setDropArea();\n  };\n\n  Uploader.prototype.renderPreLoadFiles = function () {\n    if (this.files.length) {\n      if (this.enablePersistence && this.filesData.length) {\n        this.createFileList(this.filesData);\n        return;\n      }\n\n      if (isNullOrUndefined(this.files[0].size)) {\n        return;\n      }\n\n      this.isPreloadFiles = true;\n      var files = [].slice.call(this.files);\n      var filesData = [];\n\n      if (!this.multiple) {\n        this.clearData();\n        files = [files[0]];\n      }\n\n      for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n        var data = files_1[_i];\n        var fileData = {\n          name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\n          rawFile: '',\n          size: data.size,\n          status: this.localizedTexts('uploadSuccessMessage'),\n          type: data.type,\n          validationMessages: {\n            minSize: '',\n            maxSize: ''\n          },\n          statusCode: '2'\n        };\n        filesData.push(fileData);\n        this.filesData.push(fileData);\n      }\n\n      this.createFileList(filesData);\n\n      if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\n        this.renderActionButtons();\n      }\n\n      this.checkActionButtonStatus();\n\n      if (this.sequentialUpload) {\n        this.count = this.filesData.length - 1;\n      }\n\n      this.isPreloadFiles = false;\n    }\n  };\n\n  Uploader.prototype.checkActionButtonStatus = function () {\n    if (this.actionButtons) {\n      var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length + this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length + this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\n\n      if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      } else {\n        this.uploadButton.removeAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.setDropArea = function () {\n    var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n\n    if (this.dropArea) {\n      this.dropZoneElement = typeof this.dropArea !== 'string' ? this.dropArea : select(this.dropArea, document);\n      var element = this.element;\n      var enableDropText = false;\n\n      while (element.parentNode) {\n        element = element.parentNode;\n\n        if (element === this.dropZoneElement) {\n          enableDropText = true;\n\n          if (!dropTextArea) {\n            this.createDropTextHint();\n          } else {\n            dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\n          }\n        }\n      }\n\n      if (!enableDropText && dropTextArea) {\n        remove(dropTextArea);\n      }\n    } else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\n      this.createDropTextHint();\n      this.dropZoneElement = this.uploadWrapper;\n      this.setProperties({\n        dropArea: this.uploadWrapper\n      }, true);\n    }\n\n    this.bindDropEvents();\n  };\n\n  Uploader.prototype.updateDropArea = function () {\n    if (this.dropArea) {\n      this.setDropArea();\n    } else {\n      this.dropZoneElement = null;\n      var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\n\n      if (dropTextArea) {\n        remove(dropTextArea);\n      }\n    }\n  };\n\n  Uploader.prototype.createDropTextHint = function () {\n    var fileDropArea = this.createElement('span', {\n      className: DROP_AREA\n    });\n    fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\n    this.dropAreaWrapper.appendChild(fileDropArea);\n  };\n\n  Uploader.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) < 0) {\n          this.element.setAttribute(pro, this.htmlAttributes[pro]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var pro = _a[_i];\n\n        if (wrapperAttr.indexOf(pro) > -1) {\n          if (pro === 'class') {\n            var updatedClassValues = this.htmlAttributes[pro].replace(/\\s+/g, ' ').trim();\n\n            if (updatedClassValues !== '') {\n              addClass([this.uploadWrapper], updatedClassValues.split(' '));\n            }\n          } else if (pro === 'style') {\n            var uploadStyle = this.uploadWrapper.getAttribute(pro);\n            uploadStyle = !isNullOrUndefined(uploadStyle) ? uploadStyle + this.htmlAttributes[pro] : this.htmlAttributes[pro];\n            this.uploadWrapper.setAttribute(pro, uploadStyle);\n          } else {\n            this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\n          }\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.setMultipleSelection = function () {\n    if (this.multiple && !this.element.hasAttribute('multiple')) {\n      var newAttr = document.createAttribute('multiple');\n      newAttr.value = 'multiple';\n      this.element.setAttributeNode(newAttr);\n    } else if (!this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n  };\n\n  Uploader.prototype.checkAutoUpload = function (fileData) {\n    if (this.autoUpload) {\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.sequenceUpload(fileData);\n      } else {\n        this.upload(fileData);\n      }\n\n      this.removeActionButtons();\n    } else if (!this.actionButtons) {\n      this.renderActionButtons();\n    }\n\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.sequenceUpload = function (fileData) {\n    if (this.filesData.length - fileData.length === 0 || this.filesData[this.filesData.length - fileData.length - 1].statusCode !== '1') {\n      ++this.count;\n      var isFileListCreated = this.showFileList ? false : true;\n\n      if (typeof this.filesData[this.count] === 'object') {\n        this.isFirstFileOnSelection = false;\n        this.upload(this.filesData[this.count], isFileListCreated);\n\n        if (this.filesData[this.count].statusCode === '0') {\n          this.sequenceUpload(fileData);\n        }\n      } else {\n        --this.count;\n      }\n    }\n  };\n\n  Uploader.prototype.setCSSClass = function (oldCSSClass) {\n    var updatedCssClassValue = this.cssClass;\n\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValue = this.cssClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\n      addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\n    }\n\n    var updatedOldCssClass = oldCSSClass;\n\n    if (!isNullOrUndefined(oldCSSClass)) {\n      updatedOldCssClass = oldCSSClass.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\n      removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\n    }\n  };\n\n  Uploader.prototype.wireEvents = function () {\n    EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\n    EventHandler.add(this.element, 'change', this.onSelectFiles, this);\n    EventHandler.add(document, 'click', this.removeFocus, this);\n    this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n\n    if (this.isForm) {\n      EventHandler.add(this.formElement, 'reset', this.resetForm, this);\n    }\n  };\n\n  Uploader.prototype.unWireEvents = function () {\n    EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\n    EventHandler.remove(this.element, 'change', this.onSelectFiles);\n    EventHandler.remove(document, 'click', this.removeFocus);\n\n    if (this.isForm) {\n      EventHandler.remove(this.formElement, 'reset', this.resetForm);\n    }\n\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n    }\n  };\n\n  Uploader.prototype.resetForm = function () {\n    this.clearAll();\n  };\n\n  Uploader.prototype.keyActionHandler = function (e) {\n    var targetElement = e.target;\n\n    switch (e.action) {\n      case 'enter':\n        if (e.target === this.clearButton) {\n          this.clearButtonClick();\n        } else if (e.target === this.uploadButton) {\n          this.uploadButtonClick();\n        } else if (e.target === this.browseButton) {\n          this.browseButtonClick();\n        } else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n          var metaData = this.getCurrentMetaData(null, e);\n          metaData.file.statusCode = '4';\n          metaData.file.status = this.localizedTexts('pauseUpload');\n          this.abortUpload(metaData, false);\n        } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n          this.resumeUpload(this.getCurrentMetaData(null, e), e);\n        } else if (targetElement.classList.contains(RETRY_ICON)) {\n          var metaData = this.getCurrentMetaData(null, e);\n\n          if (!isNullOrUndefined(metaData)) {\n            metaData.file.statusCode = '1';\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\n            this.chunkUpload(metaData.file);\n          } else {\n            var target = e.target.parentElement;\n            var fileData = this.filesData[this.fileList.indexOf(target)];\n            this.retry(fileData);\n          }\n        } else {\n          this.removeFiles(e);\n\n          if (!targetElement.classList.contains(ABORT_ICON)) {\n            this.browseButton.focus();\n          }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n    }\n  };\n\n  Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\n    var fileData;\n    var targetMetaData;\n\n    if (isNullOrUndefined(fileInfo)) {\n      var target = e.target.parentElement;\n      fileData = this.filesData[this.fileList.indexOf(target)];\n    } else {\n      fileData = fileInfo;\n    }\n\n    for (var i = 0; i < this.uploadMetaData.length; i++) {\n      if (this.uploadMetaData[i].file.name === fileData.name) {\n        targetMetaData = this.uploadMetaData[i];\n      }\n    }\n\n    return targetMetaData;\n  };\n\n  Uploader.prototype.removeFocus = function () {\n    if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\n      document.activeElement.blur();\n      this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\n    }\n  };\n\n  Uploader.prototype.browseButtonClick = function () {\n    this.element.click();\n  };\n\n  Uploader.prototype.uploadButtonClick = function () {\n    if (this.sequentialUpload) {\n      this.sequenceUpload(this.filesData);\n    } else {\n      this.upload(this.filesData);\n    }\n  };\n\n  Uploader.prototype.clearButtonClick = function () {\n    this.clearAll();\n    /* istanbul ignore next */\n\n    if (this.sequentialUpload) {\n      this.count = -1;\n    }\n\n    this.actionCompleteCount = 0;\n  };\n\n  Uploader.prototype.bindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\n      EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\n      EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\n      EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\n      EventHandler.add(this.dropZoneElement, 'dragenter', this.onDragEnter, this);\n    }\n  };\n\n  Uploader.prototype.unBindDropEvents = function () {\n    if (this.dropZoneElement) {\n      EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\n      EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\n      EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\n      EventHandler.remove(this.dropZoneElement, 'dragenter', this.onDragEnter);\n    }\n  };\n\n  Uploader.prototype.onDragEnter = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.dropZoneElement.classList.add(DRAG_HOVER);\n    this.dragCounter = this.dragCounter + 1;\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  Uploader.prototype.onDragLeave = function () {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.dragCounter = this.dragCounter - 1;\n\n    if (!this.dragCounter) {\n      this.dropZoneElement.classList.remove(DRAG_HOVER);\n    }\n  };\n\n  Uploader.prototype.dragHover = function (e) {\n    if (!this.enabled) {\n      return;\n    }\n\n    if (this.dropEffect !== 'Default') {\n      e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.dropElement = function (e) {\n    this.dragCounter = 0;\n    this.dropZoneElement.classList.remove(DRAG_HOVER);\n    this.onSelectFiles(e);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.onPasteFile = function (event) {\n    var item = event.clipboardData.items;\n\n    if (item.length !== 1) {\n      return;\n    }\n\n    var pasteFile = [].slice.call(item)[0];\n\n    if (pasteFile.kind === 'file' && pasteFile.type.match('^image/')) {\n      this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\n    }\n  };\n\n  Uploader.prototype.getSelectedFiles = function (index) {\n    var data = [];\n    var liElement = this.fileList[index];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < index; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    for (var j = startIndex; j < startIndex + nameElements; j++) {\n      data.push(allFiles[j]);\n    }\n\n    return data;\n  };\n\n  Uploader.prototype.removeFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var selectedElement = args.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var liElement = this.fileList[index];\n    var formUpload = this.isFormUpload();\n    var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\n\n    if (isNullOrUndefined(fileData)) {\n      return;\n    }\n\n    if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\n      fileData[0].statusCode = '5';\n\n      if (!isNullOrUndefined(liElement)) {\n        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n        createSpinner({\n          target: spinnerTarget,\n          width: '20px'\n        });\n        showSpinner(spinnerTarget);\n      }\n\n      if (this.sequentialUpload) {\n        /* istanbul ignore next */\n        this.uploadSequential();\n      }\n\n      if (!liElement.classList.contains(RESTRICT_RETRY)) {\n        this.checkActionComplete(true);\n      }\n    } else if (!closest(args.target, '.' + SPINNER_PANE)) {\n      this.remove(fileData, false, false, true, args);\n    }\n\n    this.element.value = '';\n    this.checkActionButtonStatus();\n  };\n\n  Uploader.prototype.removeFilesData = function (file, customTemplate) {\n    var index;\n\n    if (customTemplate) {\n      if (!this.showFileList) {\n        index = this.filesData.indexOf(file);\n        this.filesData.splice(index, 1);\n      }\n\n      return;\n    }\n\n    var selectedElement = this.getLiElement(file);\n\n    if (isNullOrUndefined(selectedElement)) {\n      return;\n    }\n\n    detach(selectedElement);\n    index = this.fileList.indexOf(selectedElement);\n    this.fileList.splice(index, 1);\n    this.filesData.splice(index, 1);\n\n    if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n      this.removeActionButtons();\n    }\n\n    if (this.sequentialUpload) {\n      /* istanbul ignore next */\n      if (index <= this.count) {\n        --this.count;\n      }\n    }\n  };\n\n  Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\n    var _this = this;\n\n    var selectedFiles = file;\n    var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n\n      if (!removeDirectly) {\n        _this.trigger('removing', eventArgs, function (eventArgs) {\n          if (eventArgs.cancel) {\n            e.cancel = true;\n          } else {\n            _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n          }\n        });\n      } else {\n        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\n      }\n    };\n\n    ajax.onLoad = function (e) {\n      _this.removeCompleted(e, selectedFiles, custom);\n\n      return {};\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.removeFailed(e, selectedFiles, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n  };\n\n  Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\n    /* istanbul ignore next */\n    var name = this.element.getAttribute('name');\n    var liElement = this.getLiElement(file);\n\n    if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) || !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ? liElement.querySelector('.' + DELETE_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n\n    if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\n      formData.append(name, selectedFiles.rawFile, selectedFiles.name);\n    } else {\n      formData.append(name, selectedFiles.name);\n    }\n\n    this.updateFormData(formData, eventArgs.customFormData);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateFormData = function (formData, customData) {\n    if (customData.length > 0 && customData[0]) {\n      var _loop_1 = function (i) {\n        var data = customData[i]; // eslint-disable-next-line @typescript-eslint/tslint/config\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        formData.append(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < customData.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateCustomheader = function (request, currentRequest) {\n    if (currentRequest.length > 0 && currentRequest[0]) {\n      var _loop_2 = function (i) {\n        var data = currentRequest[i]; // eslint-disable-next-line @typescript-eslint/tslint/config\n\n        var value = Object.keys(data).map(function (e) {\n          return data[e];\n        });\n        request.setRequestHeader(Object.keys(data)[0], value);\n      };\n\n      for (var i = 0; i < currentRequest.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n\n  Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var status = e.target;\n\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var args = {\n        e: e,\n        response: response,\n        operation: 'remove',\n        file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\n      };\n      this.trigger('success', args);\n      this.removeFilesData(files, customTemplate);\n      var index = this.uploadedFilesData.indexOf(files);\n      this.uploadedFilesData.splice(index, 1);\n      this.trigger('change', {\n        files: this.uploadedFilesData\n      });\n    } else {\n      this.removeFailed(e, files, customTemplate);\n    }\n  };\n\n  Uploader.prototype.removeFailed = function (e, files, customTemplate) {\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      e: e,\n      response: response,\n      operation: 'remove',\n      file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\n    };\n\n    if (!customTemplate) {\n      var index = this.filesData.indexOf(files);\n      var rootElement = this.fileList[index];\n\n      if (rootElement) {\n        rootElement.classList.remove(UPLOAD_SUCCESS);\n        rootElement.classList.add(UPLOAD_FAILED);\n        var statusElement = rootElement.querySelector('.' + STATUS);\n\n        if (statusElement) {\n          statusElement.classList.remove(UPLOAD_SUCCESS);\n          statusElement.classList.add(UPLOAD_FAILED);\n        }\n      }\n\n      this.checkActionButtonStatus();\n    }\n\n    this.trigger('failure', args);\n    var liElement = this.getLiElement(files);\n    /* istanbul ignore next */\n\n    if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\n      hideSpinner(spinnerTarget);\n      detach(liElement.querySelector('.e-spinner-pane'));\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFilesFromFolder = function (event) {\n    this.filesEntries = [];\n    var items = this.multiple ? event.dataTransfer.items : [event.dataTransfer.items[0]];\n    var validDirectoryUpload = this.checkDirectoryUpload(items);\n\n    if (!validDirectoryUpload) {\n      return;\n    }\n\n    var _loop_3 = function (i) {\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isFile) {\n        var files_2 = [];\n        item.file(function (fileObj) {\n          var path = item.fullPath;\n          files_2.push({\n            'path': path,\n            'file': fileObj\n          });\n        });\n        this_1.renderSelectedFiles(event, files_2, true);\n      } else if (item.isDirectory) {\n        this_1.traverseFileTree(item, event);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < items.length; i++) {\n      _loop_3(i);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.checkDirectoryUpload = function (items) {\n    for (var i = 0; items && i < items.length; i++) {\n      var item = items[i].webkitGetAsEntry();\n\n      if (item.isDirectory) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.traverseFileTree = function (item, event) {\n    /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n    if (item.isFile) {\n      this.filesEntries.push(item);\n    } else if (item.isDirectory) {\n      var directoryReader = item.createReader();\n      this.readFileFromDirectory(directoryReader, event);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\n    var _this = this;\n\n    directoryReader.readEntries(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        _this.traverseFileTree(entries[i], event);\n      }\n\n      _this.pushFilesEntries(event);\n\n      if (entries.length) {\n        _this.readFileFromDirectory(directoryReader);\n      }\n    });\n  };\n\n  Uploader.prototype.pushFilesEntries = function (event) {\n    var _this = this;\n\n    var files = [];\n\n    var _loop_4 = function (i) {\n      this_2.filesEntries[i].file(function (fileObj) {\n        if (_this.filesEntries.length) {\n          var path = _this.filesEntries[i].fullPath;\n          files.push({\n            'path': path,\n            'file': fileObj\n          });\n\n          if (i === _this.filesEntries.length - 1) {\n            _this.filesEntries = [];\n\n            _this.renderSelectedFiles(event, files, true);\n          }\n        }\n      });\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < this.filesEntries.length; i++) {\n      _loop_4(i);\n    }\n  };\n\n  Uploader.prototype.onSelectFiles = function (args) {\n    if (!this.enabled) {\n      return;\n    }\n\n    var targetFiles;\n    /* istanbul ignore next */\n\n    if (args.type === 'drop') {\n      if (this.directoryUpload) {\n        this.getFilesFromFolder(args);\n      } else {\n        var files = this.sortFilesList = args.dataTransfer.files;\n\n        if (this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\n          this.element.files = files;\n        }\n\n        if (files.length > 0) {\n          targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\n          this.renderSelectedFiles(args, targetFiles);\n        }\n      }\n    } else {\n      targetFiles = [].slice.call(args.target.files);\n      this.renderSelectedFiles(args, targetFiles);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getBase64 = function (file) {\n    return new Promise(function (resolve, reject) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = function () {\n        return resolve(fileReader.result);\n      };\n\n      fileReader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  };\n  /* istanbul ignore next */\n\n  /* tslint:ignore */\n\n\n  Uploader.prototype.renderSelectedFiles = function (args, targetFiles, directory, paste) {\n    var _this = this;\n\n    this.base64String = [];\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      isModified: false,\n      modifiedFilesData: [],\n      progressInterval: '',\n      isCanceled: false,\n      currentRequest: null,\n      customFormData: null\n    };\n    /* istanbul ignore next */\n\n    if (targetFiles.length < 1) {\n      eventArgs.isCanceled = true;\n      this.trigger('selected', eventArgs);\n      return;\n    }\n\n    this.flag = true;\n    var fileData = [];\n\n    if (!this.multiple) {\n      this.clearData(true);\n      targetFiles = [targetFiles[0]];\n    }\n\n    for (var i = 0; i < targetFiles.length; i++) {\n      var file = directory ? targetFiles[i].file : targetFiles[i];\n      this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\n    }\n\n    eventArgs.filesData = fileData;\n\n    if (this.allowedExtensions.indexOf('*') > -1) {\n      this.allTypes = true;\n    }\n\n    if (!this.allTypes) {\n      fileData = this.checkExtension(fileData);\n    }\n\n    this.trigger('selected', eventArgs, function (eventArgs) {\n      _this._internalRenderSelect(eventArgs, fileData);\n    });\n  };\n\n  Uploader.prototype.updateInitialFileDetails = function (args, // eslint-disable-next-line @typescript-eslint/indent\n  targetFiles, file, i, fileData, directory, paste) {\n    var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ? getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) : this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\n    var fileDetails = {\n      name: fileName,\n      rawFile: file,\n      size: file.size,\n      status: this.localizedTexts('readyToUploadMessage'),\n      type: this.getFileType(file.name),\n      validationMessages: this.validatedFileSize(file.size),\n      statusCode: '1',\n      id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\n    };\n    /* istanbul ignore next */\n\n    if (paste) {\n      fileDetails.fileSource = 'paste';\n    }\n\n    fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\n\n    if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\n      fileDetails.statusCode = '0';\n    }\n\n    fileData.push(fileDetails);\n  };\n\n  Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\n    if (!eventArgs.cancel) {\n      /* istanbul ignore next */\n      this.selectedFiles = this.selectedFiles.concat(fileData);\n      this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\n\n      if (this.showFileList) {\n        if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\n          for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\n            for (var k = 0; k < fileData.length; k++) {\n              if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\n                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\n              }\n            }\n          }\n\n          var dataFiles = this.allTypes ? eventArgs.modifiedFilesData : this.checkExtension(eventArgs.modifiedFilesData);\n          this.updateSortedFileList(dataFiles);\n          this.filesData = dataFiles;\n\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(dataFiles);\n          }\n        } else {\n          this.createFileList(fileData, true);\n          this.filesData = this.filesData.concat(fileData);\n\n          if (!this.isForm || this.allowUpload()) {\n            this.checkAutoUpload(fileData);\n          }\n        }\n\n        if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\n          this.progressInterval = eventArgs.progressInterval;\n        }\n      } else {\n        this.filesData = this.filesData.concat(fileData);\n\n        if (this.autoUpload) {\n          this.upload(this.filesData, true);\n        }\n      }\n\n      this.raiseActionComplete();\n      this.isFirstFileOnSelection = true;\n    }\n  };\n\n  Uploader.prototype.allowUpload = function () {\n    var allowFormUpload = false;\n\n    if (this.isForm && !isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '') {\n      allowFormUpload = true;\n    }\n\n    return allowFormUpload;\n  };\n\n  Uploader.prototype.isFormUpload = function () {\n    var isFormUpload = false;\n\n    if (this.isForm && (isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '') && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === '')) {\n      isFormUpload = true;\n    }\n\n    return isFormUpload;\n  };\n\n  Uploader.prototype.clearData = function (singleUpload) {\n    if (!isNullOrUndefined(this.listParent)) {\n      detach(this.listParent);\n      this.listParent = null;\n    }\n\n    if (this.browserName !== 'msie' && !singleUpload) {\n      this.element.value = '';\n    }\n\n    this.fileList = [];\n    this.filesData = [];\n    this.removeActionButtons();\n  };\n\n  Uploader.prototype.updateSortedFileList = function (filesData) {\n    var previousListClone = this.createElement('div', {\n      id: 'clonewrapper'\n    });\n    var added = -1;\n    var removedList;\n\n    if (this.listParent) {\n      for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\n        var liElement = this.listParent.querySelectorAll('li')[i];\n        previousListClone.appendChild(liElement.cloneNode(true));\n      }\n\n      removedList = this.listParent.querySelectorAll('li');\n\n      for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\n        var item = removedList_1[_i];\n        detach(item);\n      }\n\n      this.removeActionButtons();\n      var oldList = [].slice.call(previousListClone.childNodes);\n      detach(this.listParent);\n      this.listParent = null;\n      this.fileList = [];\n      this.createParentUL();\n\n      for (var index = 0; index < filesData.length; index++) {\n        for (var j = 0; j < this.filesData.length; j++) {\n          if (this.filesData[j].name === filesData[index].name) {\n            this.listParent.appendChild(oldList[j]);\n            EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\n            this.fileList.push(oldList[j]);\n            added = index;\n          }\n        }\n\n        if (added !== index) {\n          this.createFileList([filesData[index]]);\n        }\n      }\n    } else {\n      this.createFileList(filesData);\n    }\n  };\n\n  Uploader.prototype.isBlank = function (str) {\n    return !str || /^\\s*$/.test(str);\n  };\n\n  Uploader.prototype.checkExtension = function (files) {\n    var dropFiles = files;\n\n    if (!this.isBlank(this.allowedExtensions)) {\n      var allowedExtensions = [];\n      var extensions = this.allowedExtensions.split(',');\n\n      for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var extension = extensions_1[_i];\n        allowedExtensions.push(extension.trim().toLocaleLowerCase());\n      }\n\n      for (var i = 0; i < files.length; i++) {\n        if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\n          files[i].status = this.localizedTexts('invalidFileType');\n          files[i].statusCode = '0';\n        }\n      }\n    }\n\n    return dropFiles;\n  };\n\n  Uploader.prototype.validatedFileSize = function (fileSize) {\n    var minSizeError = '';\n    var maxSizeError = '';\n\n    if (fileSize < this.minFileSize) {\n      minSizeError = this.localizedTexts('invalidMinFileSize');\n    } else if (fileSize > this.maxFileSize) {\n      maxSizeError = this.localizedTexts('invalidMaxFileSize');\n    } else {\n      minSizeError = '';\n      maxSizeError = '';\n    }\n\n    var errorMessage = {\n      minSize: minSizeError,\n      maxSize: maxSizeError\n    };\n    return errorMessage;\n  };\n\n  Uploader.prototype.isPreLoadFile = function (fileData) {\n    var isPreload = false;\n\n    for (var i = 0; i < this.files.length; i++) {\n      if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\n        isPreload = true;\n      }\n    }\n\n    return isPreload;\n  };\n\n  Uploader.prototype.createCustomfileList = function (fileData) {\n    this.createParentUL();\n\n    for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\n      var listItem = fileData_1[_i];\n      var listElement = this.createElement('li', {\n        className: FILE,\n        attrs: {\n          'data-file-name': listItem.name\n        }\n      });\n      this.uploadTemplateFn = this.templateComplier(this.template);\n      var liTempCompiler = this.uploadTemplateFn(listItem, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, listElement);\n\n      if (liTempCompiler) {\n        var fromElements = [].slice.call(liTempCompiler);\n        append(fromElements, listElement);\n      }\n\n      var index = fileData.indexOf(listItem);\n      var eventArgs = {\n        element: listElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      var eventsArgs = {\n        element: listElement,\n        fileInfo: listItem,\n        index: index,\n        isPreload: this.isPreLoadFile(listItem)\n      };\n      this.trigger('rendering', eventArgs);\n      this.trigger('fileListRendering', eventsArgs);\n      this.listParent.appendChild(listElement);\n      this.fileList.push(listElement);\n    }\n\n    this.renderReactTemplates();\n  };\n\n  Uploader.prototype.createParentUL = function () {\n    if (isNullOrUndefined(this.listParent)) {\n      this.listParent = this.createElement('ul', {\n        className: LIST_PARENT\n      });\n      this.uploadWrapper.appendChild(this.listParent);\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Uploader.prototype.formFileList = function (fileData, files) {\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    var fileContainer = this.createElement('span', {\n      className: TEXT_CONTAINER\n    });\n    var statusMessage;\n\n    for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\n      var listItem = fileData_2[_i];\n      var fileNameEle = this.createElement('span', {\n        className: FILE_NAME\n      });\n      fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\n      var fileTypeEle = this.createElement('span', {\n        className: FILE_TYPE\n      });\n      var fileType = this.getFileType(listItem.name);\n      fileTypeEle.innerHTML = '.' + fileType;\n\n      if (!fileType) {\n        fileTypeEle.classList.add('e-hidden');\n      }\n\n      if (!this.enableRtl) {\n        fileContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(fileTypeEle);\n      } else {\n        var rtlContainer = this.createElement('span', {\n          className: RTL_CONTAINER\n        });\n        rtlContainer.appendChild(fileTypeEle);\n        rtlContainer.appendChild(fileNameEle);\n        fileContainer.appendChild(rtlContainer);\n      }\n\n      this.truncateName(fileNameEle);\n      statusMessage = this.formValidateFileInfo(listItem, fileList);\n    }\n\n    fileList.appendChild(fileContainer);\n    this.setListToFileInfo(fileData, fileList);\n    var index = this.listParent.querySelectorAll('li').length;\n    var infoEle = this.createElement('span');\n\n    if (fileList.classList.contains(INVALID_FILE)) {\n      infoEle.classList.add(STATUS);\n      infoEle.classList.add(INVALID_FILE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\n      infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\n      this.createFormInput(fileData);\n    }\n\n    fileContainer.appendChild(infoEle);\n\n    if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\n      var iconElement = this.createElement('span', {\n        className: 'e-icons',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      /* istanbul ignore next */\n\n      if (this.browserName === 'msie') {\n        iconElement.classList.add('e-msie');\n      }\n\n      iconElement.setAttribute('title', this.localizedTexts('remove'));\n      fileList.appendChild(fileContainer);\n      fileList.appendChild(iconElement);\n      EventHandler.add(iconElement, 'click', this.removeFiles, this);\n      iconElement.classList.add(REMOVE_ICON);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: this.mergeFileInfo(fileData, fileList),\n      index: index,\n      isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n  };\n\n  Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\n    var statusMessage = listItem.status;\n    var validationMessages = this.validatedFileSize(listItem.size);\n\n    if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n      this.addInvalidClass(fileList);\n      statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n    }\n\n    var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n    if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n      this.addInvalidClass(fileList);\n      statusMessage = typeValidationMessage;\n    }\n\n    return statusMessage;\n  };\n\n  Uploader.prototype.addInvalidClass = function (fileList) {\n    fileList.classList.add(INVALID_FILE);\n  };\n\n  Uploader.prototype.createFormInput = function (fileData) {\n    var inputElement = this.element.cloneNode(true);\n    inputElement.classList.add(HIDDEN_INPUT);\n\n    for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\n      var listItem = fileData_3[_i];\n      listItem.input = inputElement;\n    }\n\n    inputElement.setAttribute('name', this.uploaderName);\n    this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\n\n    if (this.browserName !== 'msie' && this.browserName !== 'edge') {\n      this.element.value = '';\n    }\n  };\n\n  Uploader.prototype.getFileSize = function (fileData) {\n    var fileSize = 0;\n\n    for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\n      var file = fileData_4[_i];\n      fileSize += file.size;\n    }\n\n    return fileSize;\n  };\n\n  Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\n    var result = {\n      name: '',\n      rawFile: '',\n      size: 0,\n      status: '',\n      type: '',\n      validationMessages: {\n        minSize: '',\n        maxSize: ''\n      },\n      statusCode: '1',\n      list: fileList\n    };\n    var fileNames = [];\n    var type = '';\n\n    for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\n      var listItem = fileData_5[_i];\n      fileNames.push(listItem.name);\n      type = listItem.type;\n    }\n\n    result.name = fileNames.join(', ');\n    result.size = this.getFileSize(fileData);\n    result.type = type;\n    result.status = this.statusForFormUpload(fileData, fileList);\n    return result;\n  };\n\n  Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\n    var isValid = true;\n    var statusMessage;\n\n    for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\n      var listItem = fileData_6[_i];\n      statusMessage = listItem.status;\n      var validationMessages = this.validatedFileSize(listItem.size);\n\n      if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\n        isValid = false;\n        statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') : validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\n      }\n\n      var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\n\n      if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\n        isValid = false;\n        statusMessage = typeValidationMessage;\n      }\n    }\n\n    if (!isValid) {\n      fileList.classList.add(INVALID_FILE);\n      statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\n    } else {\n      statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , ' + this.localizedTexts('size') + ': ' + this.bytesToSize(this.getFileSize(fileData));\n    }\n\n    return statusMessage;\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Uploader.prototype.formCustomFileList = function (fileData, files) {\n    this.createParentUL();\n    var fileList = this.createElement('li', {\n      className: FILE\n    });\n    fileList.setAttribute('data-files-count', fileData.length + '');\n    this.setListToFileInfo(fileData, fileList);\n    var result = this.mergeFileInfo(fileData, fileList);\n    fileList.setAttribute('data-file-name', result.name);\n    this.uploadTemplateFn = this.templateComplier(this.template);\n    var liTempCompiler = this.uploadTemplateFn(result, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, fileList);\n\n    if (liTempCompiler) {\n      var fromElements = [].slice.call(liTempCompiler);\n      append(fromElements, fileList);\n    }\n\n    var index = this.listParent.querySelectorAll('li').length;\n\n    if (!fileList.classList.contains(INVALID_FILE)) {\n      this.createFormInput(fileData);\n    }\n\n    var eventArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    var eventsArgs = {\n      element: fileList,\n      fileInfo: result,\n      index: index,\n      isPreload: this.isPreLoadFile(result)\n    };\n    this.trigger('rendering', eventArgs);\n    this.trigger('fileListRendering', eventsArgs);\n    this.listParent.appendChild(fileList);\n    this.fileList.push(fileList);\n    this.renderReactTemplates();\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\r\n   * Create the file list for specified files data.\r\n   *\r\n   * @param { FileInfo[] } fileData - Specifies the files data for file list creation.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\n    this.createParentUL();\n\n    if (this.template !== '' && !isNullOrUndefined(this.template)) {\n      if (this.isFormUpload()) {\n        this.uploadWrapper.classList.add(FORM_UPLOAD);\n        this.formCustomFileList(fileData, this.element.files);\n      } else {\n        this.createCustomfileList(fileData);\n      }\n    } else if (this.isFormUpload()) {\n      this.uploadWrapper.classList.add(FORM_UPLOAD);\n      this.formFileList(fileData, this.element.files);\n    } else {\n      for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\n        var listItem = fileData_7[_i];\n        var liElement = this.createElement('li', {\n          className: FILE,\n          attrs: {\n            'data-file-name': listItem.name,\n            'data-files-count': '1'\n          }\n        });\n        var textContainer = this.createElement('span', {\n          className: TEXT_CONTAINER\n        });\n        var textElement = this.createElement('span', {\n          className: FILE_NAME,\n          attrs: {\n            'title': listItem.name\n          }\n        });\n        textElement.innerHTML = this.getFileNameOnly(listItem.name);\n        var fileExtension = this.createElement('span', {\n          className: FILE_TYPE\n        });\n        var fileType = this.getFileType(listItem.name);\n        fileExtension.innerHTML = '.' + fileType;\n\n        if (!fileType) {\n          fileExtension.classList.add('e-hidden');\n        }\n\n        if (!this.enableRtl) {\n          textContainer.appendChild(textElement);\n          textContainer.appendChild(fileExtension);\n        } else {\n          var rtlContainer = this.createElement('span', {\n            className: RTL_CONTAINER\n          });\n          rtlContainer.appendChild(fileExtension);\n          rtlContainer.appendChild(textElement);\n          textContainer.appendChild(rtlContainer);\n        }\n\n        var fileSize = this.createElement('span', {\n          className: FILE_SIZE\n        });\n        fileSize.innerHTML = this.bytesToSize(listItem.size);\n        textContainer.appendChild(fileSize);\n        var statusElement = this.createElement('span', {\n          className: STATUS\n        });\n        textContainer.appendChild(statusElement);\n        statusElement.innerHTML = listItem.status;\n        liElement.appendChild(textContainer);\n        var iconElement = this.createElement('span', {\n          className: ' e-icons',\n          attrs: {\n            'tabindex': this.btnTabIndex\n          }\n        });\n        /* istanbul ignore next */\n\n        if (this.browserName === 'msie') {\n          iconElement.classList.add('e-msie');\n        }\n\n        iconElement.setAttribute('title', this.localizedTexts('remove'));\n        liElement.appendChild(iconElement);\n        EventHandler.add(iconElement, 'click', this.removeFiles, this);\n\n        if (listItem.statusCode === '2') {\n          statusElement.classList.add(UPLOAD_SUCCESS);\n          iconElement.classList.add(DELETE_ICON);\n          iconElement.setAttribute('title', this.localizedTexts('delete'));\n        } else if (listItem.statusCode !== '1') {\n          statusElement.classList.remove(UPLOAD_SUCCESS);\n          statusElement.classList.add(VALIDATION_FAILS);\n        }\n\n        if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\n          statusElement.innerHTML = '';\n        }\n\n        if (!iconElement.classList.contains(DELETE_ICON)) {\n          iconElement.classList.add(REMOVE_ICON);\n        }\n\n        var index = fileData.indexOf(listItem);\n        var eventArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        var eventsArgs = {\n          element: liElement,\n          fileInfo: listItem,\n          index: index,\n          isPreload: this.isPreLoadFile(listItem)\n        };\n        this.trigger('rendering', eventArgs);\n        this.trigger('fileListRendering', eventsArgs);\n        this.listParent.appendChild(liElement);\n        this.fileList.push(liElement);\n        this.truncateName(textElement);\n        var preventActionComplete = this.flag;\n\n        if (this.isPreLoadFile(listItem)) {\n          this.flag = false;\n          this.checkActionComplete(true);\n          this.flag = preventActionComplete;\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.getSlicedName = function (nameElement) {\n    var text = nameElement.textContent;\n    nameElement.dataset.tail = text.slice(text.length - 10);\n  };\n\n  Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\n    for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\n      var listItem = fileData_8[_i];\n      listItem.list = fileList;\n    }\n  };\n\n  Uploader.prototype.truncateName = function (name) {\n    var nameElement = name;\n\n    if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n      /* istanbul ignore next */\n    } else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\n      this.getSlicedName(nameElement);\n    }\n  };\n\n  Uploader.prototype.getFileType = function (name) {\n    var extension;\n    var index = name.lastIndexOf('.');\n\n    if (index >= 0) {\n      extension = name.substring(index + 1);\n    }\n\n    return extension ? extension : '';\n  };\n\n  Uploader.prototype.getFileNameOnly = function (name) {\n    var type = this.getFileType(name);\n    var names = name.split('.' + type);\n    return type = names[0];\n  };\n\n  Uploader.prototype.setInitialAttributes = function () {\n    if (this.initialAttr.accept) {\n      this.element.setAttribute('accept', this.initialAttr.accept);\n    }\n\n    if (this.initialAttr.disabled) {\n      this.element.setAttribute('disabled', 'disabled');\n    }\n\n    if (this.initialAttr.multiple) {\n      var newAttr = document.createAttribute('multiple');\n      this.element.setAttributeNode(newAttr);\n    }\n  };\n\n  Uploader.prototype.filterfileList = function (files) {\n    var filterFiles = [];\n    var li;\n\n    for (var i = 0; i < files.length; i++) {\n      li = this.getLiElement(files[i]);\n\n      if (!li.classList.contains(UPLOAD_SUCCESS)) {\n        filterFiles.push(files[i]);\n      }\n    }\n\n    return filterFiles;\n  };\n\n  Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\n    if (updateLiStatus === void 0) {\n      updateLiStatus = true;\n    }\n\n    if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\n      files.status = status;\n      files.statusCode = statusCode;\n    }\n\n    if (updateLiStatus) {\n      var li = this.getLiElement(files);\n\n      if (!isNullOrUndefined(li)) {\n        if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !(status === '' || isNullOrUndefined(status))) {\n          li.querySelector('.' + STATUS).textContent = status;\n        }\n      }\n    }\n\n    return files;\n  };\n\n  Uploader.prototype.getLiElement = function (files) {\n    var index;\n\n    for (var i = 0; i < this.filesData.length; i++) {\n      if (!isNullOrUndefined(files) && (!isNullOrUndefined(this.filesData[i].id) && !isNullOrUndefined(files.id) ? this.filesData[i].name === files.name && this.filesData[i].id === files.id : this.filesData[i].name === files.name)) {\n        index = i;\n      }\n    }\n\n    return this.fileList[index];\n  };\n\n  Uploader.prototype.createProgressBar = function (liElement) {\n    var progressbarWrapper = this.createElement('span', {\n      className: PROGRESS_WRAPPER\n    });\n    var progressBar = this.createElement('progressbar', {\n      className: PROGRESSBAR,\n      attrs: {\n        value: '0',\n        max: '100'\n      }\n    });\n    var progressbarInnerWrapper = this.createElement('span', {\n      className: PROGRESS_INNER_WRAPPER\n    });\n    progressBar.setAttribute('style', 'width: 0%');\n    var progressbarText = this.createElement('span', {\n      className: PROGRESSBAR_TEXT\n    });\n    progressbarText.textContent = '0%';\n    progressbarInnerWrapper.appendChild(progressBar);\n    progressbarWrapper.appendChild(progressbarInnerWrapper);\n    progressbarWrapper.appendChild(progressbarText);\n    liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.updateProgressbar = function (e, li) {\n    if (!isNaN(Math.round(e.loaded / e.total * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\n      if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\n        var value = Math.round(e.loaded / e.total * 100) % parseInt(this.progressInterval, 10);\n\n        if (value === 0 || value === 100) {\n          this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n        }\n      } else {\n        this.changeProgressValue(li, Math.round(e.loaded / e.total * 100).toString() + '%');\n      }\n    }\n  };\n\n  Uploader.prototype.changeProgressValue = function (li, progressValue) {\n    li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\n    li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\n  };\n\n  Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\n    var li = this.getLiElement(files);\n\n    if (isNullOrUndefined(li) && !customUI) {\n      return;\n    }\n\n    if (!isNullOrUndefined(li)) {\n      /* istanbul ignore next */\n      if (files.statusCode === '5') {\n        this.cancelUploadingFile(files, e, request, li);\n      }\n\n      if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\n        this.createProgressBar(li);\n        this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n\n      this.updateProgressbar(e, li);\n      var iconEle = li.querySelector('.' + REMOVE_ICON);\n\n      if (!isNullOrUndefined(iconEle)) {\n        iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\n        iconEle.setAttribute('title', this.localizedTexts('abort'));\n        iconEle.classList.remove(REMOVE_ICON);\n      }\n    } else {\n      this.cancelUploadingFile(files, e, request);\n    }\n\n    var args = {\n      e: e,\n      operation: 'upload',\n      file: this.updateStatus(files, this.localizedTexts('inProgress'), '3')\n    };\n    this.trigger('progress', args);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\n    var _this = this;\n\n    if (files.statusCode === '5') {\n      var eventArgs = {\n        event: e,\n        fileData: files,\n        cancel: false,\n        customFormData: []\n      };\n      this.trigger('canceling', eventArgs, function (eventArgs) {\n        if (eventArgs.cancel) {\n          files.statusCode = '3';\n\n          if (!isNullOrUndefined(li)) {\n            var spinnerTarget = li.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(li.querySelector('.e-spinner-pane'));\n            }\n          }\n        } else {\n          request.emitError = false;\n          request.httpRequest.abort();\n          var formData = new FormData();\n\n          if (files.statusCode === '5') {\n            var name_1 = _this.element.getAttribute('name');\n\n            formData.append(name_1, files.name);\n            formData.append('cancel-uploading', files.name);\n\n            _this.updateFormData(formData, eventArgs.customFormData);\n\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removecanceledFile(e, files);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        }\n      });\n    }\n  };\n\n  Uploader.prototype.removecanceledFile = function (e, file) {\n    var liElement = this.getLiElement(file);\n\n    if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\n      return;\n    }\n\n    this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\n    this.renderFailureState(e, file, liElement);\n    var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\n\n    if (!isNullOrUndefined(liElement)) {\n      hideSpinner(spinnerTarget);\n\n      if (!isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var args = {\n      event: e,\n      response: requestResponse,\n      operation: 'cancel',\n      file: file\n    };\n    this.trigger('success', args);\n  };\n\n  Uploader.prototype.renderFailureState = function (e, file, liElement) {\n    var _this = this;\n\n    this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    this.removeProgressbar(liElement, 'failure');\n\n    if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\n      liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\n    }\n\n    var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n\n    if (isNullOrUndefined(deleteIcon)) {\n      return;\n    }\n\n    deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n    deleteIcon.classList.add(REMOVE_ICON);\n    deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n    this.pauseButton = this.createElement('span', {\n      className: 'e-icons e-file-reload-btn',\n      attrs: {\n        'tabindex': this.btnTabIndex\n      }\n    });\n    deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\n    this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n    /* istanbul ignore next */\n\n    retryElement.addEventListener('click', function (e) {\n      _this.reloadcanceledFile(e, file, liElement, false);\n    }, false);\n  };\n\n  Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\n    file.statusCode = '1';\n    file.status = this.localizedTexts('readyToUploadMessage');\n\n    if (!custom) {\n      if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n        liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\n      }\n\n      if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\n        detach(liElement.querySelector('.' + RETRY_ICON));\n      }\n\n      this.pauseButton = null;\n    }\n    /* istanbul ignore next */\n\n\n    liElement.classList.add(RESTRICT_RETRY);\n    this.upload([file]);\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.uploadComplete = function (e, file, customUI) {\n    var status = e.target;\n\n    if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\n      var li = this.getLiElement(file);\n\n      if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\n        return;\n      }\n\n      if (!isNullOrUndefined(li)) {\n        this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\n        this.removeProgressbar(li, 'success');\n        var iconEle = li.querySelector('.' + ABORT_ICON);\n\n        if (!isNullOrUndefined(iconEle)) {\n          iconEle.classList.add(DELETE_ICON);\n          iconEle.setAttribute('title', this.localizedTexts('delete'));\n          iconEle.classList.remove(ABORT_ICON);\n          iconEle.classList.remove(UPLOAD_INPROGRESS);\n        }\n      }\n\n      this.raiseSuccessEvent(e, file);\n    } else {\n      this.uploadFailed(e, file);\n    }\n  };\n\n  Uploader.prototype.getResponse = function (e) {\n    var target = e.currentTarget;\n    var response = {\n      readyState: target.readyState,\n      statusCode: target.status,\n      statusText: target.statusText,\n      headers: target.getAllResponseHeaders(),\n      withCredentials: target.withCredentials\n    };\n    return response;\n  };\n\n  Uploader.prototype.raiseSuccessEvent = function (e, file) {\n    var _this = this;\n\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadSuccessMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '2', false),\n      statusText: statusMessage\n    };\n    var liElement = this.getLiElement(file);\n\n    if (!isNullOrUndefined(liElement)) {\n      var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\n\n      if (!isNullOrUndefined(spinnerEle)) {\n        hideSpinner(liElement);\n        detach(spinnerEle);\n      }\n    }\n\n    this.trigger('success', args, function (args) {\n      _this.updateStatus(file, args.statusText, '2');\n\n      _this.uploadedFilesData.push(file);\n\n      _this.trigger('change', {\n        file: _this.uploadedFilesData\n      });\n\n      _this.checkActionButtonStatus();\n\n      if (_this.fileList.length > 0) {\n        if (!_this.getLiElement(file).classList.contains(RESTRICT_RETRY)) {\n          _this.uploadSequential();\n\n          _this.checkActionComplete(true);\n        } else {\n          /* istanbul ignore next */\n          _this.getLiElement(file).classList.remove(RESTRICT_RETRY);\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.uploadFailed = function (e, file) {\n    var _this = this;\n\n    var li = this.getLiElement(file);\n    var response = e && e.currentTarget ? this.getResponse(e) : null;\n    var statusMessage = this.localizedTexts('uploadFailedMessage');\n    var args = {\n      e: e,\n      response: response,\n      operation: 'upload',\n      file: this.updateStatus(file, statusMessage, '0', false),\n      statusText: statusMessage\n    };\n\n    if (!isNullOrUndefined(li)) {\n      this.renderFailureState(e, file, li);\n    }\n\n    this.trigger('failure', args, function (args) {\n      _this.updateStatus(file, args.statusText, '0');\n\n      _this.checkActionButtonStatus();\n\n      _this.uploadSequential();\n\n      _this.checkActionComplete(true);\n    });\n  };\n\n  Uploader.prototype.uploadSequential = function () {\n    if (this.sequentialUpload) {\n      if (this.autoUpload) {\n        /* istanbul ignore next */\n        this.checkAutoUpload(this.filesData);\n      } else {\n        this.uploadButtonClick();\n      }\n    }\n  };\n\n  Uploader.prototype.checkActionComplete = function (increment) {\n    if (increment) {\n      ++this.actionCompleteCount;\n    } else {\n      --this.actionCompleteCount;\n    }\n\n    this.raiseActionComplete();\n  };\n\n  Uploader.prototype.raiseActionComplete = function () {\n    if (this.filesData.length === this.actionCompleteCount && this.flag) {\n      this.flag = false;\n      var eventArgs = {\n        fileData: []\n      };\n      eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\n      this.trigger('actionComplete', eventArgs);\n    }\n  };\n\n  Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\n    var matchFiles = [];\n    var matchFilesIndex = 0;\n\n    for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\n      var selectedFileData = selectedFiles[selectFileIndex];\n\n      for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\n        if (this.filesData[fileDataIndex].name === selectedFileData.name) {\n          matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\n          ++matchFilesIndex;\n        }\n      }\n    }\n\n    return matchFiles;\n  };\n\n  Uploader.prototype.updateProgressBarClasses = function (li, className) {\n    var progressBar = li.querySelector('.' + PROGRESSBAR);\n\n    if (!isNullOrUndefined(progressBar)) {\n      progressBar.classList.add(className);\n    }\n  };\n\n  Uploader.prototype.removeProgressbar = function (li, callType) {\n    var _this = this;\n\n    if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\n      this.progressAnimation = new Animation({\n        duration: 1250\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), {\n        name: 'FadeOut'\n      });\n      this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), {\n        name: 'FadeOut'\n      });\n      setTimeout(function () {\n        _this.animateProgressBar(li, callType);\n      }, 750);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.animateProgressBar = function (li, callType) {\n    if (callType === 'success') {\n      li.classList.add(UPLOAD_SUCCESS);\n\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\n      }\n    } else {\n      if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\n        li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\n        this.progressAnimation.animate(li.querySelector('.' + STATUS), {\n          name: 'FadeIn'\n        });\n        li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n    }\n\n    if (li.querySelector('.' + PROGRESS_WRAPPER)) {\n      detach(li.querySelector('.' + PROGRESS_WRAPPER));\n    }\n  };\n\n  Uploader.prototype.setExtensions = function (extensions) {\n    if (extensions !== '' && !isNullOrUndefined(extensions)) {\n      this.element.setAttribute('accept', extensions);\n    } else {\n      this.element.removeAttribute('accept');\n    }\n  };\n\n  Uploader.prototype.templateComplier = function (uploadTemplate) {\n    if (uploadTemplate) {\n      try {\n        if (selectAll(uploadTemplate, document).length) {\n          return compile(select(uploadTemplate, document).innerHTML.trim());\n        }\n      } catch (exception) {\n        return compile(uploadTemplate);\n      }\n    }\n\n    return undefined;\n  };\n\n  Uploader.prototype.setRTL = function () {\n    if (this.enableRtl) {\n      addClass([this.uploadWrapper], RTL);\n    } else {\n      removeClass([this.uploadWrapper], RTL);\n    }\n  };\n\n  Uploader.prototype.localizedTexts = function (localeText) {\n    this.l10n.setLocale(this.locale);\n    return this.l10n.getConstant(localeText);\n  };\n\n  Uploader.prototype.setControlStatus = function () {\n    if (!this.enabled) {\n      this.uploadWrapper.classList.add(DISABLED);\n      this.element.setAttribute('disabled', 'disabled');\n      this.browseButton.setAttribute('disabled', 'disabled');\n\n      if (!isNullOrUndefined(this.clearButton)) {\n        this.clearButton.setAttribute('disabled', 'disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton)) {\n        this.uploadButton.setAttribute('disabled', 'disabled');\n      }\n    } else {\n      if (this.uploadWrapper.classList.contains(DISABLED)) {\n        this.uploadWrapper.classList.remove(DISABLED);\n      }\n\n      if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\n        this.element.removeAttribute('disabled');\n        this.browseButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\n        this.clearButton.removeAttribute('disabled');\n      }\n\n      if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\n        this.uploadButton.hasAttribute('disabled');\n      }\n    }\n  };\n\n  Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\n    var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['accept', 'multiple', 'disabled'];\n\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var prop = attributes_1[_i];\n\n      if (!isNullOrUndefined(this.element.getAttribute(prop))) {\n        switch (prop) {\n          case 'accept':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['allowedExtensions'] === undefined || isDynamic) {\n              this.setProperties({\n                allowedExtensions: this.element.getAttribute('accept')\n              }, !isDynamic);\n              this.initialAttr.accept = this.allowedExtensions;\n            }\n\n            break;\n\n          case 'multiple':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['multiple'] === undefined || isDynamic) {\n              var isMutiple = this.element.getAttribute(prop) === 'multiple' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\n              this.setProperties({\n                multiple: isMutiple\n              }, !isDynamic);\n              this.initialAttr.multiple = true;\n            }\n\n            break;\n\n          case 'disabled':\n            if (isNullOrUndefined(this.uploaderOptions) || this.uploaderOptions['enabled'] === undefined || isDynamic) {\n              var isDisabled = this.element.getAttribute(prop) === 'disabled' || this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\n              this.setProperties({\n                enabled: isDisabled\n              }, !isDynamic);\n              this.initialAttr.disabled = true;\n            }\n\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\n    var start = 0;\n    var end = Math.min(this.asyncSettings.chunkSize, file.size);\n    var index = 0;\n    var blob = file.rawFile.slice(start, end);\n    var metaData = {\n      chunkIndex: index,\n      blob: blob,\n      file: file,\n      start: start,\n      end: end,\n      retryCount: 0,\n      request: null\n    };\n    this.sendRequest(file, metaData, custom, fileIndex);\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\n    var _this = this;\n\n    var formData = new FormData();\n    var blob = file.rawFile.slice(metaData.start, metaData.end);\n    formData.append('chunkFile', blob, file.name);\n    formData.append(this.uploaderName, blob, file.name);\n    formData.append('chunk-index', metaData.chunkIndex.toString());\n    formData.append('chunkIndex', metaData.chunkIndex.toString());\n    var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\n    formData.append('total-chunk', totalChunk.toString());\n    formData.append('totalChunk', totalChunk.toString());\n    var ajax = new Ajax({\n      url: this.asyncSettings.saveUrl,\n      type: 'POST',\n      async: true,\n      contentType: null\n    });\n    ajax.emitError = false;\n\n    ajax.onLoad = function (e) {\n      _this.chunkUploadComplete(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.onUploadProgress = function (e) {\n      _this.chunkUploadInProgress(e, metaData, custom);\n\n      return {};\n    };\n\n    var eventArgs = {\n      fileData: file,\n      customFormData: [],\n      cancel: false,\n      chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\n    };\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n      eventArgs.currentChunkIndex = metaData.chunkIndex;\n\n      if (eventArgs.currentChunkIndex === 0) {\n        // This event is currently not required but to avoid breaking changes for previous customer, we have included.\n        _this.trigger('uploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      } else {\n        _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\n          _this.uploadingEventCallback(formData, eventArgs, e, file);\n        });\n      }\n    };\n    /* istanbul ignore next */\n\n\n    ajax.onError = function (e) {\n      _this.chunkUploadFailed(e, metaData, custom);\n\n      return {};\n    };\n\n    ajax.send(formData);\n    metaData.request = ajax;\n  };\n\n  Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\n    if (eventArgs.cancel) {\n      this.eventCancelByArgs(e, eventArgs, file);\n    } else {\n      this.updateFormData(formData, eventArgs.customFormData);\n    }\n  };\n\n  Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\n    var _this = this;\n\n    e.cancel = true;\n\n    if (eventArgs.fileData.statusCode === '5') {\n      return;\n    }\n\n    eventArgs.fileData.statusCode = '5';\n    eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\n    var liElement = this.getLiElement(eventArgs.fileData);\n\n    if (liElement) {\n      if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\n        liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\n        liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\n      }\n\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-reload-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n      var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\n\n      if (removeIcon) {\n        removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\n      }\n\n      this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\n      /* istanbul ignore next */\n\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.reloadcanceledFile(e, file, liElement);\n      }, false);\n      this.checkActionButtonStatus();\n    }\n  };\n\n  Uploader.prototype.checkChunkUpload = function () {\n    return this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize) ? false : true;\n  };\n\n  Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\n    var _this = this;\n\n    var response = e.target;\n    var liElement;\n\n    if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\n      var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n      var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n      var eventArgs = {\n        event: e,\n        file: metaData.file,\n        chunkIndex: metaData.chunkIndex,\n        totalChunk: totalChunk,\n        chunkSize: this.asyncSettings.chunkSize,\n        response: requestResponse\n      };\n      this.trigger('chunkSuccess', eventArgs);\n\n      if (isNullOrUndefined(custom) || !custom) {\n        liElement = this.getLiElement(metaData.file);\n      }\n\n      this.updateMetaData(metaData);\n\n      if (metaData.end === metaData.file.size) {\n        metaData.file.statusCode = '3';\n      }\n\n      if (metaData.file.statusCode === '5') {\n        var eventArgs_1 = {\n          event: e,\n          fileData: metaData.file,\n          cancel: false,\n          customFormData: []\n        };\n        this.trigger('canceling', eventArgs_1, function (eventArgs) {\n          /* istanbul ignore next */\n          if (eventArgs.cancel) {\n            metaData.file.statusCode = '3';\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\n              hideSpinner(spinnerTarget);\n              detach(liElement.querySelector('.e-spinner-pane'));\n            }\n\n            _this.sendNextRequest(metaData);\n          } else {\n            metaData.request.emitError = false;\n            response.abort();\n            var formData = new FormData();\n\n            var name_2 = _this.element.getAttribute('name');\n\n            formData.append(name_2, metaData.file.name);\n            formData.append('cancel-uploading', metaData.file.name);\n            formData.append('cancelUploading', metaData.file.name);\n\n            _this.updateFormData(formData, eventArgs.customFormData);\n\n            var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\n            ajax.emitError = false;\n\n            ajax.onLoad = function (e) {\n              _this.removeChunkFile(e, metaData, custom);\n\n              return {};\n            };\n\n            ajax.send(formData);\n          }\n        });\n      } else {\n        if (totalChunk - 1 === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\n          var index = this.pausedData.indexOf(metaData);\n\n          if (index >= 0) {\n            this.pausedData.splice(index, 1);\n          }\n\n          if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n            if (liElement && !isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            this.removeChunkProgressBar(metaData);\n          }\n\n          this.raiseSuccessEvent(e, metaData.file);\n          return;\n        }\n\n        if (metaData.file.statusCode !== '4') {\n          this.sendNextRequest(metaData);\n        }\n      }\n    } else {\n      this.chunkUploadFailed(e, metaData);\n    }\n  };\n\n  Uploader.prototype.sendNextRequest = function (metaData) {\n    metaData.start = metaData.end;\n    metaData.end += this.asyncSettings.chunkSize;\n    metaData.end = Math.min(metaData.end, metaData.file.size);\n    metaData.chunkIndex += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\n    if (isNullOrUndefined(this.template) && isNullOrUndefined(custom) && !custom) {\n      var liElement = this.getLiElement(metaData.file);\n      var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\n      var spinnerTarget = deleteIcon;\n      this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n      this.removeProgressbar(liElement, 'failure');\n      deleteIcon && deleteIcon.classList.remove(ABORT_ICON);\n      deleteIcon && deleteIcon.classList.add(REMOVE_ICON);\n      deleteIcon && deleteIcon.setAttribute('title', this.localizedTexts('remove'));\n      var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\n      pauseIcon && pauseIcon.classList.add(RETRY_ICON);\n      pauseIcon && pauseIcon.classList.remove(PAUSE_UPLOAD);\n      pauseIcon && pauseIcon.setAttribute('title', this.localizedTexts('retry'));\n\n      if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon) && !isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\n        hideSpinner(spinnerTarget);\n        detach(liElement.querySelector('.e-spinner-pane'));\n      }\n    }\n  };\n\n  Uploader.prototype.pauseUpload = function (metaData, e, custom) {\n    metaData.file.statusCode = '4';\n    metaData.file.status = this.localizedTexts('pause');\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.abortUpload(metaData, custom, eventArgs);\n  };\n\n  Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\n    if (metaData.file.statusCode !== '4') {\n      metaData.request.emitError = false;\n      metaData.request.httpRequest.abort();\n    }\n\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\n      targetElement.classList.remove(PAUSE_UPLOAD);\n      targetElement.classList.add(RESUME_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('resume'));\n      targetElement.nextElementSibling.classList.add(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.remove(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\n    }\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].file.name === metaData.file.name) {\n        this.pausedData.splice(i, 1);\n      }\n    }\n\n    this.pausedData.push(metaData);\n    this.trigger('pausing', eventArgs);\n  };\n\n  Uploader.prototype.resumeUpload = function (metaData, e, custom) {\n    var liElement = this.getLiElement(metaData.file);\n    var targetElement;\n\n    if (!isNullOrUndefined(liElement)) {\n      targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\n    }\n\n    if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\n      targetElement.classList.remove(RESUME_UPLOAD);\n      targetElement.classList.add(PAUSE_UPLOAD);\n      targetElement.setAttribute('title', this.localizedTexts('pause'));\n      targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\n      targetElement.nextElementSibling.classList.add(ABORT_ICON);\n      targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\n    }\n\n    metaData.file.status = this.localizedTexts('inProgress');\n    metaData.file.statusCode = '3';\n    this.updateMetaData(metaData);\n    var eventArgs = {\n      event: e ? e : null,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\n      chunkSize: this.asyncSettings.chunkSize\n    };\n    this.trigger('resuming', eventArgs);\n\n    for (var i = 0; i < this.pausedData.length; i++) {\n      if (this.pausedData[i].end === this.pausedData[i].file.size) {\n        this.chunkUploadComplete(e, metaData, custom);\n      } else {\n        if (this.pausedData[i].file.name === metaData.file.name) {\n          this.pausedData[i].start = this.pausedData[i].end;\n          this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\n          this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\n          this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\n          this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.updateMetaData = function (metaData) {\n    if (this.uploadMetaData.indexOf(metaData) === -1) {\n      this.uploadMetaData.push(metaData);\n    } else {\n      this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\n      this.uploadMetaData.push(metaData);\n    }\n  };\n\n  Uploader.prototype.removeChunkProgressBar = function (metaData) {\n    var liElement = this.getLiElement(metaData.file);\n\n    if (!isNullOrUndefined(liElement)) {\n      this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\n      this.removeProgressbar(liElement, 'success');\n      var cancelButton = liElement.querySelector('.' + ABORT_ICON);\n\n      if (!isNullOrUndefined(cancelButton)) {\n        cancelButton.classList.add(DELETE_ICON);\n        cancelButton.setAttribute('title', this.localizedTexts('delete'));\n        cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\n      }\n    }\n  };\n\n  Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\n    var _this = this;\n\n    var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\n    var liElement;\n\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\n      liElement = this.getLiElement(metaData.file);\n    }\n\n    var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\n    var eventArgs = {\n      event: e,\n      file: metaData.file,\n      chunkIndex: metaData.chunkIndex,\n      totalChunk: chunkCount,\n      chunkSize: this.asyncSettings.chunkSize,\n      cancel: false,\n      response: requestResponse\n    };\n    this.trigger('chunkFailure', eventArgs, function (eventArgs) {\n      // To prevent triggering of failure event\n      if (!eventArgs.cancel) {\n        if (metaData.retryCount < _this.asyncSettings.retryCount) {\n          setTimeout(function () {\n            _this.retryRequest(liElement, metaData, custom);\n          }, _this.asyncSettings.retryAfterDelay);\n        } else {\n          if (!isNullOrUndefined(liElement)) {\n            var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ? liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\n\n            if (!isNullOrUndefined(pauseButton)) {\n              pauseButton.classList.add(RETRY_ICON);\n              pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\n            }\n\n            _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n\n            _this.removeProgressbar(liElement, 'failure');\n\n            liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\n            var iconElement = liElement.querySelector('.' + ABORT_ICON) ? liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\n            iconElement.classList.remove(ABORT_ICON);\n\n            if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\n              detach(liElement.querySelector('.' + PAUSE_UPLOAD));\n            }\n\n            if (metaData.start > 0) {\n              iconElement.classList.add(DELETE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('delete'));\n            } else {\n              iconElement.classList.add(REMOVE_ICON);\n              iconElement.setAttribute('title', _this.localizedTexts('remove'));\n            }\n          }\n\n          metaData.retryCount = 0;\n          var file_1 = metaData.file;\n\n          var failureMessage = _this.localizedTexts('uploadFailedMessage');\n\n          var args = {\n            e: e,\n            response: requestResponse,\n            operation: 'upload',\n            file: _this.updateStatus(file_1, failureMessage, '0', false),\n            statusText: failureMessage\n          };\n\n          _this.trigger('failure', args, function (args) {\n            _this.updateStatus(file_1, args.statusText, '0');\n\n            _this.uploadSequential();\n\n            _this.checkActionComplete(true);\n          });\n        }\n      }\n    });\n  };\n\n  Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\n    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\n      this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\n    }\n\n    metaData.retryCount += 1;\n    this.sendRequest(metaData.file, metaData);\n  };\n\n  Uploader.prototype.checkPausePlayAction = function (e) {\n    var targetElement = e.target;\n    var selectedElement = e.target.parentElement;\n    var index = this.fileList.indexOf(selectedElement);\n    var fileData = this.filesData[index];\n    var metaData = this.getCurrentMetaData(fileData);\n\n    if (targetElement.classList.contains(PAUSE_UPLOAD)) {\n      /* istanbul ignore next */\n      this.pauseUpload(metaData, e);\n    } else if (targetElement.classList.contains(RESUME_UPLOAD)) {\n      /* istanbul ignore next */\n      this.resumeUpload(metaData, e);\n    } else if (targetElement.classList.contains(RETRY_ICON)) {\n      if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\n        this.retryUpload(metaData, false);\n      } else {\n        this.retryUpload(metaData, true);\n      }\n    }\n  };\n\n  Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\n    if (fromcanceledStage) {\n      metaData.end = metaData.end + this.asyncSettings.chunkSize;\n      metaData.start = metaData.start + this.asyncSettings.chunkSize;\n      this.sendRequest(metaData.file, metaData);\n    } else {\n      metaData.file.statusCode = '1';\n      metaData.file.status = this.localizedTexts('readyToUploadMessage');\n      this.chunkUpload(metaData.file);\n    }\n    /* istanbul ignore next */\n\n\n    this.getLiElement(metaData.file).classList.add(RESTRICT_RETRY);\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\n    var _this = this;\n\n    if (metaData.file.statusCode === '4') {\n      return;\n    }\n\n    if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\n      metaData.file.statusCode = '3';\n      metaData.file.status = this.localizedTexts('inProgress');\n    }\n\n    this.updateMetaData(metaData);\n    var liElement = this.getLiElement(metaData.file);\n\n    if (isNullOrUndefined(liElement)) {\n      return;\n    }\n\n    var retryElement = liElement.querySelector('.' + RETRY_ICON);\n\n    if (!isNullOrUndefined(retryElement)) {\n      retryElement.classList.add(PAUSE_UPLOAD);\n      retryElement.setAttribute('title', this.localizedTexts('pause'));\n      retryElement.classList.remove(RETRY_ICON);\n    }\n\n    if (!isNullOrUndefined(liElement)) {\n      if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\n        var statusElement = liElement.querySelector('.' + STATUS);\n\n        if (isNullOrUndefined(this.template)) {\n          statusElement.classList.add(UPLOAD_INPROGRESS);\n          statusElement.classList.remove(UPLOAD_FAILED);\n          this.createProgressBar(liElement);\n          this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\n        }\n\n        var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) : liElement.querySelector('.' + DELETE_ICON);\n\n        if (!isNullOrUndefined(clearIcon)) {\n          clearIcon.classList.add(ABORT_ICON);\n          clearIcon.setAttribute('title', this.localizedTexts('abort'));\n          clearIcon.classList.remove(REMOVE_ICON);\n        }\n      }\n\n      if (!isNaN(Math.round(e.loaded / e.total * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\n        var progressVal = void 0;\n        var totalChunks = Math.ceil(metaData.file.size / this.asyncSettings.chunkSize) - 1;\n\n        if (this.asyncSettings.chunkSize && totalChunks) {\n          progressVal = Math.round(metaData.chunkIndex / totalChunks * 100);\n          this.changeProgressValue(liElement, progressVal.toString() + '%');\n        }\n      }\n\n      if (metaData.chunkIndex === 0) {\n        this.checkActionButtonStatus();\n      }\n    }\n\n    if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template) && isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\n      this.pauseButton = this.createElement('span', {\n        className: 'e-icons e-file-pause-btn',\n        attrs: {\n          'tabindex': this.btnTabIndex\n        }\n      });\n\n      if (this.browserName === 'msie') {\n        this.pauseButton.classList.add('e-msie');\n      }\n\n      var abortIcon = liElement.querySelector('.' + ABORT_ICON);\n      abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\n      this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\n      this.pauseButton.addEventListener('click', function (e) {\n        _this.checkPausePlayAction(e);\n      }, false);\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\r\n   * It is used to convert bytes value into kilobytes or megabytes depending on the size based\r\n   * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\r\n   *\r\n   * @param { number } bytes - Specifies the file size in bytes.\r\n   * @returns {string}\r\n   */\n\n\n  Uploader.prototype.bytesToSize = function (bytes) {\n    var i = -1;\n\n    if (!bytes) {\n      return '0.0 KB';\n    }\n\n    do {\n      bytes = bytes / 1024;\n      i++;\n    } while (bytes > 99);\n\n    if (i >= 2) {\n      bytes = bytes * 1024;\n      i = 1;\n    }\n\n    return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\n  };\n  /**\r\n   * Allows you to sort the file data alphabetically based on its file name clearly.\r\n   *\r\n   * @param { FileList } filesData - specifies the files data for upload.\r\n   * @returns {File[]}\r\n   */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.sortFileList = function (filesData) {\n    filesData = filesData ? filesData : this.sortFilesList;\n    var files = filesData;\n    var fileNames = [];\n\n    for (var i = 0; i < files.length; i++) {\n      fileNames.push(files[i].name);\n    }\n\n    var sortedFileNames = fileNames.sort();\n    var sortedFilesData = [];\n\n    for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\n      var name_3 = sortedFileNames_1[_i];\n\n      for (var i = 0; i < files.length; i++) {\n        if (name_3 === files[i].name) {\n          sortedFilesData.push(files[i]);\n        }\n      }\n    }\n\n    return sortedFilesData;\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\r\n   * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\r\n   *\r\n   * @method destroy\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.destroy = function () {\n    this.element.value = null;\n    this.clearTemplate();\n    this.clearAll();\n    this.unWireEvents();\n    this.unBindDropEvents();\n\n    if (this.multiple) {\n      this.element.removeAttribute('multiple');\n    }\n\n    if (!this.enabled) {\n      this.element.removeAttribute('disabled');\n    }\n\n    this.element.removeAttribute('accept');\n    this.setInitialAttributes();\n    var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\n\n    for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\n      var key = attributes_2[_i];\n      this.element.removeAttribute(key);\n    }\n\n    if (!isNullOrUndefined(this.uploadWrapper)) {\n      this.uploadWrapper.parentElement.appendChild(this.element);\n      detach(this.uploadWrapper);\n    }\n\n    this.uploadWrapper = null;\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\r\n   * Allows you to call the upload process manually by calling save URL action.\r\n   * To process the selected files (added in upload queue), pass an empty argument otherwise\r\n   * upload the specific file based on its argument.\r\n   *\r\n   * @param { FileInfo | FileInfo[] } files - Specifies the files data for upload.\r\n   * @param {boolean} custom - Specifies whether the uploader is rendered with custom file list.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.upload = function (files, custom) {\n    var _this = this;\n\n    files = files ? files : this.filesData;\n\n    if (this.sequentialUpload && (this.isFirstFileOnSelection || custom)) {\n      this.sequenceUpload(files);\n    } else {\n      var uploadFiles_1 = this.getFilesInArray(files);\n      var eventArgs = {\n        customFormData: [],\n        currentRequest: null,\n        cancel: false\n      };\n      this.trigger('beforeUpload', eventArgs, function (eventArgs) {\n        if (!eventArgs.cancel) {\n          _this.uploadFiles(uploadFiles_1, custom);\n        }\n      });\n    }\n  };\n\n  Uploader.prototype.getFilesInArray = function (files) {\n    var uploadFiles = [];\n\n    if (files instanceof Array) {\n      uploadFiles = files;\n    } else {\n      uploadFiles.push(files);\n    }\n\n    return uploadFiles;\n  };\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var file = _this.fileStreams[fileIndex].rawFile;\n\n      try {\n        var reader = new FileReader();\n\n        reader.onload = function (args) {\n          return function () {\n            try {\n              var contents = args.result;\n              var data = contents ? contents.split(';base64,')[1] : null;\n              resolve(data);\n            } catch (e) {\n              reject(e);\n            }\n          };\n        }(reader);\n\n        reader.readAsDataURL(file.slice(position, position + totalCount));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.uploadFileCount = function (ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return -1;\n    }\n\n    var result = files.length;\n    return result;\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFileRead = function (index, ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return -1;\n    }\n\n    var file = files[index];\n    var fileCount = this.newFileRef++;\n    this.fileStreams[fileCount] = file;\n    return fileCount;\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  /* istanbul ignore next */\n\n\n  Uploader.prototype.getFileInfo = function (index, ele) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var files = this.filesData;\n\n    if (!files || files.length === 0) {\n      return null;\n    }\n\n    var file = files[index];\n\n    if (!file) {\n      return null;\n    }\n\n    return this.filesData[index];\n  };\n\n  Uploader.prototype.uploadFiles = function (files, custom) {\n    var selectedFiles = [];\n\n    if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\n      return;\n    }\n\n    if (!custom || isNullOrUndefined(custom)) {\n      if (!this.multiple) {\n        var file = [];\n        file.push(files[0]);\n        selectedFiles = this.filterfileList(file);\n      } else {\n        selectedFiles = this.filterfileList(files);\n      }\n    } else {\n      selectedFiles = files;\n    }\n\n    for (var i = 0; i < selectedFiles.length; i++) {\n      this.uploadFilesRequest(selectedFiles, i, custom);\n    }\n  };\n\n  Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\n    var _this = this;\n\n    var cloneFiles = [];\n    var chunkEnabled = this.checkChunkUpload();\n    var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\n    ajax.emitError = false;\n    var getFileData;\n    var eventArgs = {\n      fileData: selectedFiles[i],\n      customFormData: [],\n      cancel: false\n    };\n    var formData = new FormData();\n\n    ajax.beforeSend = function (e) {\n      eventArgs.currentRequest = ajax.httpRequest;\n\n      _this.trigger('uploading', eventArgs, function (eventArgs) {\n        /* istanbul ignore next */\n        if (eventArgs.cancel) {\n          _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\n        }\n\n        _this.updateFormData(formData, eventArgs.customFormData);\n      });\n    };\n\n    if (selectedFiles[i].statusCode === '1') {\n      var name_4 = this.element.getAttribute('name');\n      formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\n\n      if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\n        this.chunkUpload(selectedFiles[i], custom, i);\n      } else {\n        ajax.onLoad = function (e) {\n          if (eventArgs.cancel) {\n            return {};\n          } else {\n            _this.uploadComplete(e, selectedFiles[i], custom);\n\n            return {};\n          }\n        };\n\n        ajax.onUploadProgress = function (e) {\n          if (eventArgs.cancel) {\n            return {};\n          } else {\n            _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\n\n            return {};\n          }\n        };\n        /* istanbul ignore next */\n\n\n        ajax.onError = function (e) {\n          _this.uploadFailed(e, selectedFiles[i]);\n\n          return {};\n        };\n\n        ajax.send(formData);\n      }\n    }\n  };\n\n  Uploader.prototype.spliceFiles = function (liIndex) {\n    var liElement = this.fileList[liIndex];\n    var allFiles = this.getFilesData();\n    var nameElements = +liElement.getAttribute('data-files-count');\n    var startIndex = 0;\n\n    for (var i = 0; i < liIndex; i++) {\n      startIndex += +this.fileList[i].getAttribute('data-files-count');\n    }\n\n    var endIndex = startIndex + nameElements - 1;\n\n    for (var j = endIndex; j >= startIndex; j--) {\n      allFiles.splice(j, 1);\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-param */\n\n  /**\r\n   * Remove the uploaded file from server manually by calling the remove URL action.\r\n   * If you pass an empty argument to this method, the complete file list can be cleared,\r\n   * otherwise remove the specific file based on its argument (“file_data”).\r\n   *\r\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\r\n   * @param { boolean } customTemplate - Set true if the component rendering with customize template.\r\n   * @param { boolean } removeDirectly - Set true if files remove without removing event.\r\n   * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\n    var _this = this;\n\n    if (isNullOrUndefined(postRawFile)) {\n      postRawFile = true;\n    }\n\n    var eventArgs = {\n      event: args,\n      cancel: false,\n      filesData: [],\n      customFormData: [],\n      postRawFile: postRawFile,\n      currentRequest: null\n    };\n    var beforeEventArgs = {\n      cancel: false,\n      customFormData: [],\n      currentRequest: null\n    };\n    this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\n      if (!beforeEventArgs.cancel) {\n        if (_this.isFormUpload()) {\n          eventArgs.filesData = fileData;\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              var removingFiles = _this.getFilesInArray(fileData);\n\n              var isLiRemoved = false;\n              var liIndex = void 0;\n\n              for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\n                var data = removingFiles_1[_i];\n\n                if (!isLiRemoved) {\n                  liIndex = _this.fileList.indexOf(data.list);\n                }\n\n                if (liIndex > -1) {\n                  var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\n\n                  if (inputElement) {\n                    detach(inputElement);\n                  }\n\n                  _this.spliceFiles(liIndex);\n\n                  detach(_this.fileList[liIndex]);\n\n                  _this.fileList.splice(liIndex, 1);\n\n                  isLiRemoved = true;\n                  liIndex = -1;\n                }\n              }\n            }\n          });\n        } else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\n          eventArgs.filesData = _this.getFilesData();\n\n          _this.trigger('removing', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n              _this.clearAll();\n            }\n          });\n        } else {\n          var removeFiles = [];\n          fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\n\n          if (fileData instanceof Array) {\n            removeFiles = fileData;\n          } else {\n            removeFiles.push(fileData);\n          }\n\n          eventArgs.filesData = removeFiles;\n          var removeUrl = _this.asyncSettings.removeUrl;\n          var validUrl = removeUrl === '' || isNullOrUndefined(removeUrl) ? false : true;\n\n          var _loop_5 = function (files) {\n            var fileUploadedIndex = _this.uploadedFilesData.indexOf(files);\n\n            if ((files.statusCode === '2' || files.statusCode === '4' || files.statusCode === '0' && fileUploadedIndex !== -1) && validUrl) {\n              _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\n            } else {\n              if (!removeDirectly) {\n                _this.trigger('removing', eventArgs, function (eventArgs) {\n                  if (!eventArgs.cancel) {\n                    _this.removeFilesData(files, customTemplate);\n                  }\n                });\n              } else {\n                _this.removeFilesData(files, customTemplate);\n              }\n            }\n\n            if (args && !args.target.classList.contains(REMOVE_ICON)) {\n              _this.checkActionComplete(false);\n            }\n          };\n\n          for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\n            var files = removeFiles_1[_i];\n\n            _loop_5(files);\n          }\n        }\n      }\n    });\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-param */\n\n  /**\r\n   * Clear all the file entries from list that can be uploaded files or added in upload queue.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.clearAll = function () {\n    var _this = this;\n\n    if (isNullOrUndefined(this.listParent)) {\n      if (this.browserName !== 'msie') {\n        this.element.value = '';\n      }\n\n      this.filesData = [];\n      return;\n    }\n\n    var eventArgs = {\n      cancel: false,\n      filesData: this.filesData\n    };\n    this.trigger('clearing', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel) {\n        _this.clearData();\n\n        _this.actionCompleteCount = 0;\n        _this.count = -1;\n      }\n    });\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\r\n   * Get the data of files which are shown in file list.\r\n   *\r\n   * @param { number } index - specifies the file list item(li) index.\r\n   * @returns {FileInfo[]}\r\n   */\n\n\n  Uploader.prototype.getFilesData = function (index) {\n    if (isNullOrUndefined(index)) {\n      return this.filesData;\n    } else {\n      return this.getSelectedFiles(index);\n    }\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\r\n   * Pauses the in-progress chunked upload based on the file data.\r\n   *\r\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\r\n   * @param { boolean } custom - Set true if used custom UI.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.pause = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.pauseUploading(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.pauseUploading = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '3') {\n        this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n\n  Uploader.prototype.getFiles = function (fileData) {\n    var files = [];\n\n    if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\n      files.push(fileData);\n    } else {\n      files = fileData;\n    }\n\n    return files;\n  };\n  /**\r\n   * Resumes the chunked upload that is previously paused based on the file data.\r\n   *\r\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\r\n   * @param { boolean } custom - Set true if used custom UI.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.resume = function (fileData, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n    this.resumeFiles(fileDataFiles, custom);\n  };\n\n  Uploader.prototype.resumeFiles = function (fileData, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '4') {\n        this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\n      }\n    }\n  };\n  /**\r\n   * Retries the canceled or failed file upload based on the file data.\r\n   *\r\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\r\n   * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\r\n   * @param {boolean} custom -Specifies whether the uploader is rendered with custom file list.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\n    fileData = fileData ? fileData : this.filesData;\n    var fileDataFiles = this.getFilesInArray(fileData);\n\n    if (this.sequentialUpload && this.isFirstFileOnSelection) {\n      this.isFirstFileOnSelection = false;\n    }\n\n    this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\n  };\n\n  Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\n    var files = this.getFiles(fileData);\n\n    for (var i = 0; i < files.length; i++) {\n      if (files[i].statusCode === '5' || files[i].statusCode === '0') {\n        if (this.asyncSettings.chunkSize > 0) {\n          this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\n        } else {\n          var liElement = void 0;\n\n          if (!custom) {\n            liElement = this.fileList[this.filesData.indexOf(files[i])];\n          }\n\n          this.reloadcanceledFile(null, files[i], liElement, custom);\n        }\n      }\n    }\n  };\n  /**\r\n   * Stops the in-progress chunked upload based on the file data.\r\n   * When the file upload is canceled, the partially uploaded file is removed from server.\r\n   *\r\n   * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\r\n   * @returns {void}\r\n   */\n\n\n  Uploader.prototype.cancel = function (fileData) {\n    fileData = fileData ? fileData : this.filesData;\n    var cancelingFiles = this.getFilesInArray(fileData);\n    this.cancelUpload(cancelingFiles);\n  };\n\n  Uploader.prototype.cancelUpload = function (fileData) {\n    var files = this.getFiles(fileData);\n\n    if (this.asyncSettings.chunkSize > 0) {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          var metaData = this.getCurrentMetaData(files[i], null);\n          metaData.file.statusCode = '5';\n          metaData.file.status = this.localizedTexts('fileUploadCancel');\n          this.updateMetaData(metaData);\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    } else {\n      for (var i = 0; i < files.length; i++) {\n        if (files[i].statusCode === '3') {\n          files[i].statusCode = '5';\n          files[i].status = this.localizedTexts('fileUploadCancel');\n          this.showHideUploadSpinner(files[i]);\n        }\n      }\n    }\n  };\n\n  Uploader.prototype.showHideUploadSpinner = function (files) {\n    var liElement = this.getLiElement(files);\n\n    if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\n      var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\n      createSpinner({\n        target: spinnerTarget,\n        width: '20px'\n      });\n      showSpinner(spinnerTarget);\n    }\n  };\n\n  __decorate([Complex({\n    saveUrl: '',\n    removeUrl: ''\n  }, AsyncSettings)], Uploader.prototype, \"asyncSettings\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"sequentialUpload\", void 0);\n\n  __decorate([Property({})], Uploader.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"enabled\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"template\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"multiple\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"autoUpload\", void 0);\n\n  __decorate([Complex({}, ButtonsProps)], Uploader.prototype, \"buttons\", void 0);\n\n  __decorate([Property('')], Uploader.prototype, \"allowedExtensions\", void 0);\n\n  __decorate([Property(0)], Uploader.prototype, \"minFileSize\", void 0);\n\n  __decorate([Property(30000000)], Uploader.prototype, \"maxFileSize\", void 0);\n\n  __decorate([Property(null)], Uploader.prototype, \"dropArea\", void 0);\n\n  __decorate([Collection([{}], FilesProp)], Uploader.prototype, \"files\", void 0);\n\n  __decorate([Property(true)], Uploader.prototype, \"showFileList\", void 0);\n\n  __decorate([Property(false)], Uploader.prototype, \"directoryUpload\", void 0);\n\n  __decorate([Property('Default')], Uploader.prototype, \"dropEffect\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"created\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"rendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeUpload\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"fileListRendering\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"selected\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"uploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"success\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"failure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"removing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"beforeRemove\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"clearing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"progress\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"change\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkSuccess\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkFailure\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"chunkUploading\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"canceling\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"pausing\", void 0);\n\n  __decorate([Event()], Uploader.prototype, \"resuming\", void 0);\n\n  Uploader = __decorate([NotifyPropertyChanges], Uploader);\n  return Uploader;\n}(Component);\n\nexport { Uploader };\n/* eslint-enable @typescript-eslint/no-explicit-any */","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/CNPM/RubyGYM/client/node_modules/@syncfusion/ej2-inputs/src/uploader/uploader.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","Event","EventHandler","L10n","compile","isNullOrUndefined","NotifyPropertyChanges","detach","append","Animation","addClass","removeClass","KeyboardEvents","setValue","getValue","ChildProperty","Collection","Complex","Browser","Ajax","getUniqueID","closest","remove","createSpinner","showSpinner","hideSpinner","select","selectAll","CONTROL_WRAPPER","INPUT_WRAPPER","DROP_AREA","DROP_WRAPPER","LIST_PARENT","FILE","STATUS","ACTION_BUTTONS","UPLOAD_BUTTONS","CLEAR_BUTTONS","FILE_NAME","FILE_TYPE","FILE_SIZE","REMOVE_ICON","DELETE_ICON","SPINNER_PANE","ABORT_ICON","RETRY_ICON","DRAG_HOVER","PROGRESS_WRAPPER","PROGRESSBAR","PROGRESSBAR_TEXT","UPLOAD_INPROGRESS","UPLOAD_SUCCESS","UPLOAD_FAILED","TEXT_CONTAINER","VALIDATION_FAILS","RTL","DISABLED","RTL_CONTAINER","ICON_FOCUSED","PROGRESS_INNER_WRAPPER","PAUSE_UPLOAD","RESUME_UPLOAD","RESTRICT_RETRY","wrapperAttr","FORM_UPLOAD","HIDDEN_INPUT","INVALID_FILE","INFORMATION","FilesProp","_super","apply","ButtonsProps","AsyncSettings","Uploader","options","element","_this","call","initialAttr","accept","multiple","disabled","uploadedFilesData","base64String","isForm","allTypes","pausedData","uploadMetaData","tabIndex","btnTabIndex","disableKeyboardNavigation","count","actionCompleteCount","flag","selectedFiles","uploaderName","fileStreams","newFileRef","isFirstFileOnSelection","dragCounter","fileList","filesData","uploaderOptions","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setExtensions","allowedExtensions","clearAll","setControlStatus","setMultipleSelection","setRTL","reRenderFileList","buttons","browse","clear","upload","renderButtonTemplates","unBindDropEvents","updateDropArea","updateHTMLAttrToElement","updateHTMLAttrToWrapper","checkHTMLAttributes","renderPreLoadFiles","updateDirectoryAttributes","l10n","setLocale","locale","setLocalizedTexts","preLocaleObj","setCSSClass","cssClass","template","browseButton","innerText","localizedTexts","setAttribute","uploadWrapper","querySelector","innerHTML","updateFileList","getKeyValue","val","keyValue","status","classList","contains","autoUpload","uploadButton","clearButton","listParent","createFileList","actionButtons","removeActionButtons","renderActionButtons","checkActionButtonStatus","preRender","localeText","Browse","Clear","Upload","dropFilesHint","invalidMaxFileSize","invalidMinFileSize","invalidFileType","uploadFailedMessage","uploadSuccessMessage","removedSuccessMessage","removedFailedMessage","inProgress","readyToUploadMessage","abort","cancel","delete","pauseUpload","pause","resume","retry","fileUploadCancel","invalidFileSelection","totalFiles","size","formRendered","ejInstance","tagName","inputElement","createElement","attrs","type","index","attributes","nodeName","nodeValue","hasAttribute","appendChild","isPureReactComponent","props","name","id","getAttribute","keyConfigs","enter","browserName","info","parentEle","document","documentElement","parentElement","formElement","getPersistData","addOnPersist","getModuleName","directoryUpload","removeAttribute","render","renderBrowseButton","initializeUpload","wireEvents","className","textContent","blur","isPreloadFiles","focus","wireActionButtonEvents","serverActionButtonsEventBind","unwireActionButtonEvents","add","uploadButtonClick","clearButtonClick","uploadText","clearText","inputWrapper","insertBefore","dropAreaWrapper","setDropArea","files","enablePersistence","slice","clearData","files_1","data","fileData","split","rawFile","validationMessages","minSize","maxSize","statusCode","push","allowUpload","showFileList","sequentialUpload","length_1","querySelectorAll","dropTextArea","dropArea","dropZoneElement","enableDropText","parentNode","createDropTextHint","undefined","setProperties","bindDropEvents","fileDropArea","htmlAttributes","pro","indexOf","updatedClassValues","replace","trim","uploadStyle","newAttr","createAttribute","value","setAttributeNode","checkAutoUpload","sequenceUpload","isFileListCreated","oldCSSClass","updatedCssClassValue","updatedOldCssClass","browseButtonClick","onSelectFiles","removeFocus","keyboardModule","keyAction","keyActionHandler","bind","eventName","resetForm","unWireEvents","destroy","e","targetElement","action","metaData","getCurrentMetaData","file","abortUpload","resumeUpload","chunkUpload","removeFiles","preventDefault","stopPropagation","fileInfo","targetMetaData","activeElement","click","dropElement","dragHover","onDragLeave","onPasteFile","onDragEnter","enabled","dropEffect","dataTransfer","toLowerCase","event","item","clipboardData","items","pasteFile","kind","match","renderSelectedFiles","getAsFile","getSelectedFiles","liElement","allFiles","getFilesData","nameElements","startIndex","j","args","selectedElement","formUpload","isFormUpload","getFilesInArray","spinnerTarget","width","uploadSequential","checkActionComplete","removeFilesData","customTemplate","splice","getLiElement","removeUploadedFile","eventArgs","removeDirectly","custom","ajax","asyncSettings","removeUrl","emitError","formData","FormData","beforeSend","currentRequest","httpRequest","trigger","removingEventCallback","onLoad","removeCompleted","onError","removeFailed","send","postRawFile","updateFormData","customFormData","customData","_loop_1","map","updateCustomheader","request","_loop_2","setRequestHeader","response","currentTarget","getResponse","readyState","operation","updateStatus","rootElement","statusElement","getFilesFromFolder","filesEntries","validDirectoryUpload","checkDirectoryUpload","_loop_3","webkitGetAsEntry","isFile","files_2","fileObj","path","fullPath","this_1","isDirectory","traverseFileTree","directoryReader","createReader","readFileFromDirectory","readEntries","entries","pushFilesEntries","_loop_4","this_2","targetFiles","sortFilesList","sortFileList","getBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","directory","paste","isModified","modifiedFilesData","progressInterval","isCanceled","updateInitialFileDetails","checkExtension","_internalRenderSelect","fileName","substring","lastIndexOf","getFileType","webkitRelativePath","fileDetails","validatedFileSize","fileSource","concat","k","dataFiles","updateSortedFileList","raiseActionComplete","allowFormUpload","saveUrl","singleUpload","previousListClone","added","removedList","cloneNode","removedList_1","oldList","childNodes","createParentUL","isBlank","str","test","dropFiles","extensions","extensions_1","extension","toLocaleLowerCase","fileSize","minSizeError","maxSizeError","minFileSize","maxFileSize","errorMessage","isPreLoadFile","isPreload","createCustomfileList","fileData_1","listItem","listElement","uploadTemplateFn","templateComplier","liTempCompiler","isStringTemplate","fromElements","eventsArgs","renderReactTemplates","formFileList","fileContainer","statusMessage","fileData_2","fileNameEle","getFileNameOnly","fileTypeEle","fileType","enableRtl","rtlContainer","truncateName","formValidateFileInfo","setListToFileInfo","infoEle","bytesToSize","getFileSize","createFormInput","iconElement","mergeFileInfo","addInvalidClass","typeValidationMessage","fileData_3","input","fileData_4","list","fileNames","fileData_5","join","statusForFormUpload","isValid","fileData_6","formCustomFileList","isSelectedFile","fileData_7","textContainer","textElement","fileExtension","preventActionComplete","getSlicedName","nameElement","text","dataset","tail","fileData_8","offsetWidth","scrollWidth","names","setInitialAttributes","filterfileList","filterFiles","li","updateLiStatus","createProgressBar","progressbarWrapper","progressBar","max","progressbarInnerWrapper","progressbarText","updateProgressbar","isNaN","Math","round","loaded","total","parseInt","changeProgressValue","toString","progressValue","uploadInProgress","customUI","cancelUploadingFile","updateProgressBarClasses","iconEle","name_1","removecanceledFile","renderFailureState","requestResponse","removeProgressbar","deleteIcon","pauseButton","retryElement","addEventListener","reloadcanceledFile","uploadComplete","raiseSuccessEvent","uploadFailed","statusText","headers","getAllResponseHeaders","withCredentials","spinnerEle","increment","getSelectedFileStatus","matchFiles","matchFilesIndex","selectFileIndex","selectedFileData","fileDataIndex","callType","progressAnimation","duration","animate","setTimeout","animateProgressBar","uploadTemplate","exception","getConstant","isDynamic","attributes_1","isMutiple","isDisabled","fileIndex","start","end","min","chunkSize","blob","chunkIndex","retryCount","sendRequest","totalChunk","ceil","url","async","contentType","chunkUploadComplete","onUploadProgress","chunkUploadInProgress","currentChunkIndex","uploadingEventCallback","chunkUploadFailed","eventCancelByArgs","removeIcon","checkChunkUpload","updateMetaData","eventArgs_1","sendNextRequest","name_2","removeChunkFile","removeChunkProgressBar","pauseIcon","chunkCount","nextElementSibling","cancelButton","retryRequest","retryAfterDelay","file_1","failureMessage","checkPausePlayAction","retryUpload","fromcanceledStage","clearIcon","progressVal","totalChunks","abortIcon","bytes","toFixed","sortedFileNames","sort","sortedFilesData","sortedFileNames_1","name_3","clearTemplate","attributes_2","uploadFiles_1","uploadFiles","serverReadFileBase64","position","totalCount","reader","contents","uploadFileCount","ele","getFileRead","fileCount","getFileInfo","uploadFilesRequest","cloneFiles","chunkEnabled","getFileData","name_4","spliceFiles","liIndex","endIndex","beforeEventArgs","removingFiles","isLiRemoved","removingFiles_1","validUrl","_loop_5","fileUploadedIndex","removeFiles_1","fileDataFiles","pauseUploading","getFiles","resumeFiles","retryFailedFiles","cancelingFiles","cancelUpload","showHideUploadSpinner"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Component, Property, Event, EventHandler, L10n, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport { NotifyPropertyChanges, detach, append, Animation } from '@syncfusion/ej2-base';\r\nimport { addClass, removeClass, KeyboardEvents, setValue, getValue, ChildProperty } from '@syncfusion/ej2-base';\r\nimport { Collection, Complex, Browser, Ajax, getUniqueID, closest, remove } from '@syncfusion/ej2-base';\r\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\r\nimport { select, selectAll } from '@syncfusion/ej2-base';\r\nvar CONTROL_WRAPPER = 'e-upload e-control-wrapper';\r\nvar INPUT_WRAPPER = 'e-file-select';\r\nvar DROP_AREA = 'e-file-drop';\r\nvar DROP_WRAPPER = 'e-file-select-wrap';\r\nvar LIST_PARENT = 'e-upload-files';\r\nvar FILE = 'e-upload-file-list';\r\nvar STATUS = 'e-file-status';\r\nvar ACTION_BUTTONS = 'e-upload-actions';\r\nvar UPLOAD_BUTTONS = 'e-file-upload-btn e-css e-btn e-flat e-primary';\r\nvar CLEAR_BUTTONS = 'e-file-clear-btn e-css e-btn e-flat';\r\nvar FILE_NAME = 'e-file-name';\r\nvar FILE_TYPE = 'e-file-type';\r\nvar FILE_SIZE = 'e-file-size';\r\nvar REMOVE_ICON = 'e-file-remove-btn';\r\nvar DELETE_ICON = 'e-file-delete-btn';\r\nvar SPINNER_PANE = 'e-spinner-pane';\r\nvar ABORT_ICON = 'e-file-abort-btn';\r\nvar RETRY_ICON = 'e-file-reload-btn';\r\nvar DRAG_HOVER = 'e-upload-drag-hover';\r\nvar PROGRESS_WRAPPER = 'e-upload-progress-wrap';\r\nvar PROGRESSBAR = 'e-upload-progress-bar';\r\nvar PROGRESSBAR_TEXT = 'e-progress-bar-text';\r\nvar UPLOAD_INPROGRESS = 'e-upload-progress';\r\nvar UPLOAD_SUCCESS = 'e-upload-success';\r\nvar UPLOAD_FAILED = 'e-upload-fails';\r\nvar TEXT_CONTAINER = 'e-file-container';\r\nvar VALIDATION_FAILS = 'e-validation-fails';\r\nvar RTL = 'e-rtl';\r\nvar DISABLED = 'e-disabled';\r\nvar RTL_CONTAINER = 'e-rtl-container';\r\nvar ICON_FOCUSED = 'e-clear-icon-focus';\r\nvar PROGRESS_INNER_WRAPPER = 'e-progress-inner-wrap';\r\nvar PAUSE_UPLOAD = 'e-file-pause-btn';\r\nvar RESUME_UPLOAD = 'e-file-play-btn';\r\nvar RESTRICT_RETRY = 'e-restrict-retry';\r\nvar wrapperAttr = ['title', 'style', 'class'];\r\nvar FORM_UPLOAD = 'e-form-upload';\r\nvar HIDDEN_INPUT = 'e-hidden-file-input';\r\nvar INVALID_FILE = 'e-file-invalid';\r\nvar INFORMATION = 'e-file-information';\r\nvar FilesProp = /** @class */ (function (_super) {\r\n    __extends(FilesProp, _super);\r\n    function FilesProp() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property('')\r\n    ], FilesProp.prototype, \"name\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], FilesProp.prototype, \"size\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], FilesProp.prototype, \"type\", void 0);\r\n    return FilesProp;\r\n}(ChildProperty));\r\nexport { FilesProp };\r\nvar ButtonsProps = /** @class */ (function (_super) {\r\n    __extends(ButtonsProps, _super);\r\n    function ButtonsProps() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property('Browse...')\r\n    ], ButtonsProps.prototype, \"browse\", void 0);\r\n    __decorate([\r\n        Property('Upload')\r\n    ], ButtonsProps.prototype, \"upload\", void 0);\r\n    __decorate([\r\n        Property('Clear')\r\n    ], ButtonsProps.prototype, \"clear\", void 0);\r\n    return ButtonsProps;\r\n}(ChildProperty));\r\nexport { ButtonsProps };\r\nvar AsyncSettings = /** @class */ (function (_super) {\r\n    __extends(AsyncSettings, _super);\r\n    function AsyncSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property('')\r\n    ], AsyncSettings.prototype, \"saveUrl\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], AsyncSettings.prototype, \"removeUrl\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], AsyncSettings.prototype, \"chunkSize\", void 0);\r\n    __decorate([\r\n        Property(3)\r\n    ], AsyncSettings.prototype, \"retryCount\", void 0);\r\n    __decorate([\r\n        Property(500)\r\n    ], AsyncSettings.prototype, \"retryAfterDelay\", void 0);\r\n    return AsyncSettings;\r\n}(ChildProperty));\r\nexport { AsyncSettings };\r\n/**\r\n * The uploader component allows to upload images, documents, and other files from local to server.\r\n * ```html\r\n * <input type='file' name='images[]' id='upload'/>\r\n * ```\r\n * ```typescript\r\n * <script>\r\n *   var uploadObj = new Uploader();\r\n *   uploadObj.appendTo('#upload');\r\n * </script>\r\n * ```\r\n */\r\nvar Uploader = /** @class */ (function (_super) {\r\n    __extends(Uploader, _super);\r\n    /**\r\n     * Triggers when change the Uploader value.\r\n     *\r\n     * @param {UploaderModel} options - Specifies the Uploader model.\r\n     * @param {string | HTMLInputElement} element - Specifies the element to render as component.\r\n     * @private\r\n     */\r\n    function Uploader(options, element) {\r\n        var _this = _super.call(this, options, element) || this;\r\n        _this.initialAttr = { accept: null, multiple: false, disabled: false };\r\n        _this.uploadedFilesData = [];\r\n        _this.base64String = [];\r\n        _this.isForm = false;\r\n        _this.allTypes = false;\r\n        _this.pausedData = [];\r\n        _this.uploadMetaData = [];\r\n        _this.tabIndex = '0';\r\n        _this.btnTabIndex = '0';\r\n        _this.disableKeyboardNavigation = false;\r\n        _this.count = -1;\r\n        _this.actionCompleteCount = 0;\r\n        _this.flag = true;\r\n        _this.selectedFiles = [];\r\n        _this.uploaderName = 'UploadFiles';\r\n        _this.fileStreams = [];\r\n        _this.newFileRef = 0;\r\n        _this.isFirstFileOnSelection = false;\r\n        _this.dragCounter = 0;\r\n        /**\r\n         * Get the file item(li) which are shown in file list.\r\n         *\r\n         * @private\r\n         */\r\n        _this.fileList = [];\r\n        /**\r\n         * Get the data of files which are shown in file list.\r\n         *\r\n         * @private\r\n         */\r\n        _this.filesData = [];\r\n        _this.uploaderOptions = options;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Calls internally if any of the property value is changed.\r\n     *\r\n     * @param {UploaderModel} newProp - Returns the dynamic property value of the component.\r\n     * @param {UploaderModel} oldProp - Returns the previous property value of the component.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Uploader.prototype.onPropertyChanged = function (newProp, oldProp) {\r\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            switch (prop) {\r\n                case 'allowedExtensions':\r\n                    this.setExtensions(this.allowedExtensions);\r\n                    this.clearAll();\r\n                    break;\r\n                case 'enabled':\r\n                    this.setControlStatus();\r\n                    break;\r\n                case 'multiple':\r\n                    this.setMultipleSelection();\r\n                    break;\r\n                case 'enableRtl':\r\n                    this.setRTL();\r\n                    this.reRenderFileList();\r\n                    break;\r\n                case 'buttons':\r\n                    this.buttons.browse = isNullOrUndefined(this.buttons.browse) ? '' : this.buttons.browse;\r\n                    this.buttons.clear = isNullOrUndefined(this.buttons.clear) ? '' : this.buttons.clear;\r\n                    this.buttons.upload = isNullOrUndefined(this.buttons.upload) ? '' : this.buttons.upload;\r\n                    this.renderButtonTemplates();\r\n                    break;\r\n                case 'dropArea':\r\n                    this.unBindDropEvents();\r\n                    this.updateDropArea();\r\n                    break;\r\n                case 'htmlAttributes':\r\n                    this.updateHTMLAttrToElement();\r\n                    this.updateHTMLAttrToWrapper();\r\n                    this.checkHTMLAttributes(true);\r\n                    break;\r\n                case 'files':\r\n                    this.renderPreLoadFiles();\r\n                    break;\r\n                case 'directoryUpload':\r\n                    this.updateDirectoryAttributes();\r\n                    break;\r\n                case 'template':\r\n                    this.clearAll();\r\n                    break;\r\n                case 'minFileSize':\r\n                case 'maxFileSize':\r\n                case 'autoUpload':\r\n                    this.clearAll();\r\n                    break;\r\n                case 'sequentialUpload':\r\n                    this.clearAll();\r\n                    break;\r\n                case 'locale':\r\n                    this.l10n.setLocale(this.locale);\r\n                    this.setLocalizedTexts();\r\n                    this.preLocaleObj = getValue('currentLocale', this.l10n);\r\n                    break;\r\n                case 'cssClass':\r\n                    this.setCSSClass(oldProp.cssClass);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.setLocalizedTexts = function () {\r\n        if (isNullOrUndefined(this.template)) {\r\n            if (typeof (this.buttons.browse) === 'string') {\r\n                this.browseButton.innerText = (this.buttons.browse === 'Browse...') ?\r\n                    this.localizedTexts('Browse') : this.buttons.browse;\r\n                this.browseButton.setAttribute('title', this.browseButton.innerText);\r\n                if (this.uploadWrapper && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + DROP_AREA))) {\r\n                    this.uploadWrapper.querySelector('.' + DROP_AREA).innerHTML = this.localizedTexts('dropFilesHint');\r\n                }\r\n            }\r\n            this.updateFileList();\r\n        }\r\n    };\r\n    Uploader.prototype.getKeyValue = function (val) {\r\n        var keyValue;\r\n        for (var _i = 0, _a = Object.keys(this.preLocaleObj); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            if (this.preLocaleObj[key] === val) {\r\n                keyValue = key;\r\n            }\r\n        }\r\n        return keyValue;\r\n    };\r\n    Uploader.prototype.updateFileList = function () {\r\n        var element;\r\n        /* istanbul ignore next */\r\n        if (this.fileList.length > 0 && !isNullOrUndefined(this.uploadWrapper.querySelector('.' + LIST_PARENT))) {\r\n            for (var i = 0; i < this.fileList.length; i++) {\r\n                element = this.fileList[i].querySelector('.e-file-status');\r\n                element.innerHTML = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\r\n                this.filesData[i].status = this.localizedTexts(this.getKeyValue(this.filesData[i].status));\r\n                if (this.fileList[i].classList.contains(UPLOAD_SUCCESS)) {\r\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('delete'));\r\n                }\r\n                if (this.fileList[i].querySelector('.e-file-play-btn')) {\r\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('resume'));\r\n                }\r\n                if (this.fileList[i].querySelector('.e-file-remove-btn')) {\r\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('remove'));\r\n                }\r\n                if (this.fileList[i].querySelector('.e-file-reload-btn')) {\r\n                    this.fileList[i].querySelector('.e-icons').setAttribute('title', this.localizedTexts('retry'));\r\n                }\r\n                if (!this.autoUpload) {\r\n                    this.uploadButton.innerText = (this.buttons.upload === 'Upload') ?\r\n                        this.localizedTexts('Upload') : this.buttons.upload;\r\n                    this.uploadButton.setAttribute('title', this.localizedTexts('Upload'));\r\n                    this.clearButton.innerText = (this.buttons.clear === 'Clear') ?\r\n                        this.localizedTexts('Clear') : this.buttons.clear;\r\n                    this.clearButton.setAttribute('title', this.localizedTexts('Clear'));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.reRenderFileList = function () {\r\n        if (this.listParent) {\r\n            detach(this.listParent);\r\n            this.listParent = null;\r\n            this.fileList = [];\r\n            this.createFileList(this.filesData);\r\n            if (this.actionButtons) {\r\n                this.removeActionButtons();\r\n                this.renderActionButtons();\r\n                this.checkActionButtonStatus();\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.preRender = function () {\r\n        this.localeText = { Browse: 'Browse...', Clear: 'Clear', Upload: 'Upload',\r\n            dropFilesHint: 'Or drop files here', invalidMaxFileSize: 'File size is too large',\r\n            invalidMinFileSize: 'File size is too small', invalidFileType: 'File type is not allowed',\r\n            uploadFailedMessage: 'File failed to upload', uploadSuccessMessage: 'File uploaded successfully',\r\n            removedSuccessMessage: 'File removed successfully', removedFailedMessage: 'Unable to remove file', inProgress: 'Uploading',\r\n            readyToUploadMessage: 'Ready to upload', abort: 'Abort', remove: 'Remove', cancel: 'Cancel', delete: 'Delete file',\r\n            pauseUpload: 'File upload paused', pause: 'Pause', resume: 'Resume', retry: 'Retry',\r\n            fileUploadCancel: 'File upload canceled', invalidFileSelection: 'Invalid files selected', totalFiles: 'Total files',\r\n            size: 'Size'\r\n        };\r\n        this.l10n = new L10n('uploader', this.localeText, this.locale);\r\n        this.preLocaleObj = getValue('currentLocale', this.l10n);\r\n        this.formRendered();\r\n        this.updateHTMLAttrToElement();\r\n        this.checkHTMLAttributes(false);\r\n        var ejInstance = getValue('ej2_instances', this.element);\r\n        /* istanbul ignore next */\r\n        if (this.element.tagName === 'EJS-UPLOADER') {\r\n            var inputElement = this.createElement('input', { attrs: { type: 'file' } });\r\n            var index = 0;\r\n            for (index; index < this.element.attributes.length; index++) {\r\n                inputElement.setAttribute(this.element.attributes[index].nodeName, this.element.attributes[index].nodeValue);\r\n                inputElement.innerHTML = this.element.innerHTML;\r\n            }\r\n            if (!inputElement.hasAttribute('name')) {\r\n                inputElement.setAttribute('name', 'UploadFiles');\r\n            }\r\n            this.element.appendChild(inputElement);\r\n            this.element = inputElement;\r\n            setValue('ej2_instances', ejInstance, this.element);\r\n        }\r\n        /* istanbul ignore next */\r\n        if (ejInstance[0].isPureReactComponent) {\r\n            if (!isNullOrUndefined(ejInstance[0].props.name)) {\r\n                this.element.setAttribute('name', ejInstance[0].props.name);\r\n            }\r\n            else if (!isNullOrUndefined(ejInstance[0].props.id) && isNullOrUndefined(ejInstance[0].props.name)) {\r\n                this.element.setAttribute('name', ejInstance[0].props.id);\r\n            }\r\n            else {\r\n                this.element.setAttribute('name', 'UploadFiles');\r\n            }\r\n        }\r\n        if (isNullOrUndefined(this.element.getAttribute('name'))) {\r\n            this.element.setAttribute('name', this.element.getAttribute('id'));\r\n        }\r\n        if (!this.element.hasAttribute('type')) {\r\n            this.element.setAttribute('type', 'file');\r\n        }\r\n        this.updateDirectoryAttributes();\r\n        this.keyConfigs = {\r\n            enter: 'enter'\r\n        };\r\n        if (this.element.hasAttribute('tabindex')) {\r\n            this.tabIndex = this.element.getAttribute('tabindex');\r\n        }\r\n        this.browserName = Browser.info.name;\r\n        this.uploaderName = this.element.getAttribute('name');\r\n    };\r\n    Uploader.prototype.formRendered = function () {\r\n        var parentEle = closest(this.element, 'form');\r\n        if (!isNullOrUndefined(parentEle)) {\r\n            for (; parentEle && parentEle !== document.documentElement; parentEle = parentEle.parentElement) {\r\n                if (parentEle.tagName === 'FORM') {\r\n                    this.isForm = true;\r\n                    this.formElement = parentEle;\r\n                    parentEle.setAttribute('enctype', 'multipart/form-data');\r\n                    parentEle.setAttribute('encoding', 'multipart/form-data');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.getPersistData = function () {\r\n        return this.addOnPersist(['filesData']);\r\n    };\r\n    /**\r\n     * Return the module name of the component.\r\n     *\r\n     * @returns {string} Returns the component name.\r\n     */\r\n    Uploader.prototype.getModuleName = function () {\r\n        return 'uploader';\r\n    };\r\n    Uploader.prototype.updateDirectoryAttributes = function () {\r\n        if (this.directoryUpload) {\r\n            this.element.setAttribute('directory', 'true');\r\n            this.element.setAttribute('webkitdirectory', 'true');\r\n        }\r\n        else {\r\n            this.element.removeAttribute('directory');\r\n            this.element.removeAttribute('webkitdirectory');\r\n        }\r\n    };\r\n    /**\r\n     * To Initialize the control rendering\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.render = function () {\r\n        this.renderBrowseButton();\r\n        this.initializeUpload();\r\n        this.updateHTMLAttrToWrapper();\r\n        this.wireEvents();\r\n        this.setMultipleSelection();\r\n        this.setExtensions(this.allowedExtensions);\r\n        this.setRTL();\r\n        this.renderPreLoadFiles();\r\n        this.setControlStatus();\r\n        this.setCSSClass();\r\n    };\r\n    Uploader.prototype.renderBrowseButton = function () {\r\n        this.browseButton = this.createElement('button', { className: 'e-css e-btn', attrs: { 'type': 'button' } });\r\n        this.browseButton.setAttribute('tabindex', this.tabIndex);\r\n        if (typeof (this.buttons.browse) === 'string') {\r\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\r\n                this.localizedTexts('Browse') : this.buttons.browse;\r\n            this.browseButton.setAttribute('title', this.browseButton.innerText);\r\n        }\r\n        else {\r\n            this.browseButton.appendChild(this.buttons.browse);\r\n        }\r\n        this.element.setAttribute('aria-label', 'Uploader');\r\n    };\r\n    Uploader.prototype.renderActionButtons = function () {\r\n        this.element.setAttribute('tabindex', '-1');\r\n        this.actionButtons = this.createElement('div', { className: ACTION_BUTTONS });\r\n        this.uploadButton = this.createElement('button', { className: UPLOAD_BUTTONS,\r\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\r\n        this.clearButton = this.createElement('button', { className: CLEAR_BUTTONS,\r\n            attrs: { 'type': 'button', 'tabindex': this.btnTabIndex } });\r\n        this.actionButtons.appendChild(this.clearButton);\r\n        this.actionButtons.appendChild(this.uploadButton);\r\n        this.renderButtonTemplates();\r\n        this.uploadWrapper.appendChild(this.actionButtons);\r\n        this.browseButton.blur();\r\n        if (!this.isPreloadFiles) {\r\n            this.uploadButton.focus();\r\n        }\r\n        this.wireActionButtonEvents();\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.serverActionButtonsEventBind = function (element) {\r\n        if (element && !this.isForm) {\r\n            this.browseButton.blur();\r\n            this.actionButtons = element;\r\n            this.uploadButton = this.actionButtons.querySelector('.e-file-upload-btn');\r\n            this.clearButton = this.actionButtons.querySelector('.e-file-clear-btn');\r\n            this.uploadButton.focus();\r\n            this.unwireActionButtonEvents();\r\n            this.wireActionButtonEvents();\r\n            this.checkActionButtonStatus();\r\n        }\r\n    };\r\n    Uploader.prototype.wireActionButtonEvents = function () {\r\n        EventHandler.add(this.uploadButton, 'click', this.uploadButtonClick, this);\r\n        EventHandler.add(this.clearButton, 'click', this.clearButtonClick, this);\r\n    };\r\n    Uploader.prototype.unwireActionButtonEvents = function () {\r\n        EventHandler.remove(this.uploadButton, 'click', this.uploadButtonClick);\r\n        EventHandler.remove(this.clearButton, 'click', this.clearButtonClick);\r\n    };\r\n    Uploader.prototype.removeActionButtons = function () {\r\n        if (this.actionButtons) {\r\n            this.unwireActionButtonEvents();\r\n            detach(this.actionButtons);\r\n            this.actionButtons = null;\r\n        }\r\n    };\r\n    Uploader.prototype.renderButtonTemplates = function () {\r\n        if (typeof (this.buttons.browse) === 'string') {\r\n            this.browseButton.textContent = (this.buttons.browse === 'Browse...') ?\r\n                this.localizedTexts('Browse') : this.buttons.browse;\r\n            this.browseButton.setAttribute('title', this.browseButton.textContent);\r\n        }\r\n        else {\r\n            this.browseButton.innerHTML = '';\r\n            this.browseButton.appendChild(this.buttons.browse);\r\n        }\r\n        if (this.uploadButton) {\r\n            var uploadText = isNullOrUndefined(this.buttons.upload) ? 'Upload' : this.buttons.upload;\r\n            this.buttons.upload = uploadText;\r\n            if (typeof (this.buttons.upload) === 'string') {\r\n                this.uploadButton.textContent = (this.buttons.upload === 'Upload') ?\r\n                    this.localizedTexts('Upload') : this.buttons.upload;\r\n                this.uploadButton.setAttribute('title', this.uploadButton.textContent);\r\n            }\r\n            else {\r\n                this.uploadButton.innerHTML = '';\r\n                this.uploadButton.appendChild(this.buttons.upload);\r\n            }\r\n        }\r\n        if (this.clearButton) {\r\n            var clearText = isNullOrUndefined(this.buttons.clear) ? 'Clear' : this.buttons.clear;\r\n            this.buttons.clear = clearText;\r\n            if (typeof (this.buttons.clear) === 'string') {\r\n                this.clearButton.textContent = (this.buttons.clear === 'Clear') ?\r\n                    this.localizedTexts('Clear') : this.buttons.clear;\r\n                this.clearButton.setAttribute('title', this.clearButton.textContent);\r\n            }\r\n            else {\r\n                this.clearButton.innerHTML = '';\r\n                this.clearButton.appendChild(this.buttons.clear);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.initializeUpload = function () {\r\n        this.element.setAttribute('tabindex', '-1');\r\n        var inputWrapper = this.createElement('span', { className: INPUT_WRAPPER });\r\n        this.element.parentElement.insertBefore(inputWrapper, this.element);\r\n        this.dropAreaWrapper = this.createElement('div', { className: DROP_WRAPPER });\r\n        this.element.parentElement.insertBefore(this.dropAreaWrapper, this.element);\r\n        inputWrapper.appendChild(this.element);\r\n        this.dropAreaWrapper.appendChild(this.browseButton);\r\n        this.dropAreaWrapper.appendChild(inputWrapper);\r\n        this.uploadWrapper = this.createElement('div', { className: CONTROL_WRAPPER });\r\n        this.dropAreaWrapper.parentElement.insertBefore(this.uploadWrapper, this.dropAreaWrapper);\r\n        this.uploadWrapper.appendChild(this.dropAreaWrapper);\r\n        this.setDropArea();\r\n    };\r\n    Uploader.prototype.renderPreLoadFiles = function () {\r\n        if (this.files.length) {\r\n            if (this.enablePersistence && this.filesData.length) {\r\n                this.createFileList(this.filesData);\r\n                return;\r\n            }\r\n            if (isNullOrUndefined(this.files[0].size)) {\r\n                return;\r\n            }\r\n            this.isPreloadFiles = true;\r\n            var files = [].slice.call(this.files);\r\n            var filesData = [];\r\n            if (!this.multiple) {\r\n                this.clearData();\r\n                files = [files[0]];\r\n            }\r\n            for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\r\n                var data = files_1[_i];\r\n                var fileData = {\r\n                    name: data.name + '.' + data.type.split('.')[data.type.split('.').length - 1],\r\n                    rawFile: '',\r\n                    size: data.size,\r\n                    status: this.localizedTexts('uploadSuccessMessage'),\r\n                    type: data.type,\r\n                    validationMessages: { minSize: '', maxSize: '' },\r\n                    statusCode: '2'\r\n                };\r\n                filesData.push(fileData);\r\n                this.filesData.push(fileData);\r\n            }\r\n            this.createFileList(filesData);\r\n            if (!this.autoUpload && this.listParent && !this.actionButtons && (!this.isForm || this.allowUpload()) && this.showFileList) {\r\n                this.renderActionButtons();\r\n            }\r\n            this.checkActionButtonStatus();\r\n            if (this.sequentialUpload) {\r\n                this.count = this.filesData.length - 1;\r\n            }\r\n            this.isPreloadFiles = false;\r\n        }\r\n    };\r\n    Uploader.prototype.checkActionButtonStatus = function () {\r\n        if (this.actionButtons) {\r\n            var length_1 = this.uploadWrapper.querySelectorAll('.' + VALIDATION_FAILS).length +\r\n                this.uploadWrapper.querySelectorAll('.e-upload-fails:not(.e-upload-progress)').length +\r\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_SUCCESS).length +\r\n                this.uploadWrapper.querySelectorAll('span.' + UPLOAD_INPROGRESS).length;\r\n            if (length_1 > 0 && length_1 === this.uploadWrapper.querySelectorAll('li').length) {\r\n                this.uploadButton.setAttribute('disabled', 'disabled');\r\n            }\r\n            else {\r\n                this.uploadButton.removeAttribute('disabled');\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.setDropArea = function () {\r\n        var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\r\n        if (this.dropArea) {\r\n            this.dropZoneElement = (typeof (this.dropArea) !== 'string') ? this.dropArea :\r\n                select(this.dropArea, document);\r\n            var element = this.element;\r\n            var enableDropText = false;\r\n            while (element.parentNode) {\r\n                element = element.parentNode;\r\n                if (element === this.dropZoneElement) {\r\n                    enableDropText = true;\r\n                    if (!dropTextArea) {\r\n                        this.createDropTextHint();\r\n                    }\r\n                    else {\r\n                        dropTextArea.innerHTML = this.localizedTexts('dropFilesHint');\r\n                    }\r\n                }\r\n            }\r\n            if (!enableDropText && dropTextArea) {\r\n                remove(dropTextArea);\r\n            }\r\n        }\r\n        else if (!isNullOrUndefined(this.uploaderOptions) && this.uploaderOptions.dropArea === undefined) {\r\n            this.createDropTextHint();\r\n            this.dropZoneElement = this.uploadWrapper;\r\n            this.setProperties({ dropArea: this.uploadWrapper }, true);\r\n        }\r\n        this.bindDropEvents();\r\n    };\r\n    Uploader.prototype.updateDropArea = function () {\r\n        if (this.dropArea) {\r\n            this.setDropArea();\r\n        }\r\n        else {\r\n            this.dropZoneElement = null;\r\n            var dropTextArea = this.dropAreaWrapper.querySelector('.e-file-drop');\r\n            if (dropTextArea) {\r\n                remove(dropTextArea);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.createDropTextHint = function () {\r\n        var fileDropArea = this.createElement('span', { className: DROP_AREA });\r\n        fileDropArea.innerHTML = this.localizedTexts('dropFilesHint');\r\n        this.dropAreaWrapper.appendChild(fileDropArea);\r\n    };\r\n    Uploader.prototype.updateHTMLAttrToElement = function () {\r\n        if (!isNullOrUndefined(this.htmlAttributes)) {\r\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\r\n                var pro = _a[_i];\r\n                if (wrapperAttr.indexOf(pro) < 0) {\r\n                    this.element.setAttribute(pro, this.htmlAttributes[pro]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.updateHTMLAttrToWrapper = function () {\r\n        if (!isNullOrUndefined(this.htmlAttributes)) {\r\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\r\n                var pro = _a[_i];\r\n                if (wrapperAttr.indexOf(pro) > -1) {\r\n                    if (pro === 'class') {\r\n                        var updatedClassValues = (this.htmlAttributes[pro].replace(/\\s+/g, ' ')).trim();\r\n                        if (updatedClassValues !== '') {\r\n                            addClass([this.uploadWrapper], updatedClassValues.split(' '));\r\n                        }\r\n                    }\r\n                    else if (pro === 'style') {\r\n                        var uploadStyle = this.uploadWrapper.getAttribute(pro);\r\n                        uploadStyle = !isNullOrUndefined(uploadStyle) ? (uploadStyle + this.htmlAttributes[pro]) :\r\n                            this.htmlAttributes[pro];\r\n                        this.uploadWrapper.setAttribute(pro, uploadStyle);\r\n                    }\r\n                    else {\r\n                        this.uploadWrapper.setAttribute(pro, this.htmlAttributes[pro]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.setMultipleSelection = function () {\r\n        if (this.multiple && !this.element.hasAttribute('multiple')) {\r\n            var newAttr = document.createAttribute('multiple');\r\n            newAttr.value = 'multiple';\r\n            this.element.setAttributeNode(newAttr);\r\n        }\r\n        else if (!this.multiple) {\r\n            this.element.removeAttribute('multiple');\r\n        }\r\n    };\r\n    Uploader.prototype.checkAutoUpload = function (fileData) {\r\n        if (this.autoUpload) {\r\n            if (this.sequentialUpload) {\r\n                /* istanbul ignore next */\r\n                this.sequenceUpload(fileData);\r\n            }\r\n            else {\r\n                this.upload(fileData);\r\n            }\r\n            this.removeActionButtons();\r\n        }\r\n        else if (!this.actionButtons) {\r\n            this.renderActionButtons();\r\n        }\r\n        this.checkActionButtonStatus();\r\n    };\r\n    Uploader.prototype.sequenceUpload = function (fileData) {\r\n        if (this.filesData.length - fileData.length === 0 ||\r\n            this.filesData[(this.filesData.length - fileData.length - 1)].statusCode !== '1') {\r\n            ++this.count;\r\n            var isFileListCreated = this.showFileList ? false : true;\r\n            if (typeof this.filesData[this.count] === 'object') {\r\n                this.isFirstFileOnSelection = false;\r\n                this.upload(this.filesData[this.count], isFileListCreated);\r\n                if (this.filesData[this.count].statusCode === '0') {\r\n                    this.sequenceUpload(fileData);\r\n                }\r\n            }\r\n            else {\r\n                --this.count;\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.setCSSClass = function (oldCSSClass) {\r\n        var updatedCssClassValue = this.cssClass;\r\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\r\n            updatedCssClassValue = (this.cssClass.replace(/\\s+/g, ' ')).trim();\r\n        }\r\n        if (!isNullOrUndefined(this.cssClass) && updatedCssClassValue !== '') {\r\n            addClass([this.uploadWrapper], updatedCssClassValue.split(updatedCssClassValue.indexOf(',') > -1 ? ',' : ' '));\r\n        }\r\n        var updatedOldCssClass = oldCSSClass;\r\n        if (!isNullOrUndefined(oldCSSClass)) {\r\n            updatedOldCssClass = (oldCSSClass.replace(/\\s+/g, ' ')).trim();\r\n        }\r\n        if (!isNullOrUndefined(oldCSSClass) && updatedOldCssClass !== '') {\r\n            removeClass([this.uploadWrapper], updatedOldCssClass.split(' '));\r\n        }\r\n    };\r\n    Uploader.prototype.wireEvents = function () {\r\n        EventHandler.add(this.browseButton, 'click', this.browseButtonClick, this);\r\n        EventHandler.add(this.element, 'change', this.onSelectFiles, this);\r\n        EventHandler.add(document, 'click', this.removeFocus, this);\r\n        this.keyboardModule = new KeyboardEvents(this.uploadWrapper, {\r\n            keyAction: this.keyActionHandler.bind(this),\r\n            keyConfigs: this.keyConfigs,\r\n            eventName: 'keydown'\r\n        });\r\n        if (this.isForm) {\r\n            EventHandler.add(this.formElement, 'reset', this.resetForm, this);\r\n        }\r\n    };\r\n    Uploader.prototype.unWireEvents = function () {\r\n        EventHandler.remove(this.browseButton, 'click', this.browseButtonClick);\r\n        EventHandler.remove(this.element, 'change', this.onSelectFiles);\r\n        EventHandler.remove(document, 'click', this.removeFocus);\r\n        if (this.isForm) {\r\n            EventHandler.remove(this.formElement, 'reset', this.resetForm);\r\n        }\r\n        if (this.keyboardModule) {\r\n            this.keyboardModule.destroy();\r\n        }\r\n    };\r\n    Uploader.prototype.resetForm = function () {\r\n        this.clearAll();\r\n    };\r\n    Uploader.prototype.keyActionHandler = function (e) {\r\n        var targetElement = e.target;\r\n        switch (e.action) {\r\n            case 'enter':\r\n                if (e.target === this.clearButton) {\r\n                    this.clearButtonClick();\r\n                }\r\n                else if (e.target === this.uploadButton) {\r\n                    this.uploadButtonClick();\r\n                }\r\n                else if (e.target === this.browseButton) {\r\n                    this.browseButtonClick();\r\n                }\r\n                else if (targetElement.classList.contains(PAUSE_UPLOAD)) {\r\n                    var metaData = this.getCurrentMetaData(null, e);\r\n                    metaData.file.statusCode = '4';\r\n                    metaData.file.status = this.localizedTexts('pauseUpload');\r\n                    this.abortUpload(metaData, false);\r\n                }\r\n                else if (targetElement.classList.contains(RESUME_UPLOAD)) {\r\n                    this.resumeUpload(this.getCurrentMetaData(null, e), e);\r\n                }\r\n                else if (targetElement.classList.contains(RETRY_ICON)) {\r\n                    var metaData = this.getCurrentMetaData(null, e);\r\n                    if (!isNullOrUndefined(metaData)) {\r\n                        metaData.file.statusCode = '1';\r\n                        metaData.file.status = this.localizedTexts('readyToUploadMessage');\r\n                        this.chunkUpload(metaData.file);\r\n                    }\r\n                    else {\r\n                        var target = e.target.parentElement;\r\n                        var fileData = this.filesData[this.fileList.indexOf(target)];\r\n                        this.retry(fileData);\r\n                    }\r\n                }\r\n                else {\r\n                    this.removeFiles(e);\r\n                    if (!targetElement.classList.contains(ABORT_ICON)) {\r\n                        this.browseButton.focus();\r\n                    }\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                break;\r\n        }\r\n    };\r\n    Uploader.prototype.getCurrentMetaData = function (fileInfo, e) {\r\n        var fileData;\r\n        var targetMetaData;\r\n        if (isNullOrUndefined(fileInfo)) {\r\n            var target = e.target.parentElement;\r\n            fileData = this.filesData[this.fileList.indexOf(target)];\r\n        }\r\n        else {\r\n            fileData = fileInfo;\r\n        }\r\n        for (var i = 0; i < this.uploadMetaData.length; i++) {\r\n            if (this.uploadMetaData[i].file.name === fileData.name) {\r\n                targetMetaData = this.uploadMetaData[i];\r\n            }\r\n        }\r\n        return targetMetaData;\r\n    };\r\n    Uploader.prototype.removeFocus = function () {\r\n        if (this.uploadWrapper && this.listParent && this.listParent.querySelector('.' + ICON_FOCUSED)) {\r\n            document.activeElement.blur();\r\n            this.listParent.querySelector('.' + ICON_FOCUSED).classList.remove(ICON_FOCUSED);\r\n        }\r\n    };\r\n    Uploader.prototype.browseButtonClick = function () {\r\n        this.element.click();\r\n    };\r\n    Uploader.prototype.uploadButtonClick = function () {\r\n        if (this.sequentialUpload) {\r\n            this.sequenceUpload(this.filesData);\r\n        }\r\n        else {\r\n            this.upload(this.filesData);\r\n        }\r\n    };\r\n    Uploader.prototype.clearButtonClick = function () {\r\n        this.clearAll();\r\n        /* istanbul ignore next */\r\n        if (this.sequentialUpload) {\r\n            this.count = -1;\r\n        }\r\n        this.actionCompleteCount = 0;\r\n    };\r\n    Uploader.prototype.bindDropEvents = function () {\r\n        if (this.dropZoneElement) {\r\n            EventHandler.add(this.dropZoneElement, 'drop', this.dropElement, this);\r\n            EventHandler.add(this.dropZoneElement, 'dragover', this.dragHover, this);\r\n            EventHandler.add(this.dropZoneElement, 'dragleave', this.onDragLeave, this);\r\n            EventHandler.add(this.dropZoneElement, 'paste', this.onPasteFile, this);\r\n            EventHandler.add(this.dropZoneElement, 'dragenter', this.onDragEnter, this);\r\n        }\r\n    };\r\n    Uploader.prototype.unBindDropEvents = function () {\r\n        if (this.dropZoneElement) {\r\n            EventHandler.remove(this.dropZoneElement, 'drop', this.dropElement);\r\n            EventHandler.remove(this.dropZoneElement, 'dragover', this.dragHover);\r\n            EventHandler.remove(this.dropZoneElement, 'dragleave', this.onDragLeave);\r\n            EventHandler.remove(this.dropZoneElement, 'dragenter', this.onDragEnter);\r\n        }\r\n    };\r\n    Uploader.prototype.onDragEnter = function (e) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        this.dropZoneElement.classList.add(DRAG_HOVER);\r\n        this.dragCounter = this.dragCounter + 1;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    Uploader.prototype.onDragLeave = function () {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        this.dragCounter = this.dragCounter - 1;\r\n        if (!this.dragCounter) {\r\n            this.dropZoneElement.classList.remove(DRAG_HOVER);\r\n        }\r\n    };\r\n    Uploader.prototype.dragHover = function (e) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        if (this.dropEffect !== 'Default') {\r\n            e.dataTransfer.dropEffect = this.dropEffect.toLowerCase();\r\n        }\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.dropElement = function (e) {\r\n        this.dragCounter = 0;\r\n        this.dropZoneElement.classList.remove(DRAG_HOVER);\r\n        this.onSelectFiles(e);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.onPasteFile = function (event) {\r\n        var item = event.clipboardData.items;\r\n        if (item.length !== 1) {\r\n            return;\r\n        }\r\n        var pasteFile = [].slice.call(item)[0];\r\n        if ((pasteFile.kind === 'file') && pasteFile.type.match('^image/')) {\r\n            this.renderSelectedFiles(event, [pasteFile.getAsFile()], false, true);\r\n        }\r\n    };\r\n    Uploader.prototype.getSelectedFiles = function (index) {\r\n        var data = [];\r\n        var liElement = this.fileList[index];\r\n        var allFiles = this.getFilesData();\r\n        var nameElements = +liElement.getAttribute('data-files-count');\r\n        var startIndex = 0;\r\n        for (var i = 0; i < index; i++) {\r\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\r\n        }\r\n        for (var j = startIndex; j < (startIndex + nameElements); j++) {\r\n            data.push(allFiles[j]);\r\n        }\r\n        return data;\r\n    };\r\n    Uploader.prototype.removeFiles = function (args) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        var selectedElement = args.target.parentElement;\r\n        var index = this.fileList.indexOf(selectedElement);\r\n        var liElement = this.fileList[index];\r\n        var formUpload = this.isFormUpload();\r\n        var fileData = formUpload ? this.getSelectedFiles(index) : this.getFilesInArray(this.filesData[index]);\r\n        if (isNullOrUndefined(fileData)) {\r\n            return;\r\n        }\r\n        if (args.target.classList.contains(ABORT_ICON) && !formUpload) {\r\n            fileData[0].statusCode = '5';\r\n            if (!isNullOrUndefined(liElement)) {\r\n                var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\r\n                createSpinner({ target: spinnerTarget, width: '20px' });\r\n                showSpinner(spinnerTarget);\r\n            }\r\n            if (this.sequentialUpload) {\r\n                /* istanbul ignore next */\r\n                this.uploadSequential();\r\n            }\r\n            if (!(liElement.classList.contains(RESTRICT_RETRY))) {\r\n                this.checkActionComplete(true);\r\n            }\r\n        }\r\n        else if (!closest(args.target, '.' + SPINNER_PANE)) {\r\n            this.remove(fileData, false, false, true, args);\r\n        }\r\n        this.element.value = '';\r\n        this.checkActionButtonStatus();\r\n    };\r\n    Uploader.prototype.removeFilesData = function (file, customTemplate) {\r\n        var index;\r\n        if (customTemplate) {\r\n            if (!this.showFileList) {\r\n                index = this.filesData.indexOf(file);\r\n                this.filesData.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n        var selectedElement = this.getLiElement(file);\r\n        if (isNullOrUndefined(selectedElement)) {\r\n            return;\r\n        }\r\n        detach(selectedElement);\r\n        index = this.fileList.indexOf(selectedElement);\r\n        this.fileList.splice(index, 1);\r\n        this.filesData.splice(index, 1);\r\n        if (this.fileList.length === 0 && !isNullOrUndefined(this.listParent)) {\r\n            detach(this.listParent);\r\n            this.listParent = null;\r\n            this.removeActionButtons();\r\n        }\r\n        if (this.sequentialUpload) {\r\n            /* istanbul ignore next */\r\n            if (index <= this.count) {\r\n                --this.count;\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.removeUploadedFile = function (file, eventArgs, removeDirectly, custom) {\r\n        var _this = this;\r\n        var selectedFiles = file;\r\n        var ajax = new Ajax(this.asyncSettings.removeUrl, 'POST', true, null);\r\n        ajax.emitError = false;\r\n        var formData = new FormData();\r\n        ajax.beforeSend = function (e) {\r\n            eventArgs.currentRequest = ajax.httpRequest;\r\n            if (!removeDirectly) {\r\n                _this.trigger('removing', eventArgs, function (eventArgs) {\r\n                    if (eventArgs.cancel) {\r\n                        e.cancel = true;\r\n                    }\r\n                    else {\r\n                        _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                _this.removingEventCallback(eventArgs, formData, selectedFiles, file);\r\n            }\r\n        };\r\n        ajax.onLoad = function (e) {\r\n            _this.removeCompleted(e, selectedFiles, custom);\r\n            return {};\r\n        };\r\n        /* istanbul ignore next */\r\n        ajax.onError = function (e) {\r\n            _this.removeFailed(e, selectedFiles, custom);\r\n            return {};\r\n        };\r\n        ajax.send(formData);\r\n    };\r\n    Uploader.prototype.removingEventCallback = function (eventArgs, formData, selectedFiles, file) {\r\n        /* istanbul ignore next */\r\n        var name = this.element.getAttribute('name');\r\n        var liElement = this.getLiElement(file);\r\n        if (!isNullOrUndefined(liElement) && (!isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON)) ||\r\n            !isNullOrUndefined(liElement.querySelector('.' + REMOVE_ICON)))) {\r\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON) ?\r\n                liElement.querySelector('.' + DELETE_ICON) :\r\n                liElement.querySelector('.' + REMOVE_ICON);\r\n            createSpinner({ target: spinnerTarget, width: '20px' });\r\n            showSpinner(spinnerTarget);\r\n        }\r\n        if (eventArgs.postRawFile && !isNullOrUndefined(selectedFiles.rawFile) && selectedFiles.rawFile !== '') {\r\n            formData.append(name, selectedFiles.rawFile, selectedFiles.name);\r\n        }\r\n        else {\r\n            formData.append(name, selectedFiles.name);\r\n        }\r\n        this.updateFormData(formData, eventArgs.customFormData);\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.updateFormData = function (formData, customData) {\r\n        if (customData.length > 0 && customData[0]) {\r\n            var _loop_1 = function (i) {\r\n                var data = customData[i];\r\n                // eslint-disable-next-line @typescript-eslint/tslint/config\r\n                var value = Object.keys(data).map(function (e) {\r\n                    return data[e];\r\n                });\r\n                formData.append(Object.keys(data)[0], value);\r\n            };\r\n            for (var i = 0; i < customData.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.updateCustomheader = function (request, currentRequest) {\r\n        if (currentRequest.length > 0 && currentRequest[0]) {\r\n            var _loop_2 = function (i) {\r\n                var data = currentRequest[i];\r\n                // eslint-disable-next-line @typescript-eslint/tslint/config\r\n                var value = Object.keys(data).map(function (e) {\r\n                    return data[e];\r\n                });\r\n                request.setRequestHeader(Object.keys(data)[0], value);\r\n            };\r\n            for (var i = 0; i < currentRequest.length; i++) {\r\n                _loop_2(i);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.removeCompleted = function (e, files, customTemplate) {\r\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var status = e.target;\r\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\r\n            var args = {\r\n                e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedSuccessMessage'), '2')\r\n            };\r\n            this.trigger('success', args);\r\n            this.removeFilesData(files, customTemplate);\r\n            var index = this.uploadedFilesData.indexOf(files);\r\n            this.uploadedFilesData.splice(index, 1);\r\n            this.trigger('change', { files: this.uploadedFilesData });\r\n        }\r\n        else {\r\n            this.removeFailed(e, files, customTemplate);\r\n        }\r\n    };\r\n    Uploader.prototype.removeFailed = function (e, files, customTemplate) {\r\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var args = {\r\n            e: e, response: response, operation: 'remove', file: this.updateStatus(files, this.localizedTexts('removedFailedMessage'), '0')\r\n        };\r\n        if (!customTemplate) {\r\n            var index = this.filesData.indexOf(files);\r\n            var rootElement = this.fileList[index];\r\n            if (rootElement) {\r\n                rootElement.classList.remove(UPLOAD_SUCCESS);\r\n                rootElement.classList.add(UPLOAD_FAILED);\r\n                var statusElement = rootElement.querySelector('.' + STATUS);\r\n                if (statusElement) {\r\n                    statusElement.classList.remove(UPLOAD_SUCCESS);\r\n                    statusElement.classList.add(UPLOAD_FAILED);\r\n                }\r\n            }\r\n            this.checkActionButtonStatus();\r\n        }\r\n        this.trigger('failure', args);\r\n        var liElement = this.getLiElement(files);\r\n        /* istanbul ignore next */\r\n        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\r\n            var spinnerTarget = liElement.querySelector('.' + DELETE_ICON);\r\n            hideSpinner(spinnerTarget);\r\n            detach(liElement.querySelector('.e-spinner-pane'));\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.getFilesFromFolder = function (event) {\r\n        this.filesEntries = [];\r\n        var items = this.multiple ?\r\n            event.dataTransfer.items : [event.dataTransfer.items[0]];\r\n        var validDirectoryUpload = this.checkDirectoryUpload(items);\r\n        if (!validDirectoryUpload) {\r\n            return;\r\n        }\r\n        var _loop_3 = function (i) {\r\n            var item = items[i].webkitGetAsEntry();\r\n            if (item.isFile) {\r\n                var files_2 = [];\r\n                (item).file(function (fileObj) {\r\n                    var path = item.fullPath;\r\n                    files_2.push({ 'path': path, 'file': fileObj });\r\n                });\r\n                this_1.renderSelectedFiles(event, files_2, true);\r\n            }\r\n            else if (item.isDirectory) {\r\n                this_1.traverseFileTree(item, event);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < items.length; i++) {\r\n            _loop_3(i);\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.checkDirectoryUpload = function (items) {\r\n        for (var i = 0; items && i < items.length; i++) {\r\n            var item = items[i].webkitGetAsEntry();\r\n            if (item.isDirectory) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.traverseFileTree = function (item, event) {\r\n        /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\r\n        if (item.isFile) {\r\n            this.filesEntries.push(item);\r\n        }\r\n        else if (item.isDirectory) {\r\n            var directoryReader = item.createReader();\r\n            this.readFileFromDirectory(directoryReader, event);\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.readFileFromDirectory = function (directoryReader, event) {\r\n        var _this = this;\r\n        directoryReader.readEntries(function (entries) {\r\n            for (var i = 0; i < entries.length; i++) {\r\n                _this.traverseFileTree(entries[i], event);\r\n            }\r\n            _this.pushFilesEntries(event);\r\n            if (entries.length) {\r\n                _this.readFileFromDirectory(directoryReader);\r\n            }\r\n        });\r\n    };\r\n    Uploader.prototype.pushFilesEntries = function (event) {\r\n        var _this = this;\r\n        var files = [];\r\n        var _loop_4 = function (i) {\r\n            this_2.filesEntries[i].file(function (fileObj) {\r\n                if (_this.filesEntries.length) {\r\n                    var path = _this.filesEntries[i].fullPath;\r\n                    files.push({ 'path': path, 'file': fileObj });\r\n                    if (i === _this.filesEntries.length - 1) {\r\n                        _this.filesEntries = [];\r\n                        _this.renderSelectedFiles(event, files, true);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.filesEntries.length; i++) {\r\n            _loop_4(i);\r\n        }\r\n    };\r\n    Uploader.prototype.onSelectFiles = function (args) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n        var targetFiles;\r\n        /* istanbul ignore next */\r\n        if (args.type === 'drop') {\r\n            if (this.directoryUpload) {\r\n                this.getFilesFromFolder(args);\r\n            }\r\n            else {\r\n                var files = this.sortFilesList = args.dataTransfer.files;\r\n                if (this.browserName !== 'msie' && this.browserName !== 'edge' && this.browserName !== 'safari') {\r\n                    this.element.files = files;\r\n                }\r\n                if (files.length > 0) {\r\n                    targetFiles = this.multiple ? this.sortFileList(files) : [files[0]];\r\n                    this.renderSelectedFiles(args, targetFiles);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            targetFiles = [].slice.call(args.target.files);\r\n            this.renderSelectedFiles(args, targetFiles);\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.getBase64 = function (file) {\r\n        return new Promise(function (resolve, reject) {\r\n            var fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = function () { return resolve(fileReader.result); };\r\n            fileReader.onerror = function (error) { return reject(error); };\r\n        });\r\n    };\r\n    /* istanbul ignore next */\r\n    /* tslint:ignore */\r\n    Uploader.prototype.renderSelectedFiles = function (args, targetFiles, directory, paste) {\r\n        var _this = this;\r\n        this.base64String = [];\r\n        var eventArgs = {\r\n            event: args,\r\n            cancel: false,\r\n            filesData: [],\r\n            isModified: false,\r\n            modifiedFilesData: [],\r\n            progressInterval: '',\r\n            isCanceled: false,\r\n            currentRequest: null,\r\n            customFormData: null\r\n        };\r\n        /* istanbul ignore next */\r\n        if (targetFiles.length < 1) {\r\n            eventArgs.isCanceled = true;\r\n            this.trigger('selected', eventArgs);\r\n            return;\r\n        }\r\n        this.flag = true;\r\n        var fileData = [];\r\n        if (!this.multiple) {\r\n            this.clearData(true);\r\n            targetFiles = [targetFiles[0]];\r\n        }\r\n        for (var i = 0; i < targetFiles.length; i++) {\r\n            var file = directory ? targetFiles[i].file : targetFiles[i];\r\n            this.updateInitialFileDetails(args, targetFiles, file, i, fileData, directory, paste);\r\n        }\r\n        eventArgs.filesData = fileData;\r\n        if (this.allowedExtensions.indexOf('*') > -1) {\r\n            this.allTypes = true;\r\n        }\r\n        if (!this.allTypes) {\r\n            fileData = this.checkExtension(fileData);\r\n        }\r\n        this.trigger('selected', eventArgs, function (eventArgs) {\r\n            _this._internalRenderSelect(eventArgs, fileData);\r\n        });\r\n    };\r\n    Uploader.prototype.updateInitialFileDetails = function (args, \r\n    // eslint-disable-next-line @typescript-eslint/indent\r\n    targetFiles, file, i, fileData, directory, paste) {\r\n        var fileName = directory ? targetFiles[i].path.substring(1, targetFiles[i].path.length) : paste ?\r\n            getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name) :\r\n            this.directoryUpload ? targetFiles[i].webkitRelativePath : file.name;\r\n        var fileDetails = {\r\n            name: fileName,\r\n            rawFile: file,\r\n            size: file.size,\r\n            status: this.localizedTexts('readyToUploadMessage'),\r\n            type: this.getFileType(file.name),\r\n            validationMessages: this.validatedFileSize(file.size),\r\n            statusCode: '1',\r\n            id: getUniqueID(file.name.substring(0, file.name.lastIndexOf('.'))) + '.' + this.getFileType(file.name)\r\n        };\r\n        /* istanbul ignore next */\r\n        if (paste) {\r\n            fileDetails.fileSource = 'paste';\r\n        }\r\n        fileDetails.status = fileDetails.validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\r\n            fileDetails.validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : fileDetails.status;\r\n        if (fileDetails.validationMessages.minSize !== '' || fileDetails.validationMessages.maxSize !== '') {\r\n            fileDetails.statusCode = '0';\r\n        }\r\n        fileData.push(fileDetails);\r\n    };\r\n    Uploader.prototype._internalRenderSelect = function (eventArgs, fileData) {\r\n        if (!eventArgs.cancel) {\r\n            /* istanbul ignore next */\r\n            this.selectedFiles = this.selectedFiles.concat(fileData);\r\n            this.btnTabIndex = this.disableKeyboardNavigation ? '-1' : '0';\r\n            if (this.showFileList) {\r\n                if (eventArgs.isModified && eventArgs.modifiedFilesData.length > 0) {\r\n                    for (var j = 0; j < eventArgs.modifiedFilesData.length; j++) {\r\n                        for (var k = 0; k < fileData.length; k++) {\r\n                            if (eventArgs.modifiedFilesData[j].id === fileData[k].id) {\r\n                                eventArgs.modifiedFilesData[j].rawFile = fileData[k].rawFile;\r\n                            }\r\n                        }\r\n                    }\r\n                    var dataFiles = this.allTypes ? eventArgs.modifiedFilesData :\r\n                        this.checkExtension(eventArgs.modifiedFilesData);\r\n                    this.updateSortedFileList(dataFiles);\r\n                    this.filesData = dataFiles;\r\n                    if (!this.isForm || this.allowUpload()) {\r\n                        this.checkAutoUpload(dataFiles);\r\n                    }\r\n                }\r\n                else {\r\n                    this.createFileList(fileData, true);\r\n                    this.filesData = this.filesData.concat(fileData);\r\n                    if (!this.isForm || this.allowUpload()) {\r\n                        this.checkAutoUpload(fileData);\r\n                    }\r\n                }\r\n                if (!isNullOrUndefined(eventArgs.progressInterval) && eventArgs.progressInterval !== '') {\r\n                    this.progressInterval = eventArgs.progressInterval;\r\n                }\r\n            }\r\n            else {\r\n                this.filesData = this.filesData.concat(fileData);\r\n                if (this.autoUpload) {\r\n                    this.upload(this.filesData, true);\r\n                }\r\n            }\r\n            this.raiseActionComplete();\r\n            this.isFirstFileOnSelection = true;\r\n        }\r\n    };\r\n    Uploader.prototype.allowUpload = function () {\r\n        var allowFormUpload = false;\r\n        if (this.isForm && (!isNullOrUndefined(this.asyncSettings.saveUrl) && this.asyncSettings.saveUrl !== '')) {\r\n            allowFormUpload = true;\r\n        }\r\n        return allowFormUpload;\r\n    };\r\n    Uploader.prototype.isFormUpload = function () {\r\n        var isFormUpload = false;\r\n        if (this.isForm && ((isNullOrUndefined(this.asyncSettings.saveUrl) || this.asyncSettings.saveUrl === '')\r\n            && (isNullOrUndefined(this.asyncSettings.removeUrl) || this.asyncSettings.removeUrl === ''))) {\r\n            isFormUpload = true;\r\n        }\r\n        return isFormUpload;\r\n    };\r\n    Uploader.prototype.clearData = function (singleUpload) {\r\n        if (!isNullOrUndefined(this.listParent)) {\r\n            detach(this.listParent);\r\n            this.listParent = null;\r\n        }\r\n        if (this.browserName !== 'msie' && !singleUpload) {\r\n            this.element.value = '';\r\n        }\r\n        this.fileList = [];\r\n        this.filesData = [];\r\n        this.removeActionButtons();\r\n    };\r\n    Uploader.prototype.updateSortedFileList = function (filesData) {\r\n        var previousListClone = this.createElement('div', { id: 'clonewrapper' });\r\n        var added = -1;\r\n        var removedList;\r\n        if (this.listParent) {\r\n            for (var i = 0; i < this.listParent.querySelectorAll('li').length; i++) {\r\n                var liElement = this.listParent.querySelectorAll('li')[i];\r\n                previousListClone.appendChild(liElement.cloneNode(true));\r\n            }\r\n            removedList = this.listParent.querySelectorAll('li');\r\n            for (var _i = 0, removedList_1 = removedList; _i < removedList_1.length; _i++) {\r\n                var item = removedList_1[_i];\r\n                detach(item);\r\n            }\r\n            this.removeActionButtons();\r\n            var oldList = [].slice.call(previousListClone.childNodes);\r\n            detach(this.listParent);\r\n            this.listParent = null;\r\n            this.fileList = [];\r\n            this.createParentUL();\r\n            for (var index = 0; index < filesData.length; index++) {\r\n                for (var j = 0; j < this.filesData.length; j++) {\r\n                    if (this.filesData[j].name === filesData[index].name) {\r\n                        this.listParent.appendChild(oldList[j]);\r\n                        EventHandler.add(oldList[j].querySelector('.e-icons'), 'click', this.removeFiles, this);\r\n                        this.fileList.push(oldList[j]);\r\n                        added = index;\r\n                    }\r\n                }\r\n                if (added !== index) {\r\n                    this.createFileList([filesData[index]]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.createFileList(filesData);\r\n        }\r\n    };\r\n    Uploader.prototype.isBlank = function (str) {\r\n        return (!str || /^\\s*$/.test(str));\r\n    };\r\n    Uploader.prototype.checkExtension = function (files) {\r\n        var dropFiles = files;\r\n        if (!this.isBlank(this.allowedExtensions)) {\r\n            var allowedExtensions = [];\r\n            var extensions = this.allowedExtensions.split(',');\r\n            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\r\n                var extension = extensions_1[_i];\r\n                allowedExtensions.push(extension.trim().toLocaleLowerCase());\r\n            }\r\n            for (var i = 0; i < files.length; i++) {\r\n                if (allowedExtensions.indexOf(('.' + files[i].type).toLocaleLowerCase()) === -1) {\r\n                    files[i].status = this.localizedTexts('invalidFileType');\r\n                    files[i].statusCode = '0';\r\n                }\r\n            }\r\n        }\r\n        return dropFiles;\r\n    };\r\n    Uploader.prototype.validatedFileSize = function (fileSize) {\r\n        var minSizeError = '';\r\n        var maxSizeError = '';\r\n        if (fileSize < this.minFileSize) {\r\n            minSizeError = this.localizedTexts('invalidMinFileSize');\r\n        }\r\n        else if (fileSize > this.maxFileSize) {\r\n            maxSizeError = this.localizedTexts('invalidMaxFileSize');\r\n        }\r\n        else {\r\n            minSizeError = '';\r\n            maxSizeError = '';\r\n        }\r\n        var errorMessage = { minSize: minSizeError, maxSize: maxSizeError };\r\n        return errorMessage;\r\n    };\r\n    Uploader.prototype.isPreLoadFile = function (fileData) {\r\n        var isPreload = false;\r\n        for (var i = 0; i < this.files.length; i++) {\r\n            if (this.files[i].name === fileData.name.slice(0, fileData.name.lastIndexOf('.')) && this.files[i].type === fileData.type) {\r\n                isPreload = true;\r\n            }\r\n        }\r\n        return isPreload;\r\n    };\r\n    Uploader.prototype.createCustomfileList = function (fileData) {\r\n        this.createParentUL();\r\n        for (var _i = 0, fileData_1 = fileData; _i < fileData_1.length; _i++) {\r\n            var listItem = fileData_1[_i];\r\n            var listElement = this.createElement('li', { className: FILE, attrs: { 'data-file-name': listItem.name } });\r\n            this.uploadTemplateFn = this.templateComplier(this.template);\r\n            var liTempCompiler = this.uploadTemplateFn(listItem, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, listElement);\r\n            if (liTempCompiler) {\r\n                var fromElements = [].slice.call(liTempCompiler);\r\n                append(fromElements, listElement);\r\n            }\r\n            var index = fileData.indexOf(listItem);\r\n            var eventArgs = {\r\n                element: listElement,\r\n                fileInfo: listItem,\r\n                index: index,\r\n                isPreload: this.isPreLoadFile(listItem)\r\n            };\r\n            var eventsArgs = {\r\n                element: listElement,\r\n                fileInfo: listItem,\r\n                index: index,\r\n                isPreload: this.isPreLoadFile(listItem)\r\n            };\r\n            this.trigger('rendering', eventArgs);\r\n            this.trigger('fileListRendering', eventsArgs);\r\n            this.listParent.appendChild(listElement);\r\n            this.fileList.push(listElement);\r\n        }\r\n        this.renderReactTemplates();\r\n    };\r\n    Uploader.prototype.createParentUL = function () {\r\n        if (isNullOrUndefined(this.listParent)) {\r\n            this.listParent = this.createElement('ul', { className: LIST_PARENT });\r\n            this.uploadWrapper.appendChild(this.listParent);\r\n        }\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Uploader.prototype.formFileList = function (fileData, files) {\r\n        var fileList = this.createElement('li', { className: FILE });\r\n        fileList.setAttribute('data-files-count', fileData.length + '');\r\n        var fileContainer = this.createElement('span', { className: TEXT_CONTAINER });\r\n        var statusMessage;\r\n        for (var _i = 0, fileData_2 = fileData; _i < fileData_2.length; _i++) {\r\n            var listItem = fileData_2[_i];\r\n            var fileNameEle = this.createElement('span', { className: FILE_NAME });\r\n            fileNameEle.innerHTML = this.getFileNameOnly(listItem.name);\r\n            var fileTypeEle = this.createElement('span', { className: FILE_TYPE });\r\n            var fileType = this.getFileType(listItem.name);\r\n            fileTypeEle.innerHTML = '.' + fileType;\r\n            if (!fileType) {\r\n                fileTypeEle.classList.add('e-hidden');\r\n            }\r\n            if (!this.enableRtl) {\r\n                fileContainer.appendChild(fileNameEle);\r\n                fileContainer.appendChild(fileTypeEle);\r\n            }\r\n            else {\r\n                var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\r\n                rtlContainer.appendChild(fileTypeEle);\r\n                rtlContainer.appendChild(fileNameEle);\r\n                fileContainer.appendChild(rtlContainer);\r\n            }\r\n            this.truncateName(fileNameEle);\r\n            statusMessage = this.formValidateFileInfo(listItem, fileList);\r\n        }\r\n        fileList.appendChild(fileContainer);\r\n        this.setListToFileInfo(fileData, fileList);\r\n        var index = this.listParent.querySelectorAll('li').length;\r\n        var infoEle = this.createElement('span');\r\n        if (fileList.classList.contains(INVALID_FILE)) {\r\n            infoEle.classList.add(STATUS);\r\n            infoEle.classList.add(INVALID_FILE);\r\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\r\n        }\r\n        else {\r\n            infoEle.classList.add(fileData.length > 1 ? INFORMATION : FILE_SIZE);\r\n            infoEle.innerText = fileData.length > 1 ? this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\r\n                + this.localizedTexts('size') + ': ' +\r\n                this.bytesToSize(this.getFileSize(fileData)) : this.bytesToSize(fileData[0].size);\r\n            this.createFormInput(fileData);\r\n        }\r\n        fileContainer.appendChild(infoEle);\r\n        if (isNullOrUndefined(fileList.querySelector('.e-icons'))) {\r\n            var iconElement = this.createElement('span', { className: 'e-icons', attrs: { 'tabindex': this.btnTabIndex } });\r\n            /* istanbul ignore next */\r\n            if (this.browserName === 'msie') {\r\n                iconElement.classList.add('e-msie');\r\n            }\r\n            iconElement.setAttribute('title', this.localizedTexts('remove'));\r\n            fileList.appendChild(fileContainer);\r\n            fileList.appendChild(iconElement);\r\n            EventHandler.add(iconElement, 'click', this.removeFiles, this);\r\n            iconElement.classList.add(REMOVE_ICON);\r\n        }\r\n        var eventArgs = {\r\n            element: fileList,\r\n            fileInfo: this.mergeFileInfo(fileData, fileList),\r\n            index: index,\r\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\r\n        };\r\n        var eventsArgs = {\r\n            element: fileList,\r\n            fileInfo: this.mergeFileInfo(fileData, fileList),\r\n            index: index,\r\n            isPreload: this.isPreLoadFile(this.mergeFileInfo(fileData, fileList))\r\n        };\r\n        this.trigger('rendering', eventArgs);\r\n        this.trigger('fileListRendering', eventsArgs);\r\n        this.listParent.appendChild(fileList);\r\n        this.fileList.push(fileList);\r\n    };\r\n    Uploader.prototype.formValidateFileInfo = function (listItem, fileList) {\r\n        var statusMessage = listItem.status;\r\n        var validationMessages = this.validatedFileSize(listItem.size);\r\n        if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\r\n            this.addInvalidClass(fileList);\r\n            statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\r\n                validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\r\n        }\r\n        var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\r\n        if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\r\n            this.addInvalidClass(fileList);\r\n            statusMessage = typeValidationMessage;\r\n        }\r\n        return statusMessage;\r\n    };\r\n    Uploader.prototype.addInvalidClass = function (fileList) {\r\n        fileList.classList.add(INVALID_FILE);\r\n    };\r\n    Uploader.prototype.createFormInput = function (fileData) {\r\n        var inputElement = this.element.cloneNode(true);\r\n        inputElement.classList.add(HIDDEN_INPUT);\r\n        for (var _i = 0, fileData_3 = fileData; _i < fileData_3.length; _i++) {\r\n            var listItem = fileData_3[_i];\r\n            listItem.input = inputElement;\r\n        }\r\n        inputElement.setAttribute('name', this.uploaderName);\r\n        this.uploadWrapper.querySelector('.' + INPUT_WRAPPER).appendChild(inputElement);\r\n        if (this.browserName !== 'msie' && this.browserName !== 'edge') {\r\n            this.element.value = '';\r\n        }\r\n    };\r\n    Uploader.prototype.getFileSize = function (fileData) {\r\n        var fileSize = 0;\r\n        for (var _i = 0, fileData_4 = fileData; _i < fileData_4.length; _i++) {\r\n            var file = fileData_4[_i];\r\n            fileSize += file.size;\r\n        }\r\n        return fileSize;\r\n    };\r\n    Uploader.prototype.mergeFileInfo = function (fileData, fileList) {\r\n        var result = {\r\n            name: '',\r\n            rawFile: '',\r\n            size: 0,\r\n            status: '',\r\n            type: '',\r\n            validationMessages: { minSize: '', maxSize: '' },\r\n            statusCode: '1',\r\n            list: fileList\r\n        };\r\n        var fileNames = [];\r\n        var type = '';\r\n        for (var _i = 0, fileData_5 = fileData; _i < fileData_5.length; _i++) {\r\n            var listItem = fileData_5[_i];\r\n            fileNames.push(listItem.name);\r\n            type = listItem.type;\r\n        }\r\n        result.name = fileNames.join(', ');\r\n        result.size = this.getFileSize(fileData);\r\n        result.type = type;\r\n        result.status = this.statusForFormUpload(fileData, fileList);\r\n        return result;\r\n    };\r\n    Uploader.prototype.statusForFormUpload = function (fileData, fileList) {\r\n        var isValid = true;\r\n        var statusMessage;\r\n        for (var _i = 0, fileData_6 = fileData; _i < fileData_6.length; _i++) {\r\n            var listItem = fileData_6[_i];\r\n            statusMessage = listItem.status;\r\n            var validationMessages = this.validatedFileSize(listItem.size);\r\n            if (validationMessages.minSize !== '' || validationMessages.maxSize !== '') {\r\n                isValid = false;\r\n                statusMessage = validationMessages.minSize !== '' ? this.localizedTexts('invalidMinFileSize') :\r\n                    validationMessages.maxSize !== '' ? this.localizedTexts('invalidMaxFileSize') : statusMessage;\r\n            }\r\n            var typeValidationMessage = this.checkExtension(this.getFilesInArray(listItem))[0].status;\r\n            if (typeValidationMessage === this.localizedTexts('invalidFileType')) {\r\n                isValid = false;\r\n                statusMessage = typeValidationMessage;\r\n            }\r\n        }\r\n        if (!isValid) {\r\n            fileList.classList.add(INVALID_FILE);\r\n            statusMessage = fileData.length > 1 ? this.localizedTexts('invalidFileSelection') : statusMessage;\r\n        }\r\n        else {\r\n            statusMessage = this.localizedTexts('totalFiles') + ': ' + fileData.length + ' , '\r\n                + this.localizedTexts('size') + ': ' +\r\n                this.bytesToSize(this.getFileSize(fileData));\r\n        }\r\n        return statusMessage;\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Uploader.prototype.formCustomFileList = function (fileData, files) {\r\n        this.createParentUL();\r\n        var fileList = this.createElement('li', { className: FILE });\r\n        fileList.setAttribute('data-files-count', fileData.length + '');\r\n        this.setListToFileInfo(fileData, fileList);\r\n        var result = this.mergeFileInfo(fileData, fileList);\r\n        fileList.setAttribute('data-file-name', result.name);\r\n        this.uploadTemplateFn = this.templateComplier(this.template);\r\n        var liTempCompiler = this.uploadTemplateFn(result, this, 'template', this.element.id + 'Template', this.isStringTemplate, null, fileList);\r\n        if (liTempCompiler) {\r\n            var fromElements = [].slice.call(liTempCompiler);\r\n            append(fromElements, fileList);\r\n        }\r\n        var index = this.listParent.querySelectorAll('li').length;\r\n        if (!fileList.classList.contains(INVALID_FILE)) {\r\n            this.createFormInput(fileData);\r\n        }\r\n        var eventArgs = {\r\n            element: fileList,\r\n            fileInfo: result,\r\n            index: index,\r\n            isPreload: this.isPreLoadFile(result)\r\n        };\r\n        var eventsArgs = {\r\n            element: fileList,\r\n            fileInfo: result,\r\n            index: index,\r\n            isPreload: this.isPreLoadFile(result)\r\n        };\r\n        this.trigger('rendering', eventArgs);\r\n        this.trigger('fileListRendering', eventsArgs);\r\n        this.listParent.appendChild(fileList);\r\n        this.fileList.push(fileList);\r\n        this.renderReactTemplates();\r\n    };\r\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\r\n    /**\r\n     * Create the file list for specified files data.\r\n     *\r\n     * @param { FileInfo[] } fileData - Specifies the files data for file list creation.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.createFileList = function (fileData, isSelectedFile) {\r\n        /* eslint-enable valid-jsdoc, jsdoc/require-param */\r\n        this.createParentUL();\r\n        if (this.template !== '' && !isNullOrUndefined(this.template)) {\r\n            if (this.isFormUpload()) {\r\n                this.uploadWrapper.classList.add(FORM_UPLOAD);\r\n                this.formCustomFileList(fileData, this.element.files);\r\n            }\r\n            else {\r\n                this.createCustomfileList(fileData);\r\n            }\r\n        }\r\n        else if (this.isFormUpload()) {\r\n            this.uploadWrapper.classList.add(FORM_UPLOAD);\r\n            this.formFileList(fileData, this.element.files);\r\n        }\r\n        else {\r\n            for (var _i = 0, fileData_7 = fileData; _i < fileData_7.length; _i++) {\r\n                var listItem = fileData_7[_i];\r\n                var liElement = this.createElement('li', {\r\n                    className: FILE,\r\n                    attrs: { 'data-file-name': listItem.name, 'data-files-count': '1' }\r\n                });\r\n                var textContainer = this.createElement('span', { className: TEXT_CONTAINER });\r\n                var textElement = this.createElement('span', { className: FILE_NAME, attrs: { 'title': listItem.name } });\r\n                textElement.innerHTML = this.getFileNameOnly(listItem.name);\r\n                var fileExtension = this.createElement('span', { className: FILE_TYPE });\r\n                var fileType = this.getFileType(listItem.name);\r\n                fileExtension.innerHTML = '.' + fileType;\r\n                if (!fileType) {\r\n                    fileExtension.classList.add('e-hidden');\r\n                }\r\n                if (!this.enableRtl) {\r\n                    textContainer.appendChild(textElement);\r\n                    textContainer.appendChild(fileExtension);\r\n                }\r\n                else {\r\n                    var rtlContainer = this.createElement('span', { className: RTL_CONTAINER });\r\n                    rtlContainer.appendChild(fileExtension);\r\n                    rtlContainer.appendChild(textElement);\r\n                    textContainer.appendChild(rtlContainer);\r\n                }\r\n                var fileSize = this.createElement('span', { className: FILE_SIZE });\r\n                fileSize.innerHTML = this.bytesToSize(listItem.size);\r\n                textContainer.appendChild(fileSize);\r\n                var statusElement = this.createElement('span', { className: STATUS });\r\n                textContainer.appendChild(statusElement);\r\n                statusElement.innerHTML = listItem.status;\r\n                liElement.appendChild(textContainer);\r\n                var iconElement = this.createElement('span', { className: ' e-icons',\r\n                    attrs: { 'tabindex': this.btnTabIndex } });\r\n                /* istanbul ignore next */\r\n                if (this.browserName === 'msie') {\r\n                    iconElement.classList.add('e-msie');\r\n                }\r\n                iconElement.setAttribute('title', this.localizedTexts('remove'));\r\n                liElement.appendChild(iconElement);\r\n                EventHandler.add(iconElement, 'click', this.removeFiles, this);\r\n                if (listItem.statusCode === '2') {\r\n                    statusElement.classList.add(UPLOAD_SUCCESS);\r\n                    iconElement.classList.add(DELETE_ICON);\r\n                    iconElement.setAttribute('title', this.localizedTexts('delete'));\r\n                }\r\n                else if (listItem.statusCode !== '1') {\r\n                    statusElement.classList.remove(UPLOAD_SUCCESS);\r\n                    statusElement.classList.add(VALIDATION_FAILS);\r\n                }\r\n                if (this.autoUpload && listItem.statusCode === '1' && this.asyncSettings.saveUrl !== '') {\r\n                    statusElement.innerHTML = '';\r\n                }\r\n                if (!iconElement.classList.contains(DELETE_ICON)) {\r\n                    iconElement.classList.add(REMOVE_ICON);\r\n                }\r\n                var index = fileData.indexOf(listItem);\r\n                var eventArgs = {\r\n                    element: liElement,\r\n                    fileInfo: listItem,\r\n                    index: index,\r\n                    isPreload: this.isPreLoadFile(listItem)\r\n                };\r\n                var eventsArgs = {\r\n                    element: liElement,\r\n                    fileInfo: listItem,\r\n                    index: index,\r\n                    isPreload: this.isPreLoadFile(listItem)\r\n                };\r\n                this.trigger('rendering', eventArgs);\r\n                this.trigger('fileListRendering', eventsArgs);\r\n                this.listParent.appendChild(liElement);\r\n                this.fileList.push(liElement);\r\n                this.truncateName(textElement);\r\n                var preventActionComplete = this.flag;\r\n                if (this.isPreLoadFile(listItem)) {\r\n                    this.flag = false;\r\n                    this.checkActionComplete(true);\r\n                    this.flag = preventActionComplete;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.getSlicedName = function (nameElement) {\r\n        var text = nameElement.textContent;\r\n        nameElement.dataset.tail = text.slice(text.length - 10);\r\n    };\r\n    Uploader.prototype.setListToFileInfo = function (fileData, fileList) {\r\n        for (var _i = 0, fileData_8 = fileData; _i < fileData_8.length; _i++) {\r\n            var listItem = fileData_8[_i];\r\n            listItem.list = fileList;\r\n        }\r\n    };\r\n    Uploader.prototype.truncateName = function (name) {\r\n        var nameElement = name;\r\n        if (this.browserName !== 'edge' && nameElement.offsetWidth < nameElement.scrollWidth) {\r\n            this.getSlicedName(nameElement);\r\n            /* istanbul ignore next */\r\n        }\r\n        else if (nameElement.offsetWidth + 1 < nameElement.scrollWidth) {\r\n            this.getSlicedName(nameElement);\r\n        }\r\n    };\r\n    Uploader.prototype.getFileType = function (name) {\r\n        var extension;\r\n        var index = name.lastIndexOf('.');\r\n        if (index >= 0) {\r\n            extension = name.substring(index + 1);\r\n        }\r\n        return extension ? extension : '';\r\n    };\r\n    Uploader.prototype.getFileNameOnly = function (name) {\r\n        var type = this.getFileType(name);\r\n        var names = name.split('.' + type);\r\n        return type = names[0];\r\n    };\r\n    Uploader.prototype.setInitialAttributes = function () {\r\n        if (this.initialAttr.accept) {\r\n            this.element.setAttribute('accept', this.initialAttr.accept);\r\n        }\r\n        if (this.initialAttr.disabled) {\r\n            this.element.setAttribute('disabled', 'disabled');\r\n        }\r\n        if (this.initialAttr.multiple) {\r\n            var newAttr = document.createAttribute('multiple');\r\n            this.element.setAttributeNode(newAttr);\r\n        }\r\n    };\r\n    Uploader.prototype.filterfileList = function (files) {\r\n        var filterFiles = [];\r\n        var li;\r\n        for (var i = 0; i < files.length; i++) {\r\n            li = this.getLiElement(files[i]);\r\n            if (!li.classList.contains(UPLOAD_SUCCESS)) {\r\n                filterFiles.push(files[i]);\r\n            }\r\n        }\r\n        return filterFiles;\r\n    };\r\n    Uploader.prototype.updateStatus = function (files, status, statusCode, updateLiStatus) {\r\n        if (updateLiStatus === void 0) { updateLiStatus = true; }\r\n        if (!(status === '' || isNullOrUndefined(status)) && !(statusCode === '' || isNullOrUndefined(statusCode))) {\r\n            files.status = status;\r\n            files.statusCode = statusCode;\r\n        }\r\n        if (updateLiStatus) {\r\n            var li = this.getLiElement(files);\r\n            if (!isNullOrUndefined(li)) {\r\n                if (!isNullOrUndefined(li.querySelector('.' + STATUS)) && !((status === '' || isNullOrUndefined(status)))) {\r\n                    li.querySelector('.' + STATUS).textContent = status;\r\n                }\r\n            }\r\n        }\r\n        return files;\r\n    };\r\n    Uploader.prototype.getLiElement = function (files) {\r\n        var index;\r\n        for (var i = 0; i < this.filesData.length; i++) {\r\n            if (!isNullOrUndefined(files) && ((!isNullOrUndefined(this.filesData[i].id) &&\r\n                !isNullOrUndefined(files.id)) ? (this.filesData[i].name === files.name &&\r\n                this.filesData[i].id === files.id) : this.filesData[i].name === files.name)) {\r\n                index = i;\r\n            }\r\n        }\r\n        return this.fileList[index];\r\n    };\r\n    Uploader.prototype.createProgressBar = function (liElement) {\r\n        var progressbarWrapper = this.createElement('span', { className: PROGRESS_WRAPPER });\r\n        var progressBar = this.createElement('progressbar', { className: PROGRESSBAR, attrs: { value: '0', max: '100' } });\r\n        var progressbarInnerWrapper = this.createElement('span', { className: PROGRESS_INNER_WRAPPER });\r\n        progressBar.setAttribute('style', 'width: 0%');\r\n        var progressbarText = this.createElement('span', { className: PROGRESSBAR_TEXT });\r\n        progressbarText.textContent = '0%';\r\n        progressbarInnerWrapper.appendChild(progressBar);\r\n        progressbarWrapper.appendChild(progressbarInnerWrapper);\r\n        progressbarWrapper.appendChild(progressbarText);\r\n        liElement.querySelector('.' + TEXT_CONTAINER).appendChild(progressbarWrapper);\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.updateProgressbar = function (e, li) {\r\n        if (!isNaN(Math.round((e.loaded / e.total) * 100)) && !isNullOrUndefined(li.querySelector('.' + PROGRESSBAR))) {\r\n            if (!isNullOrUndefined(this.progressInterval) && this.progressInterval !== '') {\r\n                var value = (Math.round((e.loaded / e.total) * 100)) % parseInt(this.progressInterval, 10);\r\n                if (value === 0 || value === 100) {\r\n                    this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\r\n                }\r\n            }\r\n            else {\r\n                this.changeProgressValue(li, Math.round((e.loaded / e.total) * 100).toString() + '%');\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.changeProgressValue = function (li, progressValue) {\r\n        li.querySelector('.' + PROGRESSBAR).setAttribute('style', 'width:' + progressValue);\r\n        li.querySelector('.' + PROGRESSBAR_TEXT).textContent = progressValue;\r\n    };\r\n    Uploader.prototype.uploadInProgress = function (e, files, customUI, request) {\r\n        var li = this.getLiElement(files);\r\n        if (isNullOrUndefined(li) && (!customUI)) {\r\n            return;\r\n        }\r\n        if (!isNullOrUndefined(li)) {\r\n            /* istanbul ignore next */\r\n            if (files.statusCode === '5') {\r\n                this.cancelUploadingFile(files, e, request, li);\r\n            }\r\n            if (!(li.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0) && li.querySelector('.' + STATUS)) {\r\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_INPROGRESS);\r\n                this.createProgressBar(li);\r\n                this.updateProgressBarClasses(li, UPLOAD_INPROGRESS);\r\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\r\n            }\r\n            this.updateProgressbar(e, li);\r\n            var iconEle = li.querySelector('.' + REMOVE_ICON);\r\n            if (!isNullOrUndefined(iconEle)) {\r\n                iconEle.classList.add(ABORT_ICON, UPLOAD_INPROGRESS);\r\n                iconEle.setAttribute('title', this.localizedTexts('abort'));\r\n                iconEle.classList.remove(REMOVE_ICON);\r\n            }\r\n        }\r\n        else {\r\n            this.cancelUploadingFile(files, e, request);\r\n        }\r\n        var args = { e: e, operation: 'upload', file: this.updateStatus(files, this.localizedTexts('inProgress'), '3') };\r\n        this.trigger('progress', args);\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.cancelUploadingFile = function (files, e, request, li) {\r\n        var _this = this;\r\n        if (files.statusCode === '5') {\r\n            var eventArgs = {\r\n                event: e,\r\n                fileData: files,\r\n                cancel: false,\r\n                customFormData: []\r\n            };\r\n            this.trigger('canceling', eventArgs, function (eventArgs) {\r\n                if (eventArgs.cancel) {\r\n                    files.statusCode = '3';\r\n                    if (!isNullOrUndefined(li)) {\r\n                        var spinnerTarget = li.querySelector('.' + ABORT_ICON);\r\n                        if (!isNullOrUndefined(spinnerTarget)) {\r\n                            hideSpinner(spinnerTarget);\r\n                            detach(li.querySelector('.e-spinner-pane'));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    request.emitError = false;\r\n                    request.httpRequest.abort();\r\n                    var formData = new FormData();\r\n                    if (files.statusCode === '5') {\r\n                        var name_1 = _this.element.getAttribute('name');\r\n                        formData.append(name_1, files.name);\r\n                        formData.append('cancel-uploading', files.name);\r\n                        _this.updateFormData(formData, eventArgs.customFormData);\r\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\r\n                        ajax.emitError = false;\r\n                        ajax.onLoad = function (e) {\r\n                            _this.removecanceledFile(e, files);\r\n                            return {};\r\n                        };\r\n                        ajax.send(formData);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Uploader.prototype.removecanceledFile = function (e, file) {\r\n        var liElement = this.getLiElement(file);\r\n        if (liElement.querySelector('.' + RETRY_ICON) || isNullOrUndefined(liElement.querySelector('.' + ABORT_ICON))) {\r\n            return;\r\n        }\r\n        this.updateStatus(file, this.localizedTexts('fileUploadCancel'), '5');\r\n        this.renderFailureState(e, file, liElement);\r\n        var spinnerTarget = liElement.querySelector('.' + REMOVE_ICON);\r\n        if (!isNullOrUndefined(liElement)) {\r\n            hideSpinner(spinnerTarget);\r\n            if (!isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\r\n                detach(liElement.querySelector('.e-spinner-pane'));\r\n            }\r\n        }\r\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var args = { event: e, response: requestResponse, operation: 'cancel', file: file };\r\n        this.trigger('success', args);\r\n    };\r\n    Uploader.prototype.renderFailureState = function (e, file, liElement) {\r\n        var _this = this;\r\n        this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\r\n        this.removeProgressbar(liElement, 'failure');\r\n        if (!isNullOrUndefined(liElement.querySelector('.e-file-status'))) {\r\n            liElement.querySelector('.e-file-status').classList.add(UPLOAD_FAILED);\r\n        }\r\n        var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\r\n        if (isNullOrUndefined(deleteIcon)) {\r\n            return;\r\n        }\r\n        deleteIcon.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\r\n        deleteIcon.classList.add(REMOVE_ICON);\r\n        deleteIcon.setAttribute('title', this.localizedTexts('remove'));\r\n        this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\r\n        deleteIcon.parentElement.insertBefore(this.pauseButton, deleteIcon);\r\n        this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\r\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\r\n        /* istanbul ignore next */\r\n        retryElement.addEventListener('click', function (e) {\r\n            _this.reloadcanceledFile(e, file, liElement, false);\r\n        }, false);\r\n    };\r\n    Uploader.prototype.reloadcanceledFile = function (e, file, liElement, custom) {\r\n        file.statusCode = '1';\r\n        file.status = this.localizedTexts('readyToUploadMessage');\r\n        if (!custom) {\r\n            if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\r\n                liElement.querySelector('.' + STATUS).classList.remove(UPLOAD_FAILED);\r\n            }\r\n            if (!isNullOrUndefined(liElement.querySelector('.' + RETRY_ICON))) {\r\n                detach(liElement.querySelector('.' + RETRY_ICON));\r\n            }\r\n            this.pauseButton = null;\r\n        }\r\n        /* istanbul ignore next */\r\n        liElement.classList.add(RESTRICT_RETRY);\r\n        this.upload([file]);\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.uploadComplete = function (e, file, customUI) {\r\n        var status = e.target;\r\n        if (status.readyState === 4 && status.status >= 200 && status.status <= 299) {\r\n            var li = this.getLiElement(file);\r\n            if (isNullOrUndefined(li) && (!customUI || isNullOrUndefined(customUI))) {\r\n                return;\r\n            }\r\n            if (!isNullOrUndefined(li)) {\r\n                this.updateProgressBarClasses(li, UPLOAD_SUCCESS);\r\n                this.removeProgressbar(li, 'success');\r\n                var iconEle = li.querySelector('.' + ABORT_ICON);\r\n                if (!isNullOrUndefined(iconEle)) {\r\n                    iconEle.classList.add(DELETE_ICON);\r\n                    iconEle.setAttribute('title', this.localizedTexts('delete'));\r\n                    iconEle.classList.remove(ABORT_ICON);\r\n                    iconEle.classList.remove(UPLOAD_INPROGRESS);\r\n                }\r\n            }\r\n            this.raiseSuccessEvent(e, file);\r\n        }\r\n        else {\r\n            this.uploadFailed(e, file);\r\n        }\r\n    };\r\n    Uploader.prototype.getResponse = function (e) {\r\n        var target = e.currentTarget;\r\n        var response = {\r\n            readyState: target.readyState,\r\n            statusCode: target.status,\r\n            statusText: target.statusText,\r\n            headers: target.getAllResponseHeaders(),\r\n            withCredentials: target.withCredentials\r\n        };\r\n        return response;\r\n    };\r\n    Uploader.prototype.raiseSuccessEvent = function (e, file) {\r\n        var _this = this;\r\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var statusMessage = this.localizedTexts('uploadSuccessMessage');\r\n        var args = {\r\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '2', false), statusText: statusMessage\r\n        };\r\n        var liElement = this.getLiElement(file);\r\n        if (!isNullOrUndefined(liElement)) {\r\n            var spinnerEle = liElement.querySelector('.' + SPINNER_PANE);\r\n            if (!isNullOrUndefined(spinnerEle)) {\r\n                hideSpinner(liElement);\r\n                detach(spinnerEle);\r\n            }\r\n        }\r\n        this.trigger('success', args, function (args) {\r\n            _this.updateStatus(file, args.statusText, '2');\r\n            _this.uploadedFilesData.push(file);\r\n            _this.trigger('change', { file: _this.uploadedFilesData });\r\n            _this.checkActionButtonStatus();\r\n            if (_this.fileList.length > 0) {\r\n                if ((!(_this.getLiElement(file)).classList.contains(RESTRICT_RETRY))) {\r\n                    _this.uploadSequential();\r\n                    _this.checkActionComplete(true);\r\n                }\r\n                else {\r\n                    /* istanbul ignore next */\r\n                    (_this.getLiElement(file)).classList.remove(RESTRICT_RETRY);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Uploader.prototype.uploadFailed = function (e, file) {\r\n        var _this = this;\r\n        var li = this.getLiElement(file);\r\n        var response = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var statusMessage = this.localizedTexts('uploadFailedMessage');\r\n        var args = {\r\n            e: e, response: response, operation: 'upload', file: this.updateStatus(file, statusMessage, '0', false), statusText: statusMessage\r\n        };\r\n        if (!isNullOrUndefined(li)) {\r\n            this.renderFailureState(e, file, li);\r\n        }\r\n        this.trigger('failure', args, function (args) {\r\n            _this.updateStatus(file, args.statusText, '0');\r\n            _this.checkActionButtonStatus();\r\n            _this.uploadSequential();\r\n            _this.checkActionComplete(true);\r\n        });\r\n    };\r\n    Uploader.prototype.uploadSequential = function () {\r\n        if (this.sequentialUpload) {\r\n            if (this.autoUpload) {\r\n                /* istanbul ignore next */\r\n                this.checkAutoUpload(this.filesData);\r\n            }\r\n            else {\r\n                this.uploadButtonClick();\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.checkActionComplete = function (increment) {\r\n        if (increment) {\r\n            ++this.actionCompleteCount;\r\n        }\r\n        else {\r\n            --this.actionCompleteCount;\r\n        }\r\n        this.raiseActionComplete();\r\n    };\r\n    Uploader.prototype.raiseActionComplete = function () {\r\n        if ((this.filesData.length === this.actionCompleteCount) && this.flag) {\r\n            this.flag = false;\r\n            var eventArgs = {\r\n                fileData: []\r\n            };\r\n            eventArgs.fileData = this.getSelectedFileStatus(this.selectedFiles);\r\n            this.trigger('actionComplete', eventArgs);\r\n        }\r\n    };\r\n    Uploader.prototype.getSelectedFileStatus = function (selectedFiles) {\r\n        var matchFiles = [];\r\n        var matchFilesIndex = 0;\r\n        for (var selectFileIndex = 0; selectFileIndex < selectedFiles.length; selectFileIndex++) {\r\n            var selectedFileData = selectedFiles[selectFileIndex];\r\n            for (var fileDataIndex = 0; fileDataIndex < this.filesData.length; fileDataIndex++) {\r\n                if (this.filesData[fileDataIndex].name === selectedFileData.name) {\r\n                    matchFiles[matchFilesIndex] = this.filesData[fileDataIndex];\r\n                    ++matchFilesIndex;\r\n                }\r\n            }\r\n        }\r\n        return matchFiles;\r\n    };\r\n    Uploader.prototype.updateProgressBarClasses = function (li, className) {\r\n        var progressBar = li.querySelector('.' + PROGRESSBAR);\r\n        if (!isNullOrUndefined(progressBar)) {\r\n            progressBar.classList.add(className);\r\n        }\r\n    };\r\n    Uploader.prototype.removeProgressbar = function (li, callType) {\r\n        var _this = this;\r\n        if (!isNullOrUndefined(li.querySelector('.' + PROGRESS_WRAPPER))) {\r\n            this.progressAnimation = new Animation({ duration: 1250 });\r\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESS_WRAPPER), { name: 'FadeOut' });\r\n            this.progressAnimation.animate(li.querySelector('.' + PROGRESSBAR_TEXT), { name: 'FadeOut' });\r\n            setTimeout(function () {\r\n                _this.animateProgressBar(li, callType);\r\n            }, 750);\r\n        }\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.animateProgressBar = function (li, callType) {\r\n        if (callType === 'success') {\r\n            li.classList.add(UPLOAD_SUCCESS);\r\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\r\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\r\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\r\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_SUCCESS);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndefined(li.querySelector('.' + STATUS))) {\r\n                li.querySelector('.' + STATUS).classList.remove(UPLOAD_INPROGRESS);\r\n                this.progressAnimation.animate(li.querySelector('.' + STATUS), { name: 'FadeIn' });\r\n                li.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\r\n            }\r\n        }\r\n        if (li.querySelector('.' + PROGRESS_WRAPPER)) {\r\n            detach(li.querySelector('.' + PROGRESS_WRAPPER));\r\n        }\r\n    };\r\n    Uploader.prototype.setExtensions = function (extensions) {\r\n        if (extensions !== '' && !isNullOrUndefined(extensions)) {\r\n            this.element.setAttribute('accept', extensions);\r\n        }\r\n        else {\r\n            this.element.removeAttribute('accept');\r\n        }\r\n    };\r\n    Uploader.prototype.templateComplier = function (uploadTemplate) {\r\n        if (uploadTemplate) {\r\n            try {\r\n                if (selectAll(uploadTemplate, document).length) {\r\n                    return compile(select(uploadTemplate, document).innerHTML.trim());\r\n                }\r\n            }\r\n            catch (exception) {\r\n                return compile(uploadTemplate);\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    Uploader.prototype.setRTL = function () {\r\n        if (this.enableRtl) {\r\n            addClass([this.uploadWrapper], RTL);\r\n        }\r\n        else {\r\n            removeClass([this.uploadWrapper], RTL);\r\n        }\r\n    };\r\n    Uploader.prototype.localizedTexts = function (localeText) {\r\n        this.l10n.setLocale(this.locale);\r\n        return this.l10n.getConstant(localeText);\r\n    };\r\n    Uploader.prototype.setControlStatus = function () {\r\n        if (!this.enabled) {\r\n            this.uploadWrapper.classList.add(DISABLED);\r\n            this.element.setAttribute('disabled', 'disabled');\r\n            this.browseButton.setAttribute('disabled', 'disabled');\r\n            if (!isNullOrUndefined(this.clearButton)) {\r\n                this.clearButton.setAttribute('disabled', 'disabled');\r\n            }\r\n            if (!isNullOrUndefined(this.uploadButton)) {\r\n                this.uploadButton.setAttribute('disabled', 'disabled');\r\n            }\r\n        }\r\n        else {\r\n            if (this.uploadWrapper.classList.contains(DISABLED)) {\r\n                this.uploadWrapper.classList.remove(DISABLED);\r\n            }\r\n            if (!isNullOrUndefined(this.browseButton) && this.element.hasAttribute('disabled')) {\r\n                this.element.removeAttribute('disabled');\r\n                this.browseButton.removeAttribute('disabled');\r\n            }\r\n            if (!isNullOrUndefined(this.clearButton) && this.clearButton.hasAttribute('disabled')) {\r\n                this.clearButton.removeAttribute('disabled');\r\n            }\r\n            if (!isNullOrUndefined(this.uploadButton) && this.uploadButton.hasAttribute('disabled')) {\r\n                this.uploadButton.hasAttribute('disabled');\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.checkHTMLAttributes = function (isDynamic) {\r\n        var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) :\r\n            ['accept', 'multiple', 'disabled'];\r\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\r\n            var prop = attributes_1[_i];\r\n            if (!isNullOrUndefined(this.element.getAttribute(prop))) {\r\n                switch (prop) {\r\n                    case 'accept':\r\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['allowedExtensions'] === undefined))\r\n                            || isDynamic) {\r\n                            this.setProperties({ allowedExtensions: this.element.getAttribute('accept') }, !isDynamic);\r\n                            this.initialAttr.accept = this.allowedExtensions;\r\n                        }\r\n                        break;\r\n                    case 'multiple':\r\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['multiple'] === undefined)) || isDynamic) {\r\n                            var isMutiple = this.element.getAttribute(prop) === 'multiple' ||\r\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? true : false;\r\n                            this.setProperties({ multiple: isMutiple }, !isDynamic);\r\n                            this.initialAttr.multiple = true;\r\n                        }\r\n                        break;\r\n                    case 'disabled':\r\n                        if ((isNullOrUndefined(this.uploaderOptions) || (this.uploaderOptions['enabled'] === undefined)) || isDynamic) {\r\n                            var isDisabled = this.element.getAttribute(prop) === 'disabled' ||\r\n                                this.element.getAttribute(prop) === '' || this.element.getAttribute(prop) === 'true' ? false : true;\r\n                            this.setProperties({ enabled: isDisabled }, !isDynamic);\r\n                            this.initialAttr.disabled = true;\r\n                        }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.chunkUpload = function (file, custom, fileIndex) {\r\n        var start = 0;\r\n        var end = Math.min(this.asyncSettings.chunkSize, file.size);\r\n        var index = 0;\r\n        var blob = file.rawFile.slice(start, end);\r\n        var metaData = { chunkIndex: index, blob: blob, file: file, start: start, end: end, retryCount: 0, request: null };\r\n        this.sendRequest(file, metaData, custom, fileIndex);\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Uploader.prototype.sendRequest = function (file, metaData, custom, fileIndex) {\r\n        var _this = this;\r\n        var formData = new FormData();\r\n        var blob = file.rawFile.slice(metaData.start, metaData.end);\r\n        formData.append('chunkFile', blob, file.name);\r\n        formData.append(this.uploaderName, blob, file.name);\r\n        formData.append('chunk-index', metaData.chunkIndex.toString());\r\n        formData.append('chunkIndex', metaData.chunkIndex.toString());\r\n        var totalChunk = Math.max(Math.ceil(file.size / this.asyncSettings.chunkSize), 1);\r\n        formData.append('total-chunk', totalChunk.toString());\r\n        formData.append('totalChunk', totalChunk.toString());\r\n        var ajax = new Ajax({ url: this.asyncSettings.saveUrl, type: 'POST', async: true, contentType: null });\r\n        ajax.emitError = false;\r\n        ajax.onLoad = function (e) {\r\n            _this.chunkUploadComplete(e, metaData, custom);\r\n            return {};\r\n        };\r\n        ajax.onUploadProgress = function (e) {\r\n            _this.chunkUploadInProgress(e, metaData, custom);\r\n            return {};\r\n        };\r\n        var eventArgs = {\r\n            fileData: file,\r\n            customFormData: [],\r\n            cancel: false,\r\n            chunkSize: this.asyncSettings.chunkSize === 0 ? null : this.asyncSettings.chunkSize\r\n        };\r\n        ajax.beforeSend = function (e) {\r\n            eventArgs.currentRequest = ajax.httpRequest;\r\n            eventArgs.currentChunkIndex = metaData.chunkIndex;\r\n            if (eventArgs.currentChunkIndex === 0) {\r\n                // This event is currently not required but to avoid breaking changes for previous customer, we have included.\r\n                _this.trigger('uploading', eventArgs, function (eventArgs) {\r\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\r\n                });\r\n            }\r\n            else {\r\n                _this.trigger('chunkUploading', eventArgs, function (eventArgs) {\r\n                    _this.uploadingEventCallback(formData, eventArgs, e, file);\r\n                });\r\n            }\r\n        };\r\n        /* istanbul ignore next */\r\n        ajax.onError = function (e) {\r\n            _this.chunkUploadFailed(e, metaData, custom);\r\n            return {};\r\n        };\r\n        ajax.send(formData);\r\n        metaData.request = ajax;\r\n    };\r\n    Uploader.prototype.uploadingEventCallback = function (formData, eventArgs, e, file) {\r\n        if (eventArgs.cancel) {\r\n            this.eventCancelByArgs(e, eventArgs, file);\r\n        }\r\n        else {\r\n            this.updateFormData(formData, eventArgs.customFormData);\r\n        }\r\n    };\r\n    Uploader.prototype.eventCancelByArgs = function (e, eventArgs, file) {\r\n        var _this = this;\r\n        e.cancel = true;\r\n        if (eventArgs.fileData.statusCode === '5') {\r\n            return;\r\n        }\r\n        eventArgs.fileData.statusCode = '5';\r\n        eventArgs.fileData.status = this.localizedTexts('fileUploadCancel');\r\n        var liElement = this.getLiElement(eventArgs.fileData);\r\n        if (liElement) {\r\n            if (!isNullOrUndefined(liElement.querySelector('.' + STATUS))) {\r\n                liElement.querySelector('.' + STATUS).innerHTML = this.localizedTexts('fileUploadCancel');\r\n                liElement.querySelector('.' + STATUS).classList.add(UPLOAD_FAILED);\r\n            }\r\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-reload-btn', attrs: { 'tabindex': this.btnTabIndex } });\r\n            var removeIcon = liElement.querySelector('.' + REMOVE_ICON);\r\n            if (removeIcon) {\r\n                removeIcon.parentElement.insertBefore(this.pauseButton, removeIcon);\r\n            }\r\n            this.pauseButton.setAttribute('title', this.localizedTexts('retry'));\r\n            /* istanbul ignore next */\r\n            this.pauseButton.addEventListener('click', function (e) {\r\n                _this.reloadcanceledFile(e, file, liElement);\r\n            }, false);\r\n            this.checkActionButtonStatus();\r\n        }\r\n    };\r\n    Uploader.prototype.checkChunkUpload = function () {\r\n        return (this.asyncSettings.chunkSize <= 0 || isNullOrUndefined(this.asyncSettings.chunkSize)) ? false : true;\r\n    };\r\n    Uploader.prototype.chunkUploadComplete = function (e, metaData, custom) {\r\n        var _this = this;\r\n        var response = e.target;\r\n        var liElement;\r\n        if (response.readyState === 4 && response.status >= 200 && response.status < 300) {\r\n            var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\r\n            var totalChunk = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\r\n            var eventArgs = {\r\n                event: e,\r\n                file: metaData.file,\r\n                chunkIndex: metaData.chunkIndex,\r\n                totalChunk: totalChunk,\r\n                chunkSize: this.asyncSettings.chunkSize,\r\n                response: requestResponse\r\n            };\r\n            this.trigger('chunkSuccess', eventArgs);\r\n            if (isNullOrUndefined(custom) || !custom) {\r\n                liElement = this.getLiElement(metaData.file);\r\n            }\r\n            this.updateMetaData(metaData);\r\n            if (metaData.end === metaData.file.size) {\r\n                metaData.file.statusCode = '3';\r\n            }\r\n            if (metaData.file.statusCode === '5') {\r\n                var eventArgs_1 = { event: e, fileData: metaData.file, cancel: false, customFormData: [] };\r\n                this.trigger('canceling', eventArgs_1, function (eventArgs) {\r\n                    /* istanbul ignore next */\r\n                    if (eventArgs.cancel) {\r\n                        metaData.file.statusCode = '3';\r\n                        var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\r\n                        if (!isNullOrUndefined(liElement) && !isNullOrUndefined(spinnerTarget)) {\r\n                            hideSpinner(spinnerTarget);\r\n                            detach(liElement.querySelector('.e-spinner-pane'));\r\n                        }\r\n                        _this.sendNextRequest(metaData);\r\n                    }\r\n                    else {\r\n                        metaData.request.emitError = false;\r\n                        response.abort();\r\n                        var formData = new FormData();\r\n                        var name_2 = _this.element.getAttribute('name');\r\n                        formData.append(name_2, metaData.file.name);\r\n                        formData.append('cancel-uploading', metaData.file.name);\r\n                        formData.append('cancelUploading', metaData.file.name);\r\n                        _this.updateFormData(formData, eventArgs.customFormData);\r\n                        var ajax = new Ajax(_this.asyncSettings.removeUrl, 'POST', true, null);\r\n                        ajax.emitError = false;\r\n                        ajax.onLoad = function (e) {\r\n                            _this.removeChunkFile(e, metaData, custom);\r\n                            return {};\r\n                        };\r\n                        ajax.send(formData);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if ((totalChunk - 1) === metaData.chunkIndex && totalChunk > metaData.chunkIndex) {\r\n                    var index = this.pausedData.indexOf(metaData);\r\n                    if (index >= 0) {\r\n                        this.pausedData.splice(index, 1);\r\n                    }\r\n                    if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\r\n                        if (liElement && !isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\r\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\r\n                        }\r\n                        this.removeChunkProgressBar(metaData);\r\n                    }\r\n                    this.raiseSuccessEvent(e, metaData.file);\r\n                    return;\r\n                }\r\n                if (metaData.file.statusCode !== '4') {\r\n                    this.sendNextRequest(metaData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.chunkUploadFailed(e, metaData);\r\n        }\r\n    };\r\n    Uploader.prototype.sendNextRequest = function (metaData) {\r\n        metaData.start = metaData.end;\r\n        metaData.end += this.asyncSettings.chunkSize;\r\n        metaData.end = Math.min(metaData.end, metaData.file.size);\r\n        metaData.chunkIndex += 1;\r\n        this.sendRequest(metaData.file, metaData);\r\n    };\r\n    Uploader.prototype.removeChunkFile = function (e, metaData, custom) {\r\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) && !custom)) {\r\n            var liElement = this.getLiElement(metaData.file);\r\n            var deleteIcon = liElement.querySelector('.' + ABORT_ICON);\r\n            var spinnerTarget = deleteIcon;\r\n            this.updateStatus(metaData.file, this.localizedTexts('fileUploadCancel'), '5');\r\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\r\n            this.removeProgressbar(liElement, 'failure');\r\n            deleteIcon && deleteIcon.classList.remove(ABORT_ICON);\r\n            deleteIcon && deleteIcon.classList.add(REMOVE_ICON);\r\n            deleteIcon && deleteIcon.setAttribute('title', this.localizedTexts('remove'));\r\n            var pauseIcon = liElement.querySelector('.' + PAUSE_UPLOAD);\r\n            pauseIcon && pauseIcon.classList.add(RETRY_ICON);\r\n            pauseIcon && pauseIcon.classList.remove(PAUSE_UPLOAD);\r\n            pauseIcon && pauseIcon.setAttribute('title', this.localizedTexts('retry'));\r\n            if (!isNullOrUndefined(liElement) && !isNullOrUndefined(deleteIcon)\r\n                && !isNullOrUndefined(liElement.querySelector('.e-spinner-pane'))) {\r\n                hideSpinner(spinnerTarget);\r\n                detach(liElement.querySelector('.e-spinner-pane'));\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.pauseUpload = function (metaData, e, custom) {\r\n        metaData.file.statusCode = '4';\r\n        metaData.file.status = this.localizedTexts('pause');\r\n        this.updateMetaData(metaData);\r\n        var eventArgs = {\r\n            event: e ? e : null,\r\n            file: metaData.file,\r\n            chunkIndex: metaData.chunkIndex,\r\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\r\n            chunkSize: this.asyncSettings.chunkSize\r\n        };\r\n        this.abortUpload(metaData, custom, eventArgs);\r\n    };\r\n    Uploader.prototype.abortUpload = function (metaData, custom, eventArgs) {\r\n        if (metaData.file.statusCode !== '4') {\r\n            metaData.request.emitError = false;\r\n            metaData.request.httpRequest.abort();\r\n        }\r\n        var liElement = this.getLiElement(metaData.file);\r\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\r\n            var targetElement = liElement.querySelector('.' + PAUSE_UPLOAD);\r\n            targetElement.classList.remove(PAUSE_UPLOAD);\r\n            targetElement.classList.add(RESUME_UPLOAD);\r\n            targetElement.setAttribute('title', this.localizedTexts('resume'));\r\n            targetElement.nextElementSibling.classList.add(REMOVE_ICON);\r\n            targetElement.nextElementSibling.classList.remove(ABORT_ICON);\r\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('remove'));\r\n        }\r\n        for (var i = 0; i < this.pausedData.length; i++) {\r\n            if (this.pausedData[i].file.name === metaData.file.name) {\r\n                this.pausedData.splice(i, 1);\r\n            }\r\n        }\r\n        this.pausedData.push(metaData);\r\n        this.trigger('pausing', eventArgs);\r\n    };\r\n    Uploader.prototype.resumeUpload = function (metaData, e, custom) {\r\n        var liElement = this.getLiElement(metaData.file);\r\n        var targetElement;\r\n        if (!isNullOrUndefined(liElement)) {\r\n            targetElement = liElement.querySelector('.' + RESUME_UPLOAD);\r\n        }\r\n        if (!isNullOrUndefined(targetElement) && (isNullOrUndefined(custom) || !custom)) {\r\n            targetElement.classList.remove(RESUME_UPLOAD);\r\n            targetElement.classList.add(PAUSE_UPLOAD);\r\n            targetElement.setAttribute('title', this.localizedTexts('pause'));\r\n            targetElement.nextElementSibling.classList.remove(REMOVE_ICON);\r\n            targetElement.nextElementSibling.classList.add(ABORT_ICON);\r\n            targetElement.nextElementSibling.setAttribute('title', this.localizedTexts('abort'));\r\n        }\r\n        metaData.file.status = this.localizedTexts('inProgress');\r\n        metaData.file.statusCode = '3';\r\n        this.updateMetaData(metaData);\r\n        var eventArgs = {\r\n            event: e ? e : null,\r\n            file: metaData.file,\r\n            chunkIndex: metaData.chunkIndex,\r\n            chunkCount: Math.round(metaData.file.size / this.asyncSettings.chunkSize),\r\n            chunkSize: this.asyncSettings.chunkSize\r\n        };\r\n        this.trigger('resuming', eventArgs);\r\n        for (var i = 0; i < this.pausedData.length; i++) {\r\n            if (this.pausedData[i].end === this.pausedData[i].file.size) {\r\n                this.chunkUploadComplete(e, metaData, custom);\r\n            }\r\n            else {\r\n                if (this.pausedData[i].file.name === metaData.file.name) {\r\n                    this.pausedData[i].start = this.pausedData[i].end;\r\n                    this.pausedData[i].end = this.pausedData[i].end + this.asyncSettings.chunkSize;\r\n                    this.pausedData[i].end = Math.min(this.pausedData[i].end, this.pausedData[i].file.size);\r\n                    this.pausedData[i].chunkIndex = this.pausedData[i].chunkIndex + 1;\r\n                    this.sendRequest(this.pausedData[i].file, this.pausedData[i], custom);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.updateMetaData = function (metaData) {\r\n        if (this.uploadMetaData.indexOf(metaData) === -1) {\r\n            this.uploadMetaData.push(metaData);\r\n        }\r\n        else {\r\n            this.uploadMetaData.splice(this.uploadMetaData.indexOf(metaData), 1);\r\n            this.uploadMetaData.push(metaData);\r\n        }\r\n    };\r\n    Uploader.prototype.removeChunkProgressBar = function (metaData) {\r\n        var liElement = this.getLiElement(metaData.file);\r\n        if (!isNullOrUndefined(liElement)) {\r\n            this.updateProgressBarClasses(liElement, UPLOAD_SUCCESS);\r\n            this.removeProgressbar(liElement, 'success');\r\n            var cancelButton = liElement.querySelector('.' + ABORT_ICON);\r\n            if (!isNullOrUndefined(cancelButton)) {\r\n                cancelButton.classList.add(DELETE_ICON);\r\n                cancelButton.setAttribute('title', this.localizedTexts('delete'));\r\n                cancelButton.classList.remove(ABORT_ICON, UPLOAD_INPROGRESS);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.chunkUploadFailed = function (e, metaData, custom) {\r\n        var _this = this;\r\n        var chunkCount = Math.max(Math.ceil(metaData.file.size / this.asyncSettings.chunkSize), 1);\r\n        var liElement;\r\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom)) {\r\n            liElement = this.getLiElement(metaData.file);\r\n        }\r\n        var requestResponse = e && e.currentTarget ? this.getResponse(e) : null;\r\n        var eventArgs = {\r\n            event: e,\r\n            file: metaData.file,\r\n            chunkIndex: metaData.chunkIndex,\r\n            totalChunk: chunkCount,\r\n            chunkSize: this.asyncSettings.chunkSize,\r\n            cancel: false,\r\n            response: requestResponse\r\n        };\r\n        this.trigger('chunkFailure', eventArgs, function (eventArgs) {\r\n            // To prevent triggering of failure event\r\n            if (!eventArgs.cancel) {\r\n                if (metaData.retryCount < _this.asyncSettings.retryCount) {\r\n                    setTimeout(function () {\r\n                        _this.retryRequest(liElement, metaData, custom);\r\n                    }, _this.asyncSettings.retryAfterDelay);\r\n                }\r\n                else {\r\n                    if (!isNullOrUndefined(liElement)) {\r\n                        var pauseButton = liElement.querySelector('.' + PAUSE_UPLOAD) ?\r\n                            liElement.querySelector('.' + PAUSE_UPLOAD) : liElement.querySelector('.' + RESUME_UPLOAD);\r\n                        if (!isNullOrUndefined(pauseButton)) {\r\n                            pauseButton.classList.add(RETRY_ICON);\r\n                            pauseButton.classList.remove(PAUSE_UPLOAD, RESUME_UPLOAD);\r\n                        }\r\n                        _this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\r\n                        _this.removeProgressbar(liElement, 'failure');\r\n                        liElement.querySelector('.e-icons').classList.remove(UPLOAD_INPROGRESS);\r\n                        var iconElement = liElement.querySelector('.' + ABORT_ICON) ?\r\n                            liElement.querySelector('.' + ABORT_ICON) : liElement.querySelector('.' + REMOVE_ICON);\r\n                        iconElement.classList.remove(ABORT_ICON);\r\n                        if (!isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD))) {\r\n                            detach(liElement.querySelector('.' + PAUSE_UPLOAD));\r\n                        }\r\n                        if (metaData.start > 0) {\r\n                            iconElement.classList.add(DELETE_ICON);\r\n                            iconElement.setAttribute('title', _this.localizedTexts('delete'));\r\n                        }\r\n                        else {\r\n                            iconElement.classList.add(REMOVE_ICON);\r\n                            iconElement.setAttribute('title', _this.localizedTexts('remove'));\r\n                        }\r\n                    }\r\n                    metaData.retryCount = 0;\r\n                    var file_1 = metaData.file;\r\n                    var failureMessage = _this.localizedTexts('uploadFailedMessage');\r\n                    var args = {\r\n                        e: e, response: requestResponse,\r\n                        operation: 'upload',\r\n                        file: _this.updateStatus(file_1, failureMessage, '0', false),\r\n                        statusText: failureMessage\r\n                    };\r\n                    _this.trigger('failure', args, function (args) {\r\n                        _this.updateStatus(file_1, args.statusText, '0');\r\n                        _this.uploadSequential();\r\n                        _this.checkActionComplete(true);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Uploader.prototype.retryRequest = function (liElement, metaData, custom) {\r\n        if (isNullOrUndefined(this.template) && (isNullOrUndefined(custom) || !custom) && liElement) {\r\n            this.updateProgressBarClasses(liElement, UPLOAD_FAILED);\r\n        }\r\n        metaData.retryCount += 1;\r\n        this.sendRequest(metaData.file, metaData);\r\n    };\r\n    Uploader.prototype.checkPausePlayAction = function (e) {\r\n        var targetElement = e.target;\r\n        var selectedElement = e.target.parentElement;\r\n        var index = this.fileList.indexOf(selectedElement);\r\n        var fileData = this.filesData[index];\r\n        var metaData = this.getCurrentMetaData(fileData);\r\n        if (targetElement.classList.contains(PAUSE_UPLOAD)) {\r\n            /* istanbul ignore next */\r\n            this.pauseUpload(metaData, e);\r\n        }\r\n        else if (targetElement.classList.contains(RESUME_UPLOAD)) {\r\n            /* istanbul ignore next */\r\n            this.resumeUpload(metaData, e);\r\n        }\r\n        else if (targetElement.classList.contains(RETRY_ICON)) {\r\n            if (metaData.file.status === this.localizedTexts('fileUploadCancel')) {\r\n                this.retryUpload(metaData, false);\r\n            }\r\n            else {\r\n                this.retryUpload(metaData, true);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.retryUpload = function (metaData, fromcanceledStage) {\r\n        if (fromcanceledStage) {\r\n            metaData.end = metaData.end + this.asyncSettings.chunkSize;\r\n            metaData.start = metaData.start + this.asyncSettings.chunkSize;\r\n            this.sendRequest(metaData.file, metaData);\r\n        }\r\n        else {\r\n            metaData.file.statusCode = '1';\r\n            metaData.file.status = this.localizedTexts('readyToUploadMessage');\r\n            this.chunkUpload(metaData.file);\r\n        }\r\n        /* istanbul ignore next */\r\n        (this.getLiElement(metaData.file)).classList.add(RESTRICT_RETRY);\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Uploader.prototype.chunkUploadInProgress = function (e, metaData, custom) {\r\n        var _this = this;\r\n        if (metaData.file.statusCode === '4') {\r\n            return;\r\n        }\r\n        if (metaData.file.statusCode !== '4' && metaData.file.statusCode !== '5') {\r\n            metaData.file.statusCode = '3';\r\n            metaData.file.status = this.localizedTexts('inProgress');\r\n        }\r\n        this.updateMetaData(metaData);\r\n        var liElement = this.getLiElement(metaData.file);\r\n        if (isNullOrUndefined(liElement)) {\r\n            return;\r\n        }\r\n        var retryElement = liElement.querySelector('.' + RETRY_ICON);\r\n        if (!isNullOrUndefined(retryElement)) {\r\n            retryElement.classList.add(PAUSE_UPLOAD);\r\n            retryElement.setAttribute('title', this.localizedTexts('pause'));\r\n            retryElement.classList.remove(RETRY_ICON);\r\n        }\r\n        if (!isNullOrUndefined(liElement)) {\r\n            if (!(liElement.querySelectorAll('.' + PROGRESS_WRAPPER).length > 0)) {\r\n                var statusElement = liElement.querySelector('.' + STATUS);\r\n                if (isNullOrUndefined(this.template)) {\r\n                    statusElement.classList.add(UPLOAD_INPROGRESS);\r\n                    statusElement.classList.remove(UPLOAD_FAILED);\r\n                    this.createProgressBar(liElement);\r\n                    this.updateProgressBarClasses(liElement, UPLOAD_INPROGRESS);\r\n                }\r\n                var clearIcon = liElement.querySelector('.' + REMOVE_ICON) ? liElement.querySelector('.' + REMOVE_ICON) :\r\n                    liElement.querySelector('.' + DELETE_ICON);\r\n                if (!isNullOrUndefined(clearIcon)) {\r\n                    clearIcon.classList.add(ABORT_ICON);\r\n                    clearIcon.setAttribute('title', this.localizedTexts('abort'));\r\n                    clearIcon.classList.remove(REMOVE_ICON);\r\n                }\r\n            }\r\n            if (!isNaN(Math.round((e.loaded / e.total) * 100)) && isNullOrUndefined(this.template) && metaData.file.statusCode !== '4') {\r\n                var progressVal = void 0;\r\n                var totalChunks = Math.ceil(metaData.file.size / this.asyncSettings.chunkSize) - 1;\r\n                if (this.asyncSettings.chunkSize && totalChunks) {\r\n                    progressVal = Math.round(metaData.chunkIndex / totalChunks * 100);\r\n                    this.changeProgressValue(liElement, progressVal.toString() + '%');\r\n                }\r\n            }\r\n            if (metaData.chunkIndex === 0) {\r\n                this.checkActionButtonStatus();\r\n            }\r\n        }\r\n        if (isNullOrUndefined(liElement.querySelector('.' + PAUSE_UPLOAD)) && isNullOrUndefined(this.template)\r\n            && isNullOrUndefined(liElement.querySelector('.' + DELETE_ICON))) {\r\n            this.pauseButton = this.createElement('span', { className: 'e-icons e-file-pause-btn', attrs: { 'tabindex': this.btnTabIndex } });\r\n            if (this.browserName === 'msie') {\r\n                this.pauseButton.classList.add('e-msie');\r\n            }\r\n            var abortIcon = liElement.querySelector('.' + ABORT_ICON);\r\n            abortIcon.parentElement.insertBefore(this.pauseButton, abortIcon);\r\n            this.pauseButton.setAttribute('title', this.localizedTexts('pause'));\r\n            this.pauseButton.addEventListener('click', function (e) {\r\n                _this.checkPausePlayAction(e);\r\n            }, false);\r\n        }\r\n    };\r\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\r\n    /**\r\n     * It is used to convert bytes value into kilobytes or megabytes depending on the size based\r\n     * on [binary prefix](https://en.wikipedia.org/wiki/Binary_prefix).\r\n     *\r\n     * @param { number } bytes - Specifies the file size in bytes.\r\n     * @returns {string}\r\n     */\r\n    Uploader.prototype.bytesToSize = function (bytes) {\r\n        var i = -1;\r\n        if (!bytes) {\r\n            return '0.0 KB';\r\n        }\r\n        do {\r\n            bytes = bytes / 1024;\r\n            i++;\r\n        } while (bytes > 99);\r\n        if (i >= 2) {\r\n            bytes = bytes * 1024;\r\n            i = 1;\r\n        }\r\n        return Math.max(bytes, 0).toFixed(1) + ' ' + ['KB', 'MB'][i];\r\n    };\r\n    /**\r\n     * Allows you to sort the file data alphabetically based on its file name clearly.\r\n     *\r\n     * @param { FileList } filesData - specifies the files data for upload.\r\n     * @returns {File[]}\r\n     */\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.sortFileList = function (filesData) {\r\n        filesData = filesData ? filesData : this.sortFilesList;\r\n        var files = filesData;\r\n        var fileNames = [];\r\n        for (var i = 0; i < files.length; i++) {\r\n            fileNames.push(files[i].name);\r\n        }\r\n        var sortedFileNames = fileNames.sort();\r\n        var sortedFilesData = [];\r\n        for (var _i = 0, sortedFileNames_1 = sortedFileNames; _i < sortedFileNames_1.length; _i++) {\r\n            var name_3 = sortedFileNames_1[_i];\r\n            for (var i = 0; i < files.length; i++) {\r\n                if (name_3 === files[i].name) {\r\n                    sortedFilesData.push(files[i]);\r\n                }\r\n            }\r\n        }\r\n        return sortedFilesData;\r\n    };\r\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\r\n    /**\r\n     * Removes the component from the DOM and detaches all its related event handlers. Also it removes the attributes and classes.\r\n     *\r\n     * @method destroy\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.destroy = function () {\r\n        this.element.value = null;\r\n        this.clearTemplate();\r\n        this.clearAll();\r\n        this.unWireEvents();\r\n        this.unBindDropEvents();\r\n        if (this.multiple) {\r\n            this.element.removeAttribute('multiple');\r\n        }\r\n        if (!this.enabled) {\r\n            this.element.removeAttribute('disabled');\r\n        }\r\n        this.element.removeAttribute('accept');\r\n        this.setInitialAttributes();\r\n        var attributes = ['aria-label', 'directory', 'webkitdirectory', 'tabindex'];\r\n        for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {\r\n            var key = attributes_2[_i];\r\n            this.element.removeAttribute(key);\r\n        }\r\n        if (!isNullOrUndefined(this.uploadWrapper)) {\r\n            this.uploadWrapper.parentElement.appendChild(this.element);\r\n            detach(this.uploadWrapper);\r\n        }\r\n        this.uploadWrapper = null;\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    /**\r\n     * Allows you to call the upload process manually by calling save URL action.\r\n     * To process the selected files (added in upload queue), pass an empty argument otherwise\r\n     * upload the specific file based on its argument.\r\n     *\r\n     * @param { FileInfo | FileInfo[] } files - Specifies the files data for upload.\r\n     * @param {boolean} custom - Specifies whether the uploader is rendered with custom file list.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.upload = function (files, custom) {\r\n        var _this = this;\r\n        files = files ? files : this.filesData;\r\n        if (this.sequentialUpload && (this.isFirstFileOnSelection || custom)) {\r\n            this.sequenceUpload(files);\r\n        }\r\n        else {\r\n            var uploadFiles_1 = this.getFilesInArray(files);\r\n            var eventArgs = {\r\n                customFormData: [],\r\n                currentRequest: null,\r\n                cancel: false\r\n            };\r\n            this.trigger('beforeUpload', eventArgs, function (eventArgs) {\r\n                if (!eventArgs.cancel) {\r\n                    _this.uploadFiles(uploadFiles_1, custom);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Uploader.prototype.getFilesInArray = function (files) {\r\n        var uploadFiles = [];\r\n        if (files instanceof Array) {\r\n            uploadFiles = files;\r\n        }\r\n        else {\r\n            uploadFiles.push(files);\r\n        }\r\n        return uploadFiles;\r\n    };\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.serverReadFileBase64 = function (fileIndex, position, totalCount) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var file = _this.fileStreams[fileIndex].rawFile;\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.onload = (function (args) {\r\n                    return function () {\r\n                        try {\r\n                            var contents = args.result;\r\n                            var data = contents ? contents.split(';base64,')[1] : null;\r\n                            resolve(data);\r\n                        }\r\n                        catch (e) {\r\n                            reject(e);\r\n                        }\r\n                    };\r\n                })(reader);\r\n                reader.readAsDataURL(file.slice(position, position + totalCount));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.uploadFileCount = function (ele) {\r\n        /* eslint-enable @typescript-eslint/no-unused-vars */\r\n        var files = this.filesData;\r\n        if (!files || files.length === 0) {\r\n            return -1;\r\n        }\r\n        var result = files.length;\r\n        return result;\r\n    };\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.getFileRead = function (index, ele) {\r\n        /* eslint-enable @typescript-eslint/no-unused-vars */\r\n        var files = this.filesData;\r\n        if (!files || files.length === 0) {\r\n            return -1;\r\n        }\r\n        var file = files[index];\r\n        var fileCount = this.newFileRef++;\r\n        this.fileStreams[fileCount] = file;\r\n        return fileCount;\r\n    };\r\n    /* eslint-disable @typescript-eslint/no-unused-vars */\r\n    /* istanbul ignore next */\r\n    Uploader.prototype.getFileInfo = function (index, ele) {\r\n        /* eslint-enable @typescript-eslint/no-unused-vars */\r\n        var files = this.filesData;\r\n        if (!files || files.length === 0) {\r\n            return null;\r\n        }\r\n        var file = files[index];\r\n        if (!file) {\r\n            return null;\r\n        }\r\n        return this.filesData[index];\r\n    };\r\n    Uploader.prototype.uploadFiles = function (files, custom) {\r\n        var selectedFiles = [];\r\n        if (this.asyncSettings.saveUrl === '' || isNullOrUndefined(this.asyncSettings.saveUrl)) {\r\n            return;\r\n        }\r\n        if (!custom || isNullOrUndefined(custom)) {\r\n            if (!this.multiple) {\r\n                var file = [];\r\n                file.push(files[0]);\r\n                selectedFiles = this.filterfileList(file);\r\n            }\r\n            else {\r\n                selectedFiles = this.filterfileList(files);\r\n            }\r\n        }\r\n        else {\r\n            selectedFiles = files;\r\n        }\r\n        for (var i = 0; i < selectedFiles.length; i++) {\r\n            this.uploadFilesRequest(selectedFiles, i, custom);\r\n        }\r\n    };\r\n    Uploader.prototype.uploadFilesRequest = function (selectedFiles, i, custom) {\r\n        var _this = this;\r\n        var cloneFiles = [];\r\n        var chunkEnabled = this.checkChunkUpload();\r\n        var ajax = new Ajax(this.asyncSettings.saveUrl, 'POST', true, null);\r\n        ajax.emitError = false;\r\n        var getFileData;\r\n        var eventArgs = {\r\n            fileData: selectedFiles[i],\r\n            customFormData: [],\r\n            cancel: false\r\n        };\r\n        var formData = new FormData();\r\n        ajax.beforeSend = function (e) {\r\n            eventArgs.currentRequest = ajax.httpRequest;\r\n            _this.trigger('uploading', eventArgs, function (eventArgs) {\r\n                /* istanbul ignore next */\r\n                if (eventArgs.cancel) {\r\n                    _this.eventCancelByArgs(e, eventArgs, selectedFiles[i]);\r\n                }\r\n                _this.updateFormData(formData, eventArgs.customFormData);\r\n            });\r\n        };\r\n        if (selectedFiles[i].statusCode === '1') {\r\n            var name_4 = this.element.getAttribute('name');\r\n            formData.append(name_4, selectedFiles[i].rawFile, selectedFiles[i].name);\r\n            if (chunkEnabled && selectedFiles[i].size > this.asyncSettings.chunkSize) {\r\n                this.chunkUpload(selectedFiles[i], custom, i);\r\n            }\r\n            else {\r\n                ajax.onLoad = function (e) {\r\n                    if (eventArgs.cancel) {\r\n                        return {};\r\n                    }\r\n                    else {\r\n                        _this.uploadComplete(e, selectedFiles[i], custom);\r\n                        return {};\r\n                    }\r\n                };\r\n                ajax.onUploadProgress = function (e) {\r\n                    if (eventArgs.cancel) {\r\n                        return {};\r\n                    }\r\n                    else {\r\n                        _this.uploadInProgress(e, selectedFiles[i], custom, ajax);\r\n                        return {};\r\n                    }\r\n                };\r\n                /* istanbul ignore next */\r\n                ajax.onError = function (e) {\r\n                    _this.uploadFailed(e, selectedFiles[i]);\r\n                    return {};\r\n                };\r\n                ajax.send(formData);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.spliceFiles = function (liIndex) {\r\n        var liElement = this.fileList[liIndex];\r\n        var allFiles = this.getFilesData();\r\n        var nameElements = +liElement.getAttribute('data-files-count');\r\n        var startIndex = 0;\r\n        for (var i = 0; i < liIndex; i++) {\r\n            startIndex += (+this.fileList[i].getAttribute('data-files-count'));\r\n        }\r\n        var endIndex = (startIndex + nameElements) - 1;\r\n        for (var j = endIndex; j >= startIndex; j--) {\r\n            allFiles.splice(j, 1);\r\n        }\r\n    };\r\n    /* eslint-disable valid-jsdoc, jsdoc/require-param */\r\n    /**\r\n     * Remove the uploaded file from server manually by calling the remove URL action.\r\n     * If you pass an empty argument to this method, the complete file list can be cleared,\r\n     * otherwise remove the specific file based on its argument (“file_data”).\r\n     *\r\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to remove from file list/server.\r\n     * @param { boolean } customTemplate - Set true if the component rendering with customize template.\r\n     * @param { boolean } removeDirectly - Set true if files remove without removing event.\r\n     * @param { boolean } postRawFile - Set false, to post file name only to the remove action.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.remove = function (fileData, customTemplate, removeDirectly, postRawFile, args) {\r\n        var _this = this;\r\n        if (isNullOrUndefined(postRawFile)) {\r\n            postRawFile = true;\r\n        }\r\n        var eventArgs = {\r\n            event: args,\r\n            cancel: false,\r\n            filesData: [],\r\n            customFormData: [],\r\n            postRawFile: postRawFile,\r\n            currentRequest: null\r\n        };\r\n        var beforeEventArgs = {\r\n            cancel: false,\r\n            customFormData: [],\r\n            currentRequest: null\r\n        };\r\n        this.trigger('beforeRemove', beforeEventArgs, function (beforeEventArgs) {\r\n            if (!beforeEventArgs.cancel) {\r\n                if (_this.isFormUpload()) {\r\n                    eventArgs.filesData = fileData;\r\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\r\n                        if (!eventArgs.cancel) {\r\n                            var removingFiles = _this.getFilesInArray(fileData);\r\n                            var isLiRemoved = false;\r\n                            var liIndex = void 0;\r\n                            for (var _i = 0, removingFiles_1 = removingFiles; _i < removingFiles_1.length; _i++) {\r\n                                var data = removingFiles_1[_i];\r\n                                if (!isLiRemoved) {\r\n                                    liIndex = _this.fileList.indexOf(data.list);\r\n                                }\r\n                                if (liIndex > -1) {\r\n                                    var inputElement = !isNullOrUndefined(data.input) ? data.input : null;\r\n                                    if (inputElement) {\r\n                                        detach(inputElement);\r\n                                    }\r\n                                    _this.spliceFiles(liIndex);\r\n                                    detach(_this.fileList[liIndex]);\r\n                                    _this.fileList.splice(liIndex, 1);\r\n                                    isLiRemoved = true;\r\n                                    liIndex = -1;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                else if (_this.isForm && (isNullOrUndefined(_this.asyncSettings.removeUrl) || _this.asyncSettings.removeUrl === '')) {\r\n                    eventArgs.filesData = _this.getFilesData();\r\n                    _this.trigger('removing', eventArgs, function (eventArgs) {\r\n                        if (!eventArgs.cancel) {\r\n                            _this.clearAll();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    var removeFiles = [];\r\n                    fileData = !isNullOrUndefined(fileData) ? fileData : _this.filesData;\r\n                    if (fileData instanceof Array) {\r\n                        removeFiles = fileData;\r\n                    }\r\n                    else {\r\n                        removeFiles.push(fileData);\r\n                    }\r\n                    eventArgs.filesData = removeFiles;\r\n                    var removeUrl = _this.asyncSettings.removeUrl;\r\n                    var validUrl = (removeUrl === '' || isNullOrUndefined(removeUrl)) ? false : true;\r\n                    var _loop_5 = function (files) {\r\n                        var fileUploadedIndex = _this.uploadedFilesData.indexOf(files);\r\n                        if ((files.statusCode === '2' || files.statusCode === '4' || (files.statusCode === '0' &&\r\n                            fileUploadedIndex !== -1)) && validUrl) {\r\n                            _this.removeUploadedFile(files, eventArgs, removeDirectly, customTemplate);\r\n                        }\r\n                        else {\r\n                            if (!removeDirectly) {\r\n                                _this.trigger('removing', eventArgs, function (eventArgs) {\r\n                                    if (!eventArgs.cancel) {\r\n                                        _this.removeFilesData(files, customTemplate);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else {\r\n                                _this.removeFilesData(files, customTemplate);\r\n                            }\r\n                        }\r\n                        if (args && !args.target.classList.contains(REMOVE_ICON)) {\r\n                            _this.checkActionComplete(false);\r\n                        }\r\n                    };\r\n                    for (var _i = 0, removeFiles_1 = removeFiles; _i < removeFiles_1.length; _i++) {\r\n                        var files = removeFiles_1[_i];\r\n                        _loop_5(files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /* eslint-enable valid-jsdoc, jsdoc/require-param */\r\n    /**\r\n     * Clear all the file entries from list that can be uploaded files or added in upload queue.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.clearAll = function () {\r\n        var _this = this;\r\n        if (isNullOrUndefined(this.listParent)) {\r\n            if (this.browserName !== 'msie') {\r\n                this.element.value = '';\r\n            }\r\n            this.filesData = [];\r\n            return;\r\n        }\r\n        var eventArgs = {\r\n            cancel: false,\r\n            filesData: this.filesData\r\n        };\r\n        this.trigger('clearing', eventArgs, function (eventArgs) {\r\n            if (!eventArgs.cancel) {\r\n                _this.clearData();\r\n                _this.actionCompleteCount = 0;\r\n                _this.count = -1;\r\n            }\r\n        });\r\n    };\r\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\r\n    /**\r\n     * Get the data of files which are shown in file list.\r\n     *\r\n     * @param { number } index - specifies the file list item(li) index.\r\n     * @returns {FileInfo[]}\r\n     */\r\n    Uploader.prototype.getFilesData = function (index) {\r\n        if (isNullOrUndefined(index)) {\r\n            return this.filesData;\r\n        }\r\n        else {\r\n            return this.getSelectedFiles(index);\r\n        }\r\n    };\r\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\r\n    /**\r\n     * Pauses the in-progress chunked upload based on the file data.\r\n     *\r\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to pause from uploading.\r\n     * @param { boolean } custom - Set true if used custom UI.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.pause = function (fileData, custom) {\r\n        fileData = fileData ? fileData : this.filesData;\r\n        var fileDataFiles = this.getFilesInArray(fileData);\r\n        this.pauseUploading(fileDataFiles, custom);\r\n    };\r\n    Uploader.prototype.pauseUploading = function (fileData, custom) {\r\n        var files = this.getFiles(fileData);\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (files[i].statusCode === '3') {\r\n                this.pauseUpload(this.getCurrentMetaData(files[i], null), null, custom);\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.getFiles = function (fileData) {\r\n        var files = [];\r\n        if (!isNullOrUndefined(fileData) && !(fileData instanceof Array)) {\r\n            files.push(fileData);\r\n        }\r\n        else {\r\n            files = fileData;\r\n        }\r\n        return files;\r\n    };\r\n    /**\r\n     * Resumes the chunked upload that is previously paused based on the file data.\r\n     *\r\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to resume the paused file.\r\n     * @param { boolean } custom - Set true if used custom UI.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.resume = function (fileData, custom) {\r\n        fileData = fileData ? fileData : this.filesData;\r\n        var fileDataFiles = this.getFilesInArray(fileData);\r\n        this.resumeFiles(fileDataFiles, custom);\r\n    };\r\n    Uploader.prototype.resumeFiles = function (fileData, custom) {\r\n        var files = this.getFiles(fileData);\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (files[i].statusCode === '4') {\r\n                this.resumeUpload(this.getCurrentMetaData(files[i], null), null, custom);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Retries the canceled or failed file upload based on the file data.\r\n     *\r\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to retry the canceled or failed file.\r\n     * @param { boolean } fromcanceledStage - Set true to retry from canceled stage and set false to retry from initial stage.\r\n     * @param {boolean} custom -Specifies whether the uploader is rendered with custom file list.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.retry = function (fileData, fromcanceledStage, custom) {\r\n        fileData = fileData ? fileData : this.filesData;\r\n        var fileDataFiles = this.getFilesInArray(fileData);\r\n        if (this.sequentialUpload && this.isFirstFileOnSelection) {\r\n            this.isFirstFileOnSelection = false;\r\n        }\r\n        this.retryFailedFiles(fileDataFiles, fromcanceledStage, custom);\r\n    };\r\n    Uploader.prototype.retryFailedFiles = function (fileData, fromcanceledStage, custom) {\r\n        var files = this.getFiles(fileData);\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (files[i].statusCode === '5' || files[i].statusCode === '0') {\r\n                if (this.asyncSettings.chunkSize > 0) {\r\n                    this.retryUpload(this.getCurrentMetaData(files[i], null), fromcanceledStage);\r\n                }\r\n                else {\r\n                    var liElement = void 0;\r\n                    if (!custom) {\r\n                        liElement = this.fileList[this.filesData.indexOf(files[i])];\r\n                    }\r\n                    this.reloadcanceledFile(null, files[i], liElement, custom);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Stops the in-progress chunked upload based on the file data.\r\n     * When the file upload is canceled, the partially uploaded file is removed from server.\r\n     *\r\n     * @param { FileInfo | FileInfo[] } fileData - specifies the files data to cancel the progressing file.\r\n     * @returns {void}\r\n     */\r\n    Uploader.prototype.cancel = function (fileData) {\r\n        fileData = fileData ? fileData : this.filesData;\r\n        var cancelingFiles = this.getFilesInArray(fileData);\r\n        this.cancelUpload(cancelingFiles);\r\n    };\r\n    Uploader.prototype.cancelUpload = function (fileData) {\r\n        var files = this.getFiles(fileData);\r\n        if (this.asyncSettings.chunkSize > 0) {\r\n            for (var i = 0; i < files.length; i++) {\r\n                if (files[i].statusCode === '3') {\r\n                    var metaData = this.getCurrentMetaData(files[i], null);\r\n                    metaData.file.statusCode = '5';\r\n                    metaData.file.status = this.localizedTexts('fileUploadCancel');\r\n                    this.updateMetaData(metaData);\r\n                    this.showHideUploadSpinner(files[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < files.length; i++) {\r\n                if (files[i].statusCode === '3') {\r\n                    files[i].statusCode = '5';\r\n                    files[i].status = this.localizedTexts('fileUploadCancel');\r\n                    this.showHideUploadSpinner(files[i]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Uploader.prototype.showHideUploadSpinner = function (files) {\r\n        var liElement = this.getLiElement(files);\r\n        if (!isNullOrUndefined(liElement) && isNullOrUndefined(this.template)) {\r\n            var spinnerTarget = liElement.querySelector('.' + ABORT_ICON);\r\n            createSpinner({ target: spinnerTarget, width: '20px' });\r\n            showSpinner(spinnerTarget);\r\n        }\r\n    };\r\n    __decorate([\r\n        Complex({ saveUrl: '', removeUrl: '' }, AsyncSettings)\r\n    ], Uploader.prototype, \"asyncSettings\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Uploader.prototype, \"sequentialUpload\", void 0);\r\n    __decorate([\r\n        Property({})\r\n    ], Uploader.prototype, \"htmlAttributes\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Uploader.prototype, \"cssClass\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Uploader.prototype, \"enabled\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Uploader.prototype, \"template\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Uploader.prototype, \"multiple\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Uploader.prototype, \"autoUpload\", void 0);\r\n    __decorate([\r\n        Complex({}, ButtonsProps)\r\n    ], Uploader.prototype, \"buttons\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Uploader.prototype, \"allowedExtensions\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Uploader.prototype, \"minFileSize\", void 0);\r\n    __decorate([\r\n        Property(30000000)\r\n    ], Uploader.prototype, \"maxFileSize\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Uploader.prototype, \"dropArea\", void 0);\r\n    __decorate([\r\n        Collection([{}], FilesProp)\r\n    ], Uploader.prototype, \"files\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Uploader.prototype, \"showFileList\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Uploader.prototype, \"directoryUpload\", void 0);\r\n    __decorate([\r\n        Property('Default')\r\n    ], Uploader.prototype, \"dropEffect\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"created\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"actionComplete\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"rendering\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"beforeUpload\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"fileListRendering\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"selected\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"uploading\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"success\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"failure\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"removing\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"beforeRemove\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"clearing\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"progress\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"change\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"chunkSuccess\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"chunkFailure\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"chunkUploading\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"canceling\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"pausing\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], Uploader.prototype, \"resuming\", void 0);\r\n    Uploader = __decorate([\r\n        NotifyPropertyChanges\r\n    ], Uploader);\r\n    return Uploader;\r\n}(Component));\r\nexport { Uploader };\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n"]},"metadata":{},"sourceType":"module"}