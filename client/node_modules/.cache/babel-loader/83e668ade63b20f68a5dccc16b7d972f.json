{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/utils\n */\nimport { LabeledFieldView, createLabeledInputText } from 'ckeditor5/src/ui';\n/**\n * Creates integrations object that will be passed to the\n * {@link module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n *\n * @returns {Object.<String, module:ui/view~View>} Integrations object.\n */\n\nexport function prepareIntegrations(editor) {\n  const panelItems = editor.config.get('image.insert.integrations');\n  const imageInsertUIPlugin = editor.plugins.get('ImageInsertUI');\n  const PREDEFINED_INTEGRATIONS = {\n    'insertImageViaUrl': createLabeledInputView(editor.locale)\n  };\n\n  if (!panelItems) {\n    return PREDEFINED_INTEGRATIONS;\n  } // Prepares ckfinder component for the `openCKFinder` integration token.\n\n\n  if (panelItems.find(item => item === 'openCKFinder') && editor.ui.componentFactory.has('ckfinder')) {\n    const ckFinderButton = editor.ui.componentFactory.create('ckfinder');\n    ckFinderButton.set({\n      withText: true,\n      class: 'ck-image-insert__ck-finder-button'\n    }); // We want to close the dropdown panel view when user clicks the ckFinderButton.\n\n    ckFinderButton.delegate('execute').to(imageInsertUIPlugin, 'cancel');\n    PREDEFINED_INTEGRATIONS.openCKFinder = ckFinderButton;\n  } // Creates integrations object of valid views to pass it to the ImageInsertPanelView.\n\n\n  return panelItems.reduce((object, key) => {\n    if (PREDEFINED_INTEGRATIONS[key]) {\n      object[key] = PREDEFINED_INTEGRATIONS[key];\n    } else if (editor.ui.componentFactory.has(key)) {\n      object[key] = editor.ui.componentFactory.create(key);\n    }\n\n    return object;\n  }, {});\n}\n/**\n * Creates labeled field view.\n *\n * @param {module:utils/locale~Locale} locale The localization services instance.\n *\n * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n */\n\nexport function createLabeledInputView(locale) {\n  const t = locale.t;\n  const labeledInputView = new LabeledFieldView(locale, createLabeledInputText);\n  labeledInputView.set({\n    label: t('Insert image via URL')\n  });\n  labeledInputView.fieldView.placeholder = 'https://example.com/image.png';\n  return labeledInputView;\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-image/src/imageinsert/utils.js"],"names":["LabeledFieldView","createLabeledInputText","prepareIntegrations","editor","panelItems","config","get","imageInsertUIPlugin","plugins","PREDEFINED_INTEGRATIONS","createLabeledInputView","locale","find","item","ui","componentFactory","has","ckFinderButton","create","set","withText","class","delegate","to","openCKFinder","reduce","object","key","t","labeledInputView","label","fieldView","placeholder"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,gBAAT,EAA2BC,sBAA3B,QAAyD,kBAAzD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA8BC,MAA9B,EAAuC;AAC7C,QAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAmB,2BAAnB,CAAnB;AACA,QAAMC,mBAAmB,GAAGJ,MAAM,CAACK,OAAP,CAAeF,GAAf,CAAoB,eAApB,CAA5B;AAEA,QAAMG,uBAAuB,GAAG;AAC/B,yBAAqBC,sBAAsB,CAAEP,MAAM,CAACQ,MAAT;AADZ,GAAhC;;AAIA,MAAK,CAACP,UAAN,EAAmB;AAClB,WAAOK,uBAAP;AACA,GAV4C,CAY7C;;;AACA,MAAKL,UAAU,CAACQ,IAAX,CAAiBC,IAAI,IAAIA,IAAI,KAAK,cAAlC,KAAsDV,MAAM,CAACW,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgC,UAAhC,CAA3D,EAA0G;AACzG,UAAMC,cAAc,GAAGd,MAAM,CAACW,EAAP,CAAUC,gBAAV,CAA2BG,MAA3B,CAAmC,UAAnC,CAAvB;AACAD,IAAAA,cAAc,CAACE,GAAf,CAAoB;AACnBC,MAAAA,QAAQ,EAAE,IADS;AAEnBC,MAAAA,KAAK,EAAE;AAFY,KAApB,EAFyG,CAOzG;;AACAJ,IAAAA,cAAc,CAACK,QAAf,CAAyB,SAAzB,EAAqCC,EAArC,CAAyChB,mBAAzC,EAA8D,QAA9D;AAEAE,IAAAA,uBAAuB,CAACe,YAAxB,GAAuCP,cAAvC;AACA,GAxB4C,CA0B7C;;;AACA,SAAOb,UAAU,CAACqB,MAAX,CAAmB,CAAEC,MAAF,EAAUC,GAAV,KAAmB;AAC5C,QAAKlB,uBAAuB,CAAEkB,GAAF,CAA5B,EAAsC;AACrCD,MAAAA,MAAM,CAAEC,GAAF,CAAN,GAAgBlB,uBAAuB,CAAEkB,GAAF,CAAvC;AACA,KAFD,MAEO,IAAKxB,MAAM,CAACW,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgCW,GAAhC,CAAL,EAA6C;AACnDD,MAAAA,MAAM,CAAEC,GAAF,CAAN,GAAgBxB,MAAM,CAACW,EAAP,CAAUC,gBAAV,CAA2BG,MAA3B,CAAmCS,GAAnC,CAAhB;AACA;;AAED,WAAOD,MAAP;AACA,GARM,EAQJ,EARI,CAAP;AASA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAShB,sBAAT,CAAiCC,MAAjC,EAA0C;AAChD,QAAMiB,CAAC,GAAGjB,MAAM,CAACiB,CAAjB;AACA,QAAMC,gBAAgB,GAAG,IAAI7B,gBAAJ,CAAsBW,MAAtB,EAA8BV,sBAA9B,CAAzB;AAEA4B,EAAAA,gBAAgB,CAACV,GAAjB,CAAsB;AACrBW,IAAAA,KAAK,EAAEF,CAAC,CAAE,sBAAF;AADa,GAAtB;AAGAC,EAAAA,gBAAgB,CAACE,SAAjB,CAA2BC,WAA3B,GAAyC,+BAAzC;AAEA,SAAOH,gBAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/utils\n */\n\nimport { LabeledFieldView, createLabeledInputText } from 'ckeditor5/src/ui';\n\n/**\n * Creates integrations object that will be passed to the\n * {@link module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n *\n * @returns {Object.<String, module:ui/view~View>} Integrations object.\n */\nexport function prepareIntegrations( editor ) {\n\tconst panelItems = editor.config.get( 'image.insert.integrations' );\n\tconst imageInsertUIPlugin = editor.plugins.get( 'ImageInsertUI' );\n\n\tconst PREDEFINED_INTEGRATIONS = {\n\t\t'insertImageViaUrl': createLabeledInputView( editor.locale )\n\t};\n\n\tif ( !panelItems ) {\n\t\treturn PREDEFINED_INTEGRATIONS;\n\t}\n\n\t// Prepares ckfinder component for the `openCKFinder` integration token.\n\tif ( panelItems.find( item => item === 'openCKFinder' ) && editor.ui.componentFactory.has( 'ckfinder' ) ) {\n\t\tconst ckFinderButton = editor.ui.componentFactory.create( 'ckfinder' );\n\t\tckFinderButton.set( {\n\t\t\twithText: true,\n\t\t\tclass: 'ck-image-insert__ck-finder-button'\n\t\t} );\n\n\t\t// We want to close the dropdown panel view when user clicks the ckFinderButton.\n\t\tckFinderButton.delegate( 'execute' ).to( imageInsertUIPlugin, 'cancel' );\n\n\t\tPREDEFINED_INTEGRATIONS.openCKFinder = ckFinderButton;\n\t}\n\n\t// Creates integrations object of valid views to pass it to the ImageInsertPanelView.\n\treturn panelItems.reduce( ( object, key ) => {\n\t\tif ( PREDEFINED_INTEGRATIONS[ key ] ) {\n\t\t\tobject[ key ] = PREDEFINED_INTEGRATIONS[ key ];\n\t\t} else if ( editor.ui.componentFactory.has( key ) ) {\n\t\t\tobject[ key ] = editor.ui.componentFactory.create( key );\n\t\t}\n\n\t\treturn object;\n\t}, {} );\n}\n\n/**\n * Creates labeled field view.\n *\n * @param {module:utils/locale~Locale} locale The localization services instance.\n *\n * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n */\nexport function createLabeledInputView( locale ) {\n\tconst t = locale.t;\n\tconst labeledInputView = new LabeledFieldView( locale, createLabeledInputText );\n\n\tlabeledInputView.set( {\n\t\tlabel: t( 'Insert image via URL' )\n\t} );\n\tlabeledInputView.fieldView.placeholder = 'https://example.com/image.png';\n\n\treturn labeledInputView;\n}\n"]},"metadata":{},"sourceType":"module"}