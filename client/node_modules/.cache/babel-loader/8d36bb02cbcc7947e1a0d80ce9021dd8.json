{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule SyntheticClipboardEvent\r\n * @typechecks static-only\r\n */\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/clipboard-apis/\r\n */\n\n\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n/**\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {string} dispatchMarker Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @extends {SyntheticUIEvent}\r\n */\n\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\nmodule.exports = SyntheticClipboardEvent;","map":{"version":3,"sources":["F:/Administrator/Documents/Code for fun/Web/Project Introduction to SE/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/SyntheticClipboardEvent.js"],"names":["SyntheticEvent","require","ClipboardEventInterface","clipboardData","event","window","SyntheticClipboardEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;AAEA;AACA;AACA;AACA;;;AACA,IAAIC,uBAAuB,GAAG;AAC5BC,EAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiB;AAC9B,WAAO,mBAAmBA,KAAnB,GAA2BA,KAAK,CAACD,aAAjC,GAAiDE,MAAM,CAACF,aAA/D;AACD;AAH2B,CAA9B;AAMA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,uBAAT,CAAiCC,cAAjC,EAAiDC,cAAjD,EAAiEC,WAAjE,EAA8EC,iBAA9E,EAAiG;AAC/FV,EAAAA,cAAc,CAACW,IAAf,CAAoB,IAApB,EAA0BJ,cAA1B,EAA0CC,cAA1C,EAA0DC,WAA1D,EAAuEC,iBAAvE;AACD;;AAEDV,cAAc,CAACY,YAAf,CAA4BN,uBAA5B,EAAqDJ,uBAArD;AAEAW,MAAM,CAACC,OAAP,GAAiBR,uBAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule SyntheticClipboardEvent\r\n * @typechecks static-only\r\n */\r\n\r\n'use strict';\r\n\r\nvar SyntheticEvent = require('./SyntheticEvent');\r\n\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/clipboard-apis/\r\n */\r\nvar ClipboardEventInterface = {\r\n  clipboardData: function (event) {\r\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\r\n  }\r\n};\r\n\r\n/**\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {string} dispatchMarker Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @extends {SyntheticUIEvent}\r\n */\r\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\r\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\r\n}\r\n\r\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\r\n\r\nmodule.exports = SyntheticClipboardEvent;"]},"metadata":{},"sourceType":"script"}