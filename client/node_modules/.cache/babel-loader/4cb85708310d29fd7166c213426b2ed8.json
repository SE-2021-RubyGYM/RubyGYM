{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule escapeTextContentForBrowser\r\n */\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n/**\r\n * Escapes text to prevent scripting attacks.\r\n *\r\n * @param {*} text Text value to escape.\r\n * @return {string} An escaped string.\r\n */\n\n\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;","map":{"version":3,"sources":["F:/Administrator/Documents/Code for fun/Web/Project Introduction to SE/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/escapeTextContentForBrowser.js"],"names":["ESCAPE_LOOKUP","ESCAPE_REGEX","escaper","match","escapeTextContentForBrowser","text","replace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAG;AAClB,OAAK,OADa;AAElB,OAAK,MAFa;AAGlB,OAAK,MAHa;AAIlB,OAAK,QAJa;AAKlB,QAAM;AALY,CAApB;AAQA,IAAIC,YAAY,GAAG,UAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,SAAOH,aAAa,CAACG,KAAD,CAApB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,2BAAT,CAAqCC,IAArC,EAA2C;AACzC,SAAO,CAAC,KAAKA,IAAN,EAAYC,OAAZ,CAAoBL,YAApB,EAAkCC,OAAlC,CAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBJ,2BAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule escapeTextContentForBrowser\r\n */\r\n\r\n'use strict';\r\n\r\nvar ESCAPE_LOOKUP = {\r\n  '&': '&amp;',\r\n  '>': '&gt;',\r\n  '<': '&lt;',\r\n  '\"': '&quot;',\r\n  '\\'': '&#x27;'\r\n};\r\n\r\nvar ESCAPE_REGEX = /[&><\"']/g;\r\n\r\nfunction escaper(match) {\r\n  return ESCAPE_LOOKUP[match];\r\n}\r\n\r\n/**\r\n * Escapes text to prevent scripting attacks.\r\n *\r\n * @param {*} text Text value to escape.\r\n * @return {string} An escaped string.\r\n */\r\nfunction escapeTextContentForBrowser(text) {\r\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\r\n}\r\n\r\nmodule.exports = escapeTextContentForBrowser;"]},"metadata":{},"sourceType":"script"}