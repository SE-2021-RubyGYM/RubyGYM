{"ast":null,"code":"/**\r\n * Copyright 2014-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactServerRenderingTransaction\r\n * @typechecks\r\n */\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar CallbackQueue = require('./CallbackQueue');\n\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n/**\r\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\r\n * during the performing of the transaction.\r\n */\n\n\nvar ON_DOM_READY_QUEUEING = {\n  /**\r\n   * Initializes the internal `onDOMReady` queue.\r\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n  close: emptyFunction\n};\n/**\r\n * Executed within the scope of the `Transaction` instance. Consider these as\r\n * being member methods, but with an implied ordering while being isolated from\r\n * each other.\r\n */\n\nvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\n/**\r\n * @class ReactServerRenderingTransaction\r\n * @param {boolean} renderToStaticMarkup\r\n */\n\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = false;\n}\n\nvar Mixin = {\n  /**\r\n   * @see Transaction\r\n   * @abstract\r\n   * @final\r\n   * @return {array} Empty list of operation wrap procedures.\r\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\r\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\r\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\r\n   * `PooledClass` looks for this, and will invoke this before allowing this\r\n   * instance to be reused.\r\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\nmodule.exports = ReactServerRenderingTransaction;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/react/lib/ReactServerRenderingTransaction.js"],"names":["PooledClass","require","CallbackQueue","Transaction","assign","emptyFunction","ON_DOM_READY_QUEUEING","initialize","reactMountReady","reset","close","TRANSACTION_WRAPPERS","ReactServerRenderingTransaction","renderToStaticMarkup","reinitializeTransaction","getPooled","useCreateElement","Mixin","getTransactionWrappers","getReactMountReady","destructor","release","prototype","addPoolingTo","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,wBAAD,CAA3B;AAEA;AACA;AACA;AACA;;;AACA,IAAIK,qBAAqB,GAAG;AAC1B;AACF;AACA;AACEC,EAAAA,UAAU,EAAE,YAAY;AACtB,SAAKC,eAAL,CAAqBC,KAArB;AACD,GANyB;AAQ1BC,EAAAA,KAAK,EAAEL;AARmB,CAA5B;AAWA;AACA;AACA;AACA;AACA;;AACA,IAAIM,oBAAoB,GAAG,CAACL,qBAAD,CAA3B;AAEA;AACA;AACA;AACA;;AACA,SAASM,+BAAT,CAAyCC,oBAAzC,EAA+D;AAC7D,OAAKC,uBAAL;AACA,OAAKD,oBAAL,GAA4BA,oBAA5B;AACA,OAAKL,eAAL,GAAuBN,aAAa,CAACa,SAAd,CAAwB,IAAxB,CAAvB;AACA,OAAKC,gBAAL,GAAwB,KAAxB;AACD;;AAED,IAAIC,KAAK,GAAG;AACV;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE,YAAY;AAClC,WAAOP,oBAAP;AACD,GATS;;AAWV;AACF;AACA;AACEQ,EAAAA,kBAAkB,EAAE,YAAY;AAC9B,WAAO,KAAKX,eAAZ;AACD,GAhBS;;AAkBV;AACF;AACA;AACA;AACEY,EAAAA,UAAU,EAAE,YAAY;AACtBlB,IAAAA,aAAa,CAACmB,OAAd,CAAsB,KAAKb,eAA3B;AACA,SAAKA,eAAL,GAAuB,IAAvB;AACD;AAzBS,CAAZ;AA4BAJ,MAAM,CAACQ,+BAA+B,CAACU,SAAjC,EAA4CnB,WAAW,CAACc,KAAxD,EAA+DA,KAA/D,CAAN;AAEAjB,WAAW,CAACuB,YAAZ,CAAyBX,+BAAzB;AAEAY,MAAM,CAACC,OAAP,GAAiBb,+BAAjB","sourcesContent":["/**\r\n * Copyright 2014-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactServerRenderingTransaction\r\n * @typechecks\r\n */\r\n\r\n'use strict';\r\n\r\nvar PooledClass = require('./PooledClass');\r\nvar CallbackQueue = require('./CallbackQueue');\r\nvar Transaction = require('./Transaction');\r\n\r\nvar assign = require('./Object.assign');\r\nvar emptyFunction = require('fbjs/lib/emptyFunction');\r\n\r\n/**\r\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\r\n * during the performing of the transaction.\r\n */\r\nvar ON_DOM_READY_QUEUEING = {\r\n  /**\r\n   * Initializes the internal `onDOMReady` queue.\r\n   */\r\n  initialize: function () {\r\n    this.reactMountReady.reset();\r\n  },\r\n\r\n  close: emptyFunction\r\n};\r\n\r\n/**\r\n * Executed within the scope of the `Transaction` instance. Consider these as\r\n * being member methods, but with an implied ordering while being isolated from\r\n * each other.\r\n */\r\nvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\r\n\r\n/**\r\n * @class ReactServerRenderingTransaction\r\n * @param {boolean} renderToStaticMarkup\r\n */\r\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\r\n  this.reinitializeTransaction();\r\n  this.renderToStaticMarkup = renderToStaticMarkup;\r\n  this.reactMountReady = CallbackQueue.getPooled(null);\r\n  this.useCreateElement = false;\r\n}\r\n\r\nvar Mixin = {\r\n  /**\r\n   * @see Transaction\r\n   * @abstract\r\n   * @final\r\n   * @return {array} Empty list of operation wrap procedures.\r\n   */\r\n  getTransactionWrappers: function () {\r\n    return TRANSACTION_WRAPPERS;\r\n  },\r\n\r\n  /**\r\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\r\n   */\r\n  getReactMountReady: function () {\r\n    return this.reactMountReady;\r\n  },\r\n\r\n  /**\r\n   * `PooledClass` looks for this, and will invoke this before allowing this\r\n   * instance to be reused.\r\n   */\r\n  destructor: function () {\r\n    CallbackQueue.release(this.reactMountReady);\r\n    this.reactMountReady = null;\r\n  }\r\n};\r\n\r\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\r\n\r\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\r\n\r\nmodule.exports = ReactServerRenderingTransaction;"]},"metadata":{},"sourceType":"script"}