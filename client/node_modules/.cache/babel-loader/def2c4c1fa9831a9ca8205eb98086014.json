{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule hyphenate\r\n * @typechecks\r\n */\n'use strict';\n\nvar _uppercasePattern = /([A-Z])/g;\n/**\r\n * Hyphenates a camelcased string, for example:\r\n *\r\n *   > hyphenate('backgroundColor')\r\n *   < \"background-color\"\r\n *\r\n * For CSS style names, use `hyphenateStyleName` instead which works properly\r\n * with all vendor prefixes, including `ms`.\r\n *\r\n * @param {string} string\r\n * @return {string}\r\n */\n\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/fbjs/lib/hyphenate.js"],"names":["_uppercasePattern","hyphenate","string","replace","toLowerCase","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,iBAAiB,GAAG,UAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAOA,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkC,KAAlC,EAAyCI,WAAzC,EAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBL,SAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule hyphenate\r\n * @typechecks\r\n */\r\n\r\n'use strict';\r\n\r\nvar _uppercasePattern = /([A-Z])/g;\r\n\r\n/**\r\n * Hyphenates a camelcased string, for example:\r\n *\r\n *   > hyphenate('backgroundColor')\r\n *   < \"background-color\"\r\n *\r\n * For CSS style names, use `hyphenateStyleName` instead which works properly\r\n * with all vendor prefixes, including `ms`.\r\n *\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nfunction hyphenate(string) {\r\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\r\n}\r\n\r\nmodule.exports = hyphenate;"]},"metadata":{},"sourceType":"script"}