{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findDOMNode\r\n * @typechecks static-only\r\n */\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar ReactMount = require('./ReactMount');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar warning = require('fbjs/lib/warning');\n/**\r\n * Returns the DOM node rendered by this element.\r\n *\r\n * @param {ReactComponent|DOMElement} componentOrElement\r\n * @return {?DOMElement} The root node of this element.\r\n */\n\n\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n\n  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\n}\n\nmodule.exports = findDOMNode;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/react/lib/findDOMNode.js"],"names":["ReactCurrentOwner","require","ReactInstanceMap","ReactMount","invariant","warning","findDOMNode","componentOrElement","process","env","NODE_ENV","owner","current","_warnedAboutRefsInRender","getName","undefined","nodeType","has","getNodeFromInstance","render","Object","keys","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,kBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,WAAT,CAAqBC,kBAArB,EAAyC;AACvC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIC,KAAK,GAAGX,iBAAiB,CAACY,OAA9B;;AACA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCL,OAAO,CAACM,KAAK,CAACE,wBAAP,EAAiC,oEAAoE,mEAApE,GAA0I,oEAA1I,GAAiN,iEAAjN,GAAqR,6BAAtT,EAAqVF,KAAK,CAACG,OAAN,MAAmB,aAAxW,CAA/C,GAAwaC,SAAxa;AACAJ,MAAAA,KAAK,CAACE,wBAAN,GAAiC,IAAjC;AACD;AACF;;AACD,MAAIN,kBAAkB,IAAI,IAA1B,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAIA,kBAAkB,CAACS,QAAnB,KAAgC,CAApC,EAAuC;AACrC,WAAOT,kBAAP;AACD;;AACD,MAAIL,gBAAgB,CAACe,GAAjB,CAAqBV,kBAArB,CAAJ,EAA8C;AAC5C,WAAOJ,UAAU,CAACe,mBAAX,CAA+BX,kBAA/B,CAAP;AACD;;AACD,IAAEA,kBAAkB,CAACY,MAAnB,IAA6B,IAA7B,IAAqC,OAAOZ,kBAAkB,CAACY,MAA1B,KAAqC,UAA5E,IAA0FX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,SAAS,CAAC,KAAD,EAAQ,mDAAR,CAAjD,GAAgHA,SAAS,CAAC,KAAD,CAAnN,GAA6NW,SAA7N;AACA,GAAC,KAAD,GAASP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,SAAS,CAAC,KAAD,EAAQ,qEAAR,EAA+EgB,MAAM,CAACC,IAAP,CAAYd,kBAAZ,CAA/E,CAAjD,GAAmKH,SAAS,CAAC,KAAD,CAArL,GAA+LW,SAA/L;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule findDOMNode\r\n * @typechecks static-only\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\r\nvar ReactInstanceMap = require('./ReactInstanceMap');\r\nvar ReactMount = require('./ReactMount');\r\n\r\nvar invariant = require('fbjs/lib/invariant');\r\nvar warning = require('fbjs/lib/warning');\r\n\r\n/**\r\n * Returns the DOM node rendered by this element.\r\n *\r\n * @param {ReactComponent|DOMElement} componentOrElement\r\n * @return {?DOMElement} The root node of this element.\r\n */\r\nfunction findDOMNode(componentOrElement) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    var owner = ReactCurrentOwner.current;\r\n    if (owner !== null) {\r\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\r\n      owner._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n  if (componentOrElement == null) {\r\n    return null;\r\n  }\r\n  if (componentOrElement.nodeType === 1) {\r\n    return componentOrElement;\r\n  }\r\n  if (ReactInstanceMap.has(componentOrElement)) {\r\n    return ReactMount.getNodeFromInstance(componentOrElement);\r\n  }\r\n  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\r\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\r\n}\r\n\r\nmodule.exports = findDOMNode;"]},"metadata":{},"sourceType":"script"}