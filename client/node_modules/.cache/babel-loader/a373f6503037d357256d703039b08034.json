{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport SplitOperation from '../operation/splitoperation';\nimport MergeOperation from '../operation/mergeoperation';\nconst operations = {};\noperations[AttributeOperation.className] = AttributeOperation;\noperations[InsertOperation.className] = InsertOperation;\noperations[MarkerOperation.className] = MarkerOperation;\noperations[MoveOperation.className] = MoveOperation;\noperations[NoOperation.className] = NoOperation;\noperations[Operation.className] = Operation;\noperations[RenameOperation.className] = RenameOperation;\noperations[RootAttributeOperation.className] = RootAttributeOperation;\noperations[SplitOperation.className] = SplitOperation;\noperations[MergeOperation.className] = MergeOperation;\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\n\nexport default class OperationFactory {\n  /**\n   * Creates an operation instance from a JSON object (parsed JSON string).\n   *\n   * @param {Object} json Deserialized JSON object.\n   * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n   * @returns {module:engine/model/operation/operation~Operation}\n   */\n  static fromJSON(json, document) {\n    return operations[json.__className].fromJSON(json, document);\n  }\n\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operationfactory.js"],"names":["AttributeOperation","InsertOperation","MarkerOperation","MoveOperation","NoOperation","Operation","RenameOperation","RootAttributeOperation","SplitOperation","MergeOperation","operations","className","OperationFactory","fromJSON","json","document","__className"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,MAAMC,UAAU,GAAG,EAAnB;AACAA,UAAU,CAAEV,kBAAkB,CAACW,SAArB,CAAV,GAA6CX,kBAA7C;AACAU,UAAU,CAAET,eAAe,CAACU,SAAlB,CAAV,GAA0CV,eAA1C;AACAS,UAAU,CAAER,eAAe,CAACS,SAAlB,CAAV,GAA0CT,eAA1C;AACAQ,UAAU,CAAEP,aAAa,CAACQ,SAAhB,CAAV,GAAwCR,aAAxC;AACAO,UAAU,CAAEN,WAAW,CAACO,SAAd,CAAV,GAAsCP,WAAtC;AACAM,UAAU,CAAEL,SAAS,CAACM,SAAZ,CAAV,GAAoCN,SAApC;AACAK,UAAU,CAAEJ,eAAe,CAACK,SAAlB,CAAV,GAA0CL,eAA1C;AACAI,UAAU,CAAEH,sBAAsB,CAACI,SAAzB,CAAV,GAAiDJ,sBAAjD;AACAG,UAAU,CAAEF,cAAc,CAACG,SAAjB,CAAV,GAAyCH,cAAzC;AACAE,UAAU,CAAED,cAAc,CAACE,SAAjB,CAAV,GAAyCF,cAAzC;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMG,gBAAN,CAAuB;AACrC;AACD;AACA;AACA;AACA;AACA;AACA;AACgB,SAARC,QAAQ,CAAEC,IAAF,EAAQC,QAAR,EAAmB;AACjC,WAAOL,UAAU,CAAEI,IAAI,CAACE,WAAP,CAAV,CAA+BH,QAA/B,CAAyCC,IAAzC,EAA+CC,QAA/C,CAAP;AACA;;AAVoC","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operationfactory\n */\n\nimport AttributeOperation from '../operation/attributeoperation';\nimport InsertOperation from '../operation/insertoperation';\nimport MarkerOperation from '../operation/markeroperation';\nimport MoveOperation from '../operation/moveoperation';\nimport NoOperation from '../operation/nooperation';\nimport Operation from '../operation/operation';\nimport RenameOperation from '../operation/renameoperation';\nimport RootAttributeOperation from '../operation/rootattributeoperation';\nimport SplitOperation from '../operation/splitoperation';\nimport MergeOperation from '../operation/mergeoperation';\n\nconst operations = {};\noperations[ AttributeOperation.className ] = AttributeOperation;\noperations[ InsertOperation.className ] = InsertOperation;\noperations[ MarkerOperation.className ] = MarkerOperation;\noperations[ MoveOperation.className ] = MoveOperation;\noperations[ NoOperation.className ] = NoOperation;\noperations[ Operation.className ] = Operation;\noperations[ RenameOperation.className ] = RenameOperation;\noperations[ RootAttributeOperation.className ] = RootAttributeOperation;\noperations[ SplitOperation.className ] = SplitOperation;\noperations[ MergeOperation.className ] = MergeOperation;\n\n/**\n * A factory class for creating operations.\n *\n * @abstract\n */\nexport default class OperationFactory {\n\t/**\n\t * Creates an operation instance from a JSON object (parsed JSON string).\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/operation~Operation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\treturn operations[ json.__className ].fromJSON( json, document );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}