{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/ui/imageinsertformrowview\n */\nimport { View } from 'ckeditor5/src/ui';\nimport '../../../theme/imageinsertformrowview.css';\n/**\n * The class representing a single row in a complex form,\n * used by {@link module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView}.\n *\n * **Note**: For now this class is private. When more use cases appear (beyond `ckeditor5-table` and `ckeditor5-image`),\n * it will become a component in `ckeditor5-ui`.\n *\n * @private\n * @extends module:ui/view~View\n */\n\nexport default class ImageUploadFormRowView extends View {\n  /**\n   * Creates an instance of the form row class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance.\n   * @param {Object} options\n   * @param {Array.<module:ui/view~View>} [options.children]\n   * @param {String} [options.class]\n   * @param {module:ui/view~View} [options.labelView] When passed, the row gets the `group` and `aria-labelledby`\n   * DOM attributes and gets described by the label.\n   */\n  constructor(locale) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n    this.set('class', options.class || null);\n    /**\n     * A collection of row items (buttons, dropdowns, etc.).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.children = this.createCollection();\n\n    if (options.children) {\n      options.children.forEach(child => this.children.add(child));\n    }\n    /**\n     * The role property reflected by the `role` DOM attribute of the {@link #element}.\n     *\n     * **Note**: Used only when a `labelView` is passed to constructor `options`.\n     *\n     * @private\n     * @observable\n     * @member {String} #role\n     */\n\n\n    this.set('_role', null);\n    /**\n     * The ARIA property reflected by the `aria-labelledby` DOM attribute of the {@link #element}.\n     *\n     * **Note**: Used only when a `labelView` is passed to constructor `options`.\n     *\n     * @private\n     * @observable\n     * @member {String} #ariaLabelledBy\n     */\n\n    this.set('_ariaLabelledBy', null);\n\n    if (options.labelView) {\n      this.set({\n        _role: 'group',\n        _ariaLabelledBy: options.labelView.id\n      });\n    }\n\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-form__row', bind.to('class')],\n        role: bind.to('_role'),\n        'aria-labelledby': bind.to('_ariaLabelledBy')\n      },\n      children: this.children\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-image/src/imageinsert/ui/imageinsertformrowview.js"],"names":["View","ImageUploadFormRowView","constructor","locale","options","bind","bindTemplate","set","class","children","createCollection","forEach","child","add","labelView","_role","_ariaLabelledBy","id","setTemplate","tag","attributes","to","role"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,IAAT,QAAqB,kBAArB;AAEA,OAAO,2CAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCD,IAArC,CAA0C;AACxD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAAEC,MAAF,EAAyB;AAAA,QAAfC,OAAe,uEAAL,EAAK;AACnC,UAAOD,MAAP;AAEA,UAAME,IAAI,GAAG,KAAKC,YAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,GAAL,CAAU,OAAV,EAAmBH,OAAO,CAACI,KAAR,IAAiB,IAApC;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,QAAL,GAAgB,KAAKC,gBAAL,EAAhB;;AAEA,QAAKN,OAAO,CAACK,QAAb,EAAwB;AACvBL,MAAAA,OAAO,CAACK,QAAR,CAAiBE,OAAjB,CAA0BC,KAAK,IAAI,KAAKH,QAAL,CAAcI,GAAd,CAAmBD,KAAnB,CAAnC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,SAAKL,GAAL,CAAU,OAAV,EAAmB,IAAnB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKA,GAAL,CAAU,iBAAV,EAA6B,IAA7B;;AAEA,QAAKH,OAAO,CAACU,SAAb,EAAyB;AACxB,WAAKP,GAAL,CAAU;AACTQ,QAAAA,KAAK,EAAE,OADE;AAETC,QAAAA,eAAe,EAAEZ,OAAO,CAACU,SAAR,CAAkBG;AAF1B,OAAV;AAIA;;AAED,SAAKC,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,KADY;AAEjBC,MAAAA,UAAU,EAAE;AACXZ,QAAAA,KAAK,EAAE,CACN,IADM,EAEN,cAFM,EAGNH,IAAI,CAACgB,EAAL,CAAS,OAAT,CAHM,CADI;AAMXC,QAAAA,IAAI,EAAEjB,IAAI,CAACgB,EAAL,CAAS,OAAT,CANK;AAOX,2BAAmBhB,IAAI,CAACgB,EAAL,CAAS,iBAAT;AAPR,OAFK;AAWjBZ,MAAAA,QAAQ,EAAE,KAAKA;AAXE,KAAlB;AAaA;;AA9EuD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageinsert/ui/imageinsertformrowview\n */\n\nimport { View } from 'ckeditor5/src/ui';\n\nimport '../../../theme/imageinsertformrowview.css';\n\n/**\n * The class representing a single row in a complex form,\n * used by {@link module:image/imageinsert/ui/imageinsertpanelview~ImageInsertPanelView}.\n *\n * **Note**: For now this class is private. When more use cases appear (beyond `ckeditor5-table` and `ckeditor5-image`),\n * it will become a component in `ckeditor5-ui`.\n *\n * @private\n * @extends module:ui/view~View\n */\nexport default class ImageUploadFormRowView extends View {\n\t/**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Object} options\n\t * @param {Array.<module:ui/view~View>} [options.children]\n\t * @param {String} [options.class]\n\t * @param {module:ui/view~View} [options.labelView] When passed, the row gets the `group` and `aria-labelledby`\n\t * DOM attributes and gets described by the label.\n\t */\n\tconstructor( locale, options = {} ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class', options.class || null );\n\n\t\t/**\n\t\t * A collection of row items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tif ( options.children ) {\n\t\t\toptions.children.forEach( child => this.children.add( child ) );\n\t\t}\n\n\t\t/**\n\t\t * The role property reflected by the `role` DOM attribute of the {@link #element}.\n\t\t *\n\t\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t\t *\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String} #role\n\t\t */\n\t\tthis.set( '_role', null );\n\n\t\t/**\n\t\t * The ARIA property reflected by the `aria-labelledby` DOM attribute of the {@link #element}.\n\t\t *\n\t\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t\t *\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String} #ariaLabelledBy\n\t\t */\n\t\tthis.set( '_ariaLabelledBy', null );\n\n\t\tif ( options.labelView ) {\n\t\t\tthis.set( {\n\t\t\t\t_role: 'group',\n\t\t\t\t_ariaLabelledBy: options.labelView.id\n\t\t\t} );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form__row',\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\t\t\t\trole: bind.to( '_role' ),\n\t\t\t\t'aria-labelledby': bind.to( '_ariaLabelledBy' )\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}