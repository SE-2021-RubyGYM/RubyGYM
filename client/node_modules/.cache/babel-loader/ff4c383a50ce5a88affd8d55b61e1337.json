{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/arrowkeysobserver\n */\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport { isArrowKeyCode } from '@ckeditor/ckeditor5-utils';\n/**\n * Arrow keys observer introduces the {@link module:engine/view/document~Document#event:arrowKey `Document#arrowKey`} event.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nexport default class ArrowKeysObserver extends Observer {\n  /**\n   * @inheritDoc\n   */\n  constructor(view) {\n    super(view);\n    this.document.on('keydown', (event, data) => {\n      if (this.isEnabled && isArrowKeyCode(data.keyCode)) {\n        const eventInfo = new BubblingEventInfo(this.document, 'arrowKey', this.document.selection.getFirstRange());\n        this.document.fire(eventInfo, data);\n\n        if (eventInfo.stop.called) {\n          event.stop();\n        }\n      }\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  observe() {}\n\n}\n/**\n * Event fired when the user presses an arrow keys.\n *\n * Introduced by {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver}.\n *\n * Note that because {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:arrowKey\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/arrowkeysobserver.js"],"names":["Observer","BubblingEventInfo","isArrowKeyCode","ArrowKeysObserver","constructor","view","document","on","event","data","isEnabled","keyCode","eventInfo","selection","getFirstRange","fire","stop","called","observe"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,iBAAN,SAAgCH,QAAhC,CAAyC;AACvD;AACD;AACA;AACCI,EAAAA,WAAW,CAAEC,IAAF,EAAS;AACnB,UAAOA,IAAP;AAEA,SAAKC,QAAL,CAAcC,EAAd,CAAkB,SAAlB,EAA6B,CAAEC,KAAF,EAASC,IAAT,KAAmB;AAC/C,UAAK,KAAKC,SAAL,IAAkBR,cAAc,CAAEO,IAAI,CAACE,OAAP,CAArC,EAAwD;AACvD,cAAMC,SAAS,GAAG,IAAIX,iBAAJ,CAAuB,KAAKK,QAA5B,EAAsC,UAAtC,EAAkD,KAAKA,QAAL,CAAcO,SAAd,CAAwBC,aAAxB,EAAlD,CAAlB;AAEA,aAAKR,QAAL,CAAcS,IAAd,CAAoBH,SAApB,EAA+BH,IAA/B;;AAEA,YAAKG,SAAS,CAACI,IAAV,CAAeC,MAApB,EAA6B;AAC5BT,UAAAA,KAAK,CAACQ,IAAN;AACA;AACD;AACD,KAVD;AAWA;AAED;AACD;AACA;;;AACCE,EAAAA,OAAO,GAAG,CAAE;;AAvB2C;AA0BxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/arrowkeysobserver\n */\n\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\n\nimport { isArrowKeyCode } from '@ckeditor/ckeditor5-utils';\n\n/**\n * Arrow keys observer introduces the {@link module:engine/view/document~Document#event:arrowKey `Document#arrowKey`} event.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ArrowKeysObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.document.on( 'keydown', ( event, data ) => {\n\t\t\tif ( this.isEnabled && isArrowKeyCode( data.keyCode ) ) {\n\t\t\t\tconst eventInfo = new BubblingEventInfo( this.document, 'arrowKey', this.document.selection.getFirstRange() );\n\n\t\t\t\tthis.document.fire( eventInfo, data );\n\n\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\tevent.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve() {}\n}\n\n/**\n * Event fired when the user presses an arrow keys.\n *\n * Introduced by {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver}.\n *\n * Note that because {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:arrowKey\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n"]},"metadata":{},"sourceType":"module"}