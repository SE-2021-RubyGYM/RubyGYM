{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactChildren\r\n */\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\nvar userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n}\n/**\r\n * PooledClass representing the bookkeeping associated with performing a child\r\n * traversal. Allows avoiding binding callbacks.\r\n *\r\n * @constructor ForEachBookKeeping\r\n * @param {!function} forEachFunction Function to perform traversal with.\r\n * @param {?*} forEachContext Context to perform context with.\r\n */\n\n\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\n\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\n\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n/**\r\n * PooledClass representing the bookkeeping associated with performing a child\r\n * mapping. Allows avoiding binding callbacks.\r\n *\r\n * @constructor MapBookKeeping\r\n * @param {!*} mapResult Object containing the ordered map of results.\r\n * @param {!function} mapFunction Function to perform mapping with.\r\n * @param {?*} mapContext Context to perform mapping with.\r\n */\n\n\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\n\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\n\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result;\n  var keyPrefix = bookKeeping.keyPrefix;\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * The provided mapFunction(child, key, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\n\n\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\nmodule.exports = ReactChildren;","map":{"version":3,"sources":["F:/Administrator/Documents/Code for fun/Web/Project Introduction to SE/RubyGYM/client/node_modules/jsx-to-string/node_modules/react/lib/ReactChildren.js"],"names":["PooledClass","require","ReactElement","emptyFunction","traverseAllChildren","twoArgumentPooler","fourArgumentPooler","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","replace","ForEachBookKeeping","forEachFunction","forEachContext","func","context","count","prototype","destructor","addPoolingTo","forEachSingleChild","bookKeeping","child","name","call","forEachChildren","children","forEachFunc","traverseContext","getPooled","release","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","result","mapSingleChildIntoContext","childKey","mappedChild","Array","isArray","mapIntoWithKeyPrefixInternal","thatReturnsArgument","isValidElement","cloneAndReplaceKey","key","push","array","prefix","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","toArray","ReactChildren","forEach","map","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactChildren\r\n */\r\n\r\n'use strict';\r\n\r\nvar PooledClass = require('./PooledClass');\r\nvar ReactElement = require('./ReactElement');\r\n\r\nvar emptyFunction = require('fbjs/lib/emptyFunction');\r\nvar traverseAllChildren = require('./traverseAllChildren');\r\n\r\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\r\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\r\n\r\nvar userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\r\nfunction escapeUserProvidedKey(text) {\r\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\r\n}\r\n\r\n/**\r\n * PooledClass representing the bookkeeping associated with performing a child\r\n * traversal. Allows avoiding binding callbacks.\r\n *\r\n * @constructor ForEachBookKeeping\r\n * @param {!function} forEachFunction Function to perform traversal with.\r\n * @param {?*} forEachContext Context to perform context with.\r\n */\r\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\r\n  this.func = forEachFunction;\r\n  this.context = forEachContext;\r\n  this.count = 0;\r\n}\r\nForEachBookKeeping.prototype.destructor = function () {\r\n  this.func = null;\r\n  this.context = null;\r\n  this.count = 0;\r\n};\r\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\r\n\r\nfunction forEachSingleChild(bookKeeping, child, name) {\r\n  var func = bookKeeping.func;\r\n  var context = bookKeeping.context;\r\n\r\n  func.call(context, child, bookKeeping.count++);\r\n}\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(children, forEachFunc, forEachContext) {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\r\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\r\n  ForEachBookKeeping.release(traverseContext);\r\n}\r\n\r\n/**\r\n * PooledClass representing the bookkeeping associated with performing a child\r\n * mapping. Allows avoiding binding callbacks.\r\n *\r\n * @constructor MapBookKeeping\r\n * @param {!*} mapResult Object containing the ordered map of results.\r\n * @param {!function} mapFunction Function to perform mapping with.\r\n * @param {?*} mapContext Context to perform mapping with.\r\n */\r\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\r\n  this.result = mapResult;\r\n  this.keyPrefix = keyPrefix;\r\n  this.func = mapFunction;\r\n  this.context = mapContext;\r\n  this.count = 0;\r\n}\r\nMapBookKeeping.prototype.destructor = function () {\r\n  this.result = null;\r\n  this.keyPrefix = null;\r\n  this.func = null;\r\n  this.context = null;\r\n  this.count = 0;\r\n};\r\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\r\n\r\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\r\n  var result = bookKeeping.result;\r\n  var keyPrefix = bookKeeping.keyPrefix;\r\n  var func = bookKeeping.func;\r\n  var context = bookKeeping.context;\r\n\r\n  var mappedChild = func.call(context, child, bookKeeping.count++);\r\n  if (Array.isArray(mappedChild)) {\r\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\r\n  } else if (mappedChild != null) {\r\n    if (ReactElement.isValidElement(mappedChild)) {\r\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\r\n      // Keep both the (mapped) and old keys if they differ, just as\r\n      // traverseAllChildren used to do for objects as children\r\n      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\r\n    }\r\n    result.push(mappedChild);\r\n  }\r\n}\r\n\r\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\r\n  var escapedPrefix = '';\r\n  if (prefix != null) {\r\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\r\n  }\r\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\r\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\r\n  MapBookKeeping.release(traverseContext);\r\n}\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * The provided mapFunction(child, key, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(children, func, context) {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  var result = [];\r\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\r\n  return result;\r\n}\r\n\r\nfunction forEachSingleChildDummy(traverseContext, child, name) {\r\n  return null;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children, context) {\r\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n */\r\nfunction toArray(children) {\r\n  var result = [];\r\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\r\n  return result;\r\n}\r\n\r\nvar ReactChildren = {\r\n  forEach: forEachChildren,\r\n  map: mapChildren,\r\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\r\n  count: countChildren,\r\n  toArray: toArray\r\n};\r\n\r\nmodule.exports = ReactChildren;"]},"metadata":{},"sourceType":"script"}