{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule memoizeStringOnly\r\n * @typechecks static-only\r\n */\n'use strict';\n/**\r\n * Memoizes the return value of a function that accepts one string argument.\r\n *\r\n * @param {function} callback\r\n * @return {function}\r\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;","map":{"version":3,"sources":["F:/Administrator/Documents/Code for fun/Web/Project Introduction to SE/RubyGYM/client/node_modules/jsx-to-string/node_modules/fbjs/lib/memoizeStringOnly.js"],"names":["memoizeStringOnly","callback","cache","string","hasOwnProperty","call","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAIC,KAAK,GAAG,EAAZ;AACA,SAAO,UAAUC,MAAV,EAAkB;AACvB,QAAI,CAACD,KAAK,CAACE,cAAN,CAAqBD,MAArB,CAAL,EAAmC;AACjCD,MAAAA,KAAK,CAACC,MAAD,CAAL,GAAgBF,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBF,MAApB,CAAhB;AACD;;AACD,WAAOD,KAAK,CAACC,MAAD,CAAZ;AACD,GALD;AAMD;;AAEDG,MAAM,CAACC,OAAP,GAAiBP,iBAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule memoizeStringOnly\r\n * @typechecks static-only\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Memoizes the return value of a function that accepts one string argument.\r\n *\r\n * @param {function} callback\r\n * @return {function}\r\n */\r\nfunction memoizeStringOnly(callback) {\r\n  var cache = {};\r\n  return function (string) {\r\n    if (!cache.hasOwnProperty(string)) {\r\n      cache[string] = callback.call(this, string);\r\n    }\r\n    return cache[string];\r\n  };\r\n}\r\n\r\nmodule.exports = memoizeStringOnly;"]},"metadata":{},"sourceType":"script"}