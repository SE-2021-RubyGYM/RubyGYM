{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule flattenChildren\r\n */\n'use strict';\n\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar warning = require('fbjs/lib/warning');\n/**\r\n * @param {function} traverseContext Context passed through traversal.\r\n * @param {?ReactComponent} child React child component.\r\n * @param {!string} name String name of key path to child.\r\n */\n\n\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = result[name] === undefined;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n/**\r\n * Flattens children that are typically specified as `props.children`. Any null\r\n * children will not be included in the resulting object.\r\n * @return {!object} flattened children keyed by name.\r\n */\n\n\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/react/lib/flattenChildren.js"],"names":["traverseAllChildren","require","warning","flattenSingleChildIntoContext","traverseContext","child","name","result","keyUnique","undefined","process","env","NODE_ENV","flattenChildren","children","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASE,6BAAT,CAAuCC,eAAvC,EAAwDC,KAAxD,EAA+DC,IAA/D,EAAqE;AACnE;AACA,MAAIC,MAAM,GAAGH,eAAb;AACA,MAAII,SAAS,GAAGD,MAAM,CAACD,IAAD,CAAN,KAAiBG,SAAjC;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,OAAO,CAACM,SAAD,EAAY,uEAAuE,uEAAvE,GAAiJ,+BAA7J,EAA8LF,IAA9L,CAA/C,GAAqPG,SAArP;AACD;;AACD,MAAID,SAAS,IAAIH,KAAK,IAAI,IAA1B,EAAgC;AAC9BE,IAAAA,MAAM,CAACD,IAAD,CAAN,GAAeD,KAAf;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASQ,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,MAAIP,MAAM,GAAG,EAAb;AACAP,EAAAA,mBAAmB,CAACc,QAAD,EAAWX,6BAAX,EAA0CI,MAA1C,CAAnB;AACA,SAAOA,MAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBH,eAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule flattenChildren\r\n */\r\n\r\n'use strict';\r\n\r\nvar traverseAllChildren = require('./traverseAllChildren');\r\nvar warning = require('fbjs/lib/warning');\r\n\r\n/**\r\n * @param {function} traverseContext Context passed through traversal.\r\n * @param {?ReactComponent} child React child component.\r\n * @param {!string} name String name of key path to child.\r\n */\r\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\r\n  // We found a component instance.\r\n  var result = traverseContext;\r\n  var keyUnique = result[name] === undefined;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\r\n  }\r\n  if (keyUnique && child != null) {\r\n    result[name] = child;\r\n  }\r\n}\r\n\r\n/**\r\n * Flattens children that are typically specified as `props.children`. Any null\r\n * children will not be included in the resulting object.\r\n * @return {!object} flattened children keyed by name.\r\n */\r\nfunction flattenChildren(children) {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  var result = {};\r\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\r\n  return result;\r\n}\r\n\r\nmodule.exports = flattenChildren;"]},"metadata":{},"sourceType":"script"}