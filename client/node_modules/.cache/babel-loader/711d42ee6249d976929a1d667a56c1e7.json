{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEventEmitterMixin\r\n */\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n  /**\r\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\r\n   * opportunity to create `ReactEvent`s to be dispatched.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {object} topLevelTarget The listening component root node.\r\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\r\n   * @param {object} nativeEvent Native environment event.\r\n   */\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\nmodule.exports = ReactEventEmitterMixin;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/react/lib/ReactEventEmitterMixin.js"],"names":["EventPluginHub","require","runEventQueueInBatch","events","enqueueEvents","processEventQueue","ReactEventEmitterMixin","handleTopLevel","topLevelType","topLevelTarget","topLevelTargetID","nativeEvent","nativeEventTarget","extractEvents","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACpCH,EAAAA,cAAc,CAACI,aAAf,CAA6BD,MAA7B;AACAH,EAAAA,cAAc,CAACK,iBAAf,CAAiC,KAAjC;AACD;;AAED,IAAIC,sBAAsB,GAAG;AAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,cAAc,EAAE,UAAUC,YAAV,EAAwBC,cAAxB,EAAwCC,gBAAxC,EAA0DC,WAA1D,EAAuEC,iBAAvE,EAA0F;AACxG,QAAIT,MAAM,GAAGH,cAAc,CAACa,aAAf,CAA6BL,YAA7B,EAA2CC,cAA3C,EAA2DC,gBAA3D,EAA6EC,WAA7E,EAA0FC,iBAA1F,CAAb;AACAV,IAAAA,oBAAoB,CAACC,MAAD,CAApB;AACD;AAd0B,CAA7B;AAiBAW,MAAM,CAACC,OAAP,GAAiBT,sBAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactEventEmitterMixin\r\n */\r\n\r\n'use strict';\r\n\r\nvar EventPluginHub = require('./EventPluginHub');\r\n\r\nfunction runEventQueueInBatch(events) {\r\n  EventPluginHub.enqueueEvents(events);\r\n  EventPluginHub.processEventQueue(false);\r\n}\r\n\r\nvar ReactEventEmitterMixin = {\r\n\r\n  /**\r\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\r\n   * opportunity to create `ReactEvent`s to be dispatched.\r\n   *\r\n   * @param {string} topLevelType Record from `EventConstants`.\r\n   * @param {object} topLevelTarget The listening component root node.\r\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\r\n   * @param {object} nativeEvent Native environment event.\r\n   */\r\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\r\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\r\n    runEventQueueInBatch(events);\r\n  }\r\n};\r\n\r\nmodule.exports = ReactEventEmitterMixin;"]},"metadata":{},"sourceType":"script"}