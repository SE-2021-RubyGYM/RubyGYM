{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nvtung\\\\C\\xE1c project th\\u1EF1c hi\\u1EC7n\\\\RubyGYM\\\\client\\\\src\\\\component\\\\adminedituserform\\\\adminedituserform.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminEditUserForm(props) {\n  _s();\n\n  const [dataForm, setDataForm] = useState(props.data);\n  const [arrayToRender, setArrayToRender] = useState(props.data); // data\n\n  const handleInputFieldOnChange = (value, index) => {\n    var newDataForm = [...dataForm];\n    if (index < 0) return;\n    if (index >= newDataForm.length) return;\n    newDataForm[index].value = value;\n    setDataForm(newDataForm); // alert(value)\n  };\n\n  const inputField = (title, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '20%'\n          },\n          type: \"text\",\n          onChange: e => handleInputFieldOnChange(e.target.value, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSubmit = () => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/users/\",\n      data: {\n        name: getValueByTitleE(\"name\"),\n        phone: getValueByTitleE(\"phone\"),\n        username: getValueByTitleE(\"username\"),\n        password: getValueByTitleE(\"password\"),\n        paymentDay: getValueByTitleE(\"paymentDay\"),\n        birthDay: getValueByTitleE(\"birthDay\"),\n        gender: getValueByTitleE(\"gender\") // coach:getValueByTitleE('coach'),\n\n      }\n    }).then(res => {}).catch(res => {\n      console.log(res);\n    });\n    alert(getValueByTitleE(\"name\"));\n  };\n\n  const buttonField = title => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleSubmit(),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getValueByTitleE = titleE => {\n    for (var i = 0; i < dataForm.length; i++) {\n      if (dataForm[i].titleE == titleE) {\n        return dataForm[i].value;\n      }\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arrayToRender.map((element, index) => {\n        if (element.type == \"inputField\") {\n          return inputField(element.title, index);\n        } else {\n          if (element.type == \"buttonField\") {\n            return buttonField(element.title);\n          }\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminEditUserForm, \"duAMClvklfR9Hvnrn9veR4LKgk4=\");\n\n_c = AdminEditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminEditUserForm\");","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM/client/src/component/adminedituserform/adminedituserform.jsx"],"names":["useEffect","useState","axios","Input","Button","AdminEditUserForm","props","dataForm","setDataForm","data","arrayToRender","setArrayToRender","handleInputFieldOnChange","value","index","newDataForm","length","inputField","title","width","e","target","handleSubmit","method","url","name","getValueByTitleE","phone","username","password","paymentDay","birthDay","gender","then","res","catch","console","log","alert","buttonField","marginTop","titleE","i","map","element","type"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Input, Button } from \"antd\";\r\n\r\nexport default function AdminEditUserForm(props) {\r\n  const [dataForm, setDataForm] = useState(props.data);\r\n  const [arrayToRender, setArrayToRender] = useState(props.data); // data\r\n\r\n  const handleInputFieldOnChange = (value, index) => {\r\n    var newDataForm = [...dataForm];\r\n    if (index < 0) return;\r\n    if (index >= newDataForm.length) return;\r\n    newDataForm[index].value = value;\r\n    setDataForm(newDataForm);\r\n    // alert(value)\r\n  };\r\n\r\n  const inputField = (title, index) => {\r\n    return (\r\n      <div>\r\n        <div>{title}</div>\r\n        <div>\r\n          <Input style={{width:'20%'}}\r\n            type=\"text\"\r\n            onChange={(e) => handleInputFieldOnChange(e.target.value, index)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/api/users/\",\r\n      data: {\r\n        name: getValueByTitleE(\"name\"),\r\n        phone: getValueByTitleE(\"phone\"),\r\n        username: getValueByTitleE(\"username\"),\r\n        password: getValueByTitleE(\"password\"),\r\n        paymentDay: getValueByTitleE(\"paymentDay\"),\r\n        birthDay: getValueByTitleE(\"birthDay\"),\r\n        gender: getValueByTitleE(\"gender\"),\r\n        // coach:getValueByTitleE('coach'),\r\n      },\r\n    })\r\n      .then((res) => {})\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n    alert(getValueByTitleE(\"name\"));\r\n  };\r\n\r\n  const buttonField = (title) => {\r\n    return (\r\n      <div style={{marginTop:'20px'}}>\r\n        <Button onClick={() => handleSubmit()}>{title}</Button>\r\n      </div>\r\n    );\r\n  };\r\n  const getValueByTitleE = (titleE) => {\r\n    for (var i = 0; i < dataForm.length; i++) {\r\n      if (dataForm[i].titleE == titleE) {\r\n        return dataForm[i].value;\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {arrayToRender.map((element, index) => {\r\n          if (element.type == \"inputField\") {\r\n            return inputField(element.title, index);\r\n          } else {\r\n            if (element.type == \"buttonField\") {\r\n              return buttonField(element.title);\r\n            }\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}