{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\n\nexport default class BodyCollection extends ViewCollection {\n  /**\n   * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n   * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n   */\n  constructor(locale) {\n    let initialItems = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    super(initialItems);\n    /**\n     * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n     * See the view {@link module:ui/view~View#locale locale} property.\n     *\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = locale;\n  }\n  /**\n   * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n   * the body collection.\n   */\n\n\n  attachToDom() {\n    /**\n     * The element holding elements of the body region.\n     *\n     * @protected\n     * @member {HTMLElement} #_bodyCollectionContainer\n     */\n    this._bodyCollectionContainer = new Template({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-reset_all', 'ck-body', 'ck-rounded-corners'],\n        dir: this.locale.uiLanguageDirection\n      },\n      children: this\n    }).render();\n    let wrapper = document.querySelector('.ck-body-wrapper');\n\n    if (!wrapper) {\n      wrapper = createElement(document, 'div', {\n        class: 'ck-body-wrapper'\n      });\n      document.body.appendChild(wrapper);\n    }\n\n    wrapper.appendChild(this._bodyCollectionContainer);\n  }\n  /**\n   * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n   * anymore to clean-up the DOM structure.\n   */\n\n\n  detachFromDom() {\n    super.destroy();\n\n    if (this._bodyCollectionContainer) {\n      this._bodyCollectionContainer.remove();\n    }\n\n    const wrapper = document.querySelector('.ck-body-wrapper');\n\n    if (wrapper && wrapper.childElementCount == 0) {\n      wrapper.remove();\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/Project/nhap_mon_cnpm/my-app/node_modules/@ckeditor/ckeditor5-ui/src/editorui/bodycollection.js"],"names":["Template","ViewCollection","createElement","BodyCollection","constructor","locale","initialItems","attachToDom","_bodyCollectionContainer","tag","attributes","class","dir","uiLanguageDirection","children","render","wrapper","document","querySelector","body","appendChild","detachFromDom","destroy","remove","childElementCount"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAEA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,aAAP,MAA0B,iDAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,cAAN,SAA6BF,cAA7B,CAA4C;AAC1D;AACD;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAAEC,MAAF,EAA8B;AAAA,QAApBC,YAAoB,uEAAL,EAAK;AACxC,UAAOA,YAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKD,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;AACA;;;AACCE,EAAAA,WAAW,GAAG;AACb;AACF;AACA;AACA;AACA;AACA;AACE,SAAKC,wBAAL,GAAgC,IAAIR,QAAJ,CAAc;AAC7CS,MAAAA,GAAG,EAAE,KADwC;AAE7CC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,IADM,EAEN,cAFM,EAGN,SAHM,EAIN,oBAJM,CADI;AAOXC,QAAAA,GAAG,EAAE,KAAKP,MAAL,CAAYQ;AAPN,OAFiC;AAW7CC,MAAAA,QAAQ,EAAE;AAXmC,KAAd,EAY5BC,MAZ4B,EAAhC;AAcA,QAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAwB,kBAAxB,CAAd;;AAEA,QAAK,CAACF,OAAN,EAAgB;AACfA,MAAAA,OAAO,GAAGd,aAAa,CAAEe,QAAF,EAAY,KAAZ,EAAmB;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAnB,CAAvB;AACAM,MAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA2BJ,OAA3B;AACA;;AAEDA,IAAAA,OAAO,CAACI,WAAR,CAAqB,KAAKZ,wBAA1B;AACA;AAED;AACD;AACA;AACA;;;AACCa,EAAAA,aAAa,GAAG;AACf,UAAMC,OAAN;;AAEA,QAAK,KAAKd,wBAAV,EAAqC;AACpC,WAAKA,wBAAL,CAA8Be,MAA9B;AACA;;AAED,UAAMP,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAwB,kBAAxB,CAAhB;;AAEA,QAAKF,OAAO,IAAIA,OAAO,CAACQ,iBAAR,IAA6B,CAA7C,EAAiD;AAChDR,MAAAA,OAAO,CAACO,MAAR;AACA;AACD;;AAtEyD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\n/* globals document */\n\nimport Template from '../template';\nimport ViewCollection from '../viewcollection';\n\nimport createElement from '@ckeditor/ckeditor5-utils/src/dom/createelement';\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached\n * from the DOM structure of the editor, like panels, icons, etc.\n *\n * The body collection is available in the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n * These views will render in a container placed directly in the `<body>` element.\n * The editor will detach and destroy this collection when the editor will be {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * If you need to control the life cycle of the body collection on your own, you can create your own instance of this class.\n *\n * A body collection will render itself automatically in the DOM body element as soon as you call {@link ~BodyCollection#attachToDom}.\n * If you create multiple body collections, this class will create a special wrapper element in the DOM to limit the number of\n * elements created directly in the body and remove it when the last body collection will be\n * {@link ~BodyCollection#detachFromDom detached}.\n *\n * @extends module:ui/viewcollection~ViewCollection\n */\nexport default class BodyCollection extends ViewCollection {\n\t/**\n\t * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t * @param {Iterable.<module:ui/view~View>} [initialItems] The initial items of the collection.\n\t */\n\tconstructor( locale, initialItems = [] ) {\n\t\tsuper( initialItems );\n\n\t\t/**\n\t\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t\t * See the view {@link module:ui/view~View#locale locale} property.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\t}\n\n\t/**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */\n\tattachToDom() {\n\t\t/**\n\t\t * The element holding elements of the body region.\n\t\t *\n\t\t * @protected\n\t\t * @member {HTMLElement} #_bodyCollectionContainer\n\t\t */\n\t\tthis._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: this.locale.uiLanguageDirection\n\t\t\t},\n\t\t\tchildren: this\n\t\t} ).render();\n\n\t\tlet wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( !wrapper ) {\n\t\t\twrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\n\t\t\tdocument.body.appendChild( wrapper );\n\t\t}\n\n\t\twrapper.appendChild( this._bodyCollectionContainer );\n\t}\n\n\t/**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */\n\tdetachFromDom() {\n\t\tsuper.destroy();\n\n\t\tif ( this._bodyCollectionContainer ) {\n\t\t\tthis._bodyCollectionContainer.remove();\n\t\t}\n\n\t\tconst wrapper = document.querySelector( '.ck-body-wrapper' );\n\n\t\tif ( wrapper && wrapper.childElementCount == 0 ) {\n\t\t\twrapper.remove();\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}