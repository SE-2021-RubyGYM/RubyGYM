{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactComponentBrowserEnvironment\r\n */\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\nvar ReactMount = require('./ReactMount');\n/**\r\n * Abstracts away all functionality of the reconciler that requires knowledge of\r\n * the browser context. TODO: These callers should be refactored to avoid the\r\n * need for this injection.\r\n */\n\n\nvar ReactComponentBrowserEnvironment = {\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\r\n   * If a particular environment requires that some resources be cleaned up,\r\n   * specify this in the injected Mixin. In the DOM, we would likely want to\r\n   * purge any cached node ID lookups.\r\n   *\r\n   * @private\r\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n};\nmodule.exports = ReactComponentBrowserEnvironment;","map":{"version":3,"sources":["C:/Users/nvtung/Các project thực hiện/RubyGYM-master_test_2/client/node_modules/jsx-to-string/node_modules/react/lib/ReactComponentBrowserEnvironment.js"],"names":["ReactDOMIDOperations","require","ReactMount","ReactComponentBrowserEnvironment","processChildrenUpdates","dangerouslyProcessChildrenUpdates","replaceNodeWithMarkupByID","dangerouslyReplaceNodeWithMarkupByID","unmountIDFromEnvironment","rootNodeID","purgeID","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,gCAAgC,GAAG;AAErCC,EAAAA,sBAAsB,EAAEJ,oBAAoB,CAACK,iCAFR;AAIrCC,EAAAA,yBAAyB,EAAEN,oBAAoB,CAACO,oCAJX;;AAMrC;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,wBAAwB,EAAE,UAAUC,UAAV,EAAsB;AAC9CP,IAAAA,UAAU,CAACQ,OAAX,CAAmBD,UAAnB;AACD;AAfoC,CAAvC;AAmBAE,MAAM,CAACC,OAAP,GAAiBT,gCAAjB","sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule ReactComponentBrowserEnvironment\r\n */\r\n\r\n'use strict';\r\n\r\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\r\nvar ReactMount = require('./ReactMount');\r\n\r\n/**\r\n * Abstracts away all functionality of the reconciler that requires knowledge of\r\n * the browser context. TODO: These callers should be refactored to avoid the\r\n * need for this injection.\r\n */\r\nvar ReactComponentBrowserEnvironment = {\r\n\r\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\r\n\r\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\r\n\r\n  /**\r\n   * If a particular environment requires that some resources be cleaned up,\r\n   * specify this in the injected Mixin. In the DOM, we would likely want to\r\n   * purge any cached node ID lookups.\r\n   *\r\n   * @private\r\n   */\r\n  unmountIDFromEnvironment: function (rootNodeID) {\r\n    ReactMount.purgeID(rootNodeID);\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = ReactComponentBrowserEnvironment;"]},"metadata":{},"sourceType":"script"}